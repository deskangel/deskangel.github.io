<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DaRemote ssh终端模拟器反色问题调试记录</title>
      <link href="/2022/11/26/daremote-inverse-mode-issue-debug/"/>
      <url>/2022/11/26/daremote-inverse-mode-issue-debug/</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>用户报告在ssh终端下粘贴时显示不出内容。试了一下能复现，但为修复这个问题昨天还是差不多花了一整天时间。</p><h3 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h3><p>先是花了一个小时研究 <code>bracketed paste mode</code>，发现其实没关系。又花了差不多三小时找到问题是 <code>csi 7m</code>, <code>inverse mode</code> 处理的问题，改了一行代码后搞定。</p><h3 id="隐藏问题"><a href="#隐藏问题" class="headerlink" title="隐藏问题"></a>隐藏问题</h3><p>搞定后发现在<code>Last login</code>和<code>提示符</code>之间会显示一个反色的<code>%</code>，而且是所有的服务器都会显示这个字符。又足足花了两个小时 分析返回的字节，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[27, 91, 49, 109, 27, 91, 55, 109, 37, 27, 91, 50, 55, 109, 27, 91, 49, 109, 27, 91, 48, 109]</span><br><span class="line"> esc [    1  m    esc [    7   m   %   esc [   2    7   m   esc [   1    m   esc [    0   m</span><br><span class="line"></span><br><span class="line">[32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 13, 32, 13]</span><br><span class="line"></span><br><span class="line">[13, 27, 91, 48, 109, 27, 91, 50, 55, 109, 27, 91, 50, 52, 109, 27, 91, 74, 27, 91, 51, 50, 109, 126, 27, 91, 48, 49, 59, 51, 52, 109, 32, 27, 91, 48, 49, 59, 51, 53, 109, 187, 27, 91, 48, 48, 109, 32]</span><br><span class="line">esc [   0    m   esc [   2    7   m   esc  [  2   4    m   esc [   J   esc [   3   2    m   ~    esc [    0  1   ;   3   4   m    &quot; &quot; esc [   0    1  ;   3   5   m         esc  [  0   0    m</span><br><span class="line">[27, 91, 75]</span><br><span class="line">esc  [   K</span><br><span class="line">[27, 91, 63, 49, 104, 27, 61, 27, 91, 63, 50, 48, 48, 52, 104]</span><br><span class="line">esc [   ?   1    h   esc &#x3D;   esc [   ?   2    0  0   4    h</span><br></pre></td></tr></table></figure><p>最后的 <code>esc[?2004h</code>就是开启<code>bracketed paste mode</code>。感觉都没有问题啊，<code>esc[J</code>和<code>esc[K</code>也都是往后删除，删不了前面的 <code>%</code>。</p><h3 id="转折"><a href="#转折" class="headerlink" title="转折"></a>转折</h3><p>陷入困境的时候突然意识到，我所有的服务器都是用的<code>zsh</code>。<code>chsh -s /bin/bash</code>换成<code>bash</code>果然没有问题！</p><p>最后查到资料只需要在<code>.zshrc</code>中设置<code>unsetopt prompt_cr prompt_sp</code> 即可不显示 %。</p><p>又花两小时研究该设置，因为即使不在<code>.zshrc</code>中去掉这两个选项，其他终端模拟器也不会显示%。不过没什么收获，也许是什么特殊处理，有时间再研究。</p><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>回顾这个调试过程，其实粘贴不显示的问题一开始就意识到可能是反色的原因，但是思维定势用了一个错误的方法：既然深色背景浅色文字不显示，那换成浅色背景深色文字试试。😭</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> daremote </tag>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-keybinding</title>
      <link href="/2022/07/14/docker-keybinding/"/>
      <url>/2022/07/14/docker-keybinding/</url>
      
        <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>用 <code>docker</code> 这么久，有一个问题一直令人不爽：<code>ctrl+p</code> 向上翻行的时候，总会吞掉一行。</p><p>但因为容器只是用来作为运行环境，而且还可以用箭头来进行翻动，就一直留着没去解决它。</p><p>今天解决了一堆 <a href="https://play.google.com/store/apps/details?id=com.deskangel.daremote" target="_blank" rel="noopener">DaRemote</a> 关于 <code>Top 10 Processes</code> 的 bug，不想再继续写代码；而儿子又睡着，终于无聊得想来着手解决这个恼人的问题。</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>产生这个问题的原因非常简单：<code>docker</code> 容器的 <code>detach</code> 快捷键默认是 <code>ctrl+p, ctrl+q</code>。当系统收到第一个 第一个 <code>ctrl+p</code> 的时候，会等待后面的按钮来判断是否快捷键，如果后面的 <code>ctrl+q</code> 则无论按什么键都会把 <code>ctrl+p</code> 和后面的按钮一起发送。</p><p>所以，如果后面的按钮是 <code>ctrl+p</code> 或是是 <code>上下键</code> ，就会出现中间被吞掉一行的错觉。</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>解决方法也是非常简单：修改 <code>detachKeys</code> 的键绑定。它存储在 <code>~/.docker/config.json</code> 文件中（如果没有可以自己创建），如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"detachKeys"</span>: <span class="string">"ctrl-q,ctrl-q"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p><code>docker</code> 的另外一个问题，是使用 <code>docker attach</code> 进入某些容器时，不会出现提示符，需要再按任意键才行。<br>这个问题下次再研究。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>From /proc/meminfo to free</title>
      <link href="/2022/06/19/meminfo-to-free/"/>
      <url>/2022/06/19/meminfo-to-free/</url>
      
        <content type="html"><![CDATA[<p>How to calculate each field of the <code>free</code> command from <code>proc/meminfo</code>:</p><table><thead><tr><th>free</th><th>/proc/meminfo</th></tr></thead><tbody><tr><td>Mem total</td><td>MemTotal</td></tr><tr><td>Mem free</td><td>MemFree</td></tr><tr><td>Mem available</td><td>MemAvailable</td></tr><tr><td>Mem used</td><td>MemTotal - Buffers - (Cached + SReclaimable) - MemFree</td></tr><tr><td>Mem shared</td><td>Shmem</td></tr><tr><td>Mem buffers</td><td>Buffers</td></tr><tr><td>Mem cache</td><td>Cached + SReclaimable</td></tr><tr><td>Mem buffer/cache</td><td>Buffers + (Cached + SReclaimable)</td></tr><tr><td>Swap total</td><td>SwapTotal</td></tr><tr><td>Swap free</td><td>SwapFree</td></tr><tr><td>Swap used</td><td>SwapTotal - SwapFree</td></tr></tbody></table><ul><li>Note: For some distributions, like busybox, <code>SReclaimable</code> is not counted in <code>Mem cache</code>.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaRemote Q&amp;A[EN]</title>
      <link href="/2022/05/21/daremote-qa-en/"/>
      <url>/2022/05/21/daremote-qa-en/</url>
      
        <content type="html"><![CDATA[<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><h4 id="ssh-keys-format"><a href="#ssh-keys-format" class="headerlink" title="ssh keys format"></a>ssh keys format</h4><p><code>DaRemote</code> supports legacy <code>PEM</code> and the default private key/public key file format after <code>OpenSSH</code> v7.8. Other unsupported file formats need to be converted to such formats.<br>If the private key file cannot be selected in the file picker UI, remove the file extension and try again.</p><p>You can also generate key pairs directly in the app and deploy the keys to the server.</p><h4 id="Database-import-and-export"><a href="#Database-import-and-export" class="headerlink" title="Database import and export"></a>Database import and export</h4><p>The database can be exported to the <code>/storage/emulated/0/Documents/daremote</code> directory along with the current settings.</p><p>On Android 11+ systems, the exported database file may not be visible on the <code>import</code> page due to <code>read and write</code> access restrictions. If this is the case, click the <code>choose</code> button in the top right and navigate to the path in the pop-up app to select the db file.</p><h4 id="How-to-access-the-command-set-sftp-and-terminal-emulator"><a href="#How-to-access-the-command-set-sftp-and-terminal-emulator" class="headerlink" title="How to access the command set, sftp and terminal emulator"></a>How to access the command set, sftp and terminal emulator</h4><p>In the server list screen, click the label name of the server on the left to go directly to <code>Terminal Emulator</code>, and click the server version type on the right to go directly to <code>Command Set</code>.<br><img src="/images/daremote/daremote_brief_guide.png" alt="command set, sftp and term emulator"></p><h4 id="How-to-add-docker-containers"><a href="#How-to-add-docker-containers" class="headerlink" title="How to add docker containers"></a>How to add docker containers</h4><ol><li>Add a host with docker containers running</li><li>Change the os-type to Docker</li><li>Click the <code>Find Containers</code> button to find the running containers</li><li>Select the containers your want to add to <code>DaRemote</code> (multiple selection supported)</li><li>Click the <code>Save</code> button<br><img src="/images/daremote/daremote_docker.png" alt="How to add docker"></li></ol><h4 id="How-to-view-all-Docker-containers-in-a-server"><a href="#How-to-view-all-Docker-containers-in-a-server" class="headerlink" title="How to view all Docker containers in a server"></a>How to view all Docker containers in a server</h4><p>Unlike adding Docker containers to the main page as described above, the details page will display all created containers and allow you to control their running status.</p><ol><li>Select a server that has <code>Docker containers</code> on the main page.</li><li>Tap on any of the <code>CPU</code>, <code>Memory</code>, <code>Storage</code>, or <code>Network</code> icon to enter the details page.</li><li>Wait for the fifth small dot to appear next to the title.</li><li>Scroll to the end to see the list of Docker containers.</li></ol><p><em>If there are a lot of containers on the server, it may take a long time to display. If it doesn’t show up for a long time, try entering the details page again.</em></p><p><img src="/images/daremote/docker_container_details.jpg" alt="docker container details"></p><h4 id="Keyboard-legends-in-terminal-emulator"><a href="#Keyboard-legends-in-terminal-emulator" class="headerlink" title="Keyboard legends in terminal emulator"></a>Keyboard legends in terminal emulator</h4><p><img src="/images/daremote/daremote_keyboard.png" alt="Keybaord symbols"></p><h4 id="How-to-enable-log"><a href="#How-to-enable-log" class="headerlink" title="How to enable log"></a>How to enable log</h4><ol><li>Enable the <code>Log to File</code> setting in the side panel <code>Feedback</code>.</li><li>Click the <code>RUN</code> button of the server or container.</li><li>Do your operations untile all errors are saved to the log file.</li><li>Go back to the <code>Feedback</code> page, click the log file and check the content.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> daremote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P.Diary Q&amp;A</title>
      <link href="/2022/04/22/pdiary-qa/"/>
      <url>/2022/04/22/pdiary-qa/</url>
      
        <content type="html"><![CDATA[<h3 id="下载和购买"><a href="#下载和购买" class="headerlink" title="下载和购买"></a>下载和购买</h3><h4 id="一-无法在Google-play商店找到-P-Diary"><a href="#一-无法在Google-play商店找到-P-Diary" class="headerlink" title="一. 无法在Google play商店找到 P.Diary"></a>一. 无法在Google play商店找到 P.Diary</h4><p>可以直接访问：<a href="https://play.google.com/store/apps/details?id=com.deskangel.personal_diary" target="_blank" rel="noopener"><img src="https://lh3.googleusercontent.com/cjsqrWQKJQp9RFO7-hJ9AfpKzbUb_Y84vXfjlP0iRHBvladwAfXih984olktDhPnFqyZ0nu9A5jvFwOEQPXzv7hr3ce3QVsLN8kQ2Ao=s0" alt="Google play"></a></p><p>如果没有显示App，可能是因为您当前的<code>Google play</code>账号设置的地区不支持付费应用。您可以修改账号的国家/地区设置，或者使用一个新的没有设置地区的账号。</p><h4 id="二-无法查询价格"><a href="#二-无法查询价格" class="headerlink" title="二. 无法查询价格"></a>二. 无法查询价格</h4><p>打开 <code>P.Diary</code> 的购买高级版本页面后显示错误，无法查询到价格，可以尝试清除 <code>Google Play服务</code>, <code>Google Play商店</code>的数据，同时<em>彻底退出</em><code>P.Diary</code>应用并重新进入（如果系统设置中允许<code>P.Diary</code>在后台运行，在多任务管理器中关闭应用可能无法彻底退出，此时可以在系统设置的应用管理中找到<code>P.Diary</code>然后点击<code>强制退出</code>按钮。您也可以重启手机。）。<br><img src="/images/google_play_apps.jpg" alt="Google play"></p><p>请检查系统是否允许<code>Google Play服务</code>, <code>Google Play商店</code>在后台运行。</p><h4 id="三-无法在Google-play商店进行支付"><a href="#三-无法在Google-play商店进行支付" class="headerlink" title="三. 无法在Google play商店进行支付"></a>三. 无法在Google play商店进行支付</h4><p>如果您没有在<code>Google play</code>商店绑定银行卡或者其他支付方式，以至于无法购买高级版本，可以联系开发者通过<code>微信</code>、<code>Paypal</code>等支付渠道购买兑换码。联系方式可以通过 <code>P.Diary</code> 的<code>关于页面</code>中获得。</p><h4 id="四-其他情况"><a href="#四-其他情况" class="headerlink" title="四. 其他情况"></a>四. 其他情况</h4><p>如果您在<code>Google play</code>商店同时添加了多个账号，可以尝试只保留下载了<code>P.Diary</code>应用的那个账号后再试。</p><h4 id="五-如何使用兑换码"><a href="#五-如何使用兑换码" class="headerlink" title="五. 如何使用兑换码"></a>五. 如何使用兑换码</h4><p><code>Google play</code>的兑换码可以在<code>P.Diary</code>中购买高级版本时的弹出菜单中输入使用，也可以在<code>Google play</code>商店应用的<code>付款和订阅</code>菜单项或者<code>兑换</code>菜单项中使用（视版本不同而定）。</p><table><thead><tr><th>购买时兑换</th><th>Google Play中兑换</th></tr></thead><tbody><tr><td><img src="/images/use_code_in_app.jpg" alt="购买时兑换" height="50%"></td><td><img src="/images/use_code_in_gp.jpg" alt="Google Play中兑换" height="50%"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> pdiary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改Ubuntu登录界面的语言</title>
      <link href="/2021/08/10/change-ubuntu-login-screen-language/"/>
      <url>/2021/08/10/change-ubuntu-login-screen-language/</url>
      
        <content type="html"><![CDATA[<p>通常我们修改语言设置是在 <code>Settings-&gt;Region &amp; Language</code>，这里不光修改语言，还可以修改输入法。但是你会发现，有时你在这里修改了语言后，登录界面的语言并不会改变。</p><p>登录界面的语言设置在什么地方修改呢？ 下面这个地方：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/default/locale</span><br></pre></td></tr></table></figure><p>该文件内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LANG&#x3D;en_US.UTF-8</span><br><span class="line">LANGUAGE&#x3D;en_US.UTF-7</span><br><span class="line">LC_NUMERIC&#x3D;en_US.UTF-8</span><br><span class="line">LC_TIME&#x3D;en_US.UTF-8</span><br><span class="line">LC_MONETARY&#x3D;en_US.UTF-8</span><br><span class="line">LC_PAPER&#x3D;en_US.UTF-8</span><br><span class="line">LC_NAME&#x3D;en_US.UTF-8</span><br><span class="line">LC_ADDRESS&#x3D;en_US.UTF-8</span><br><span class="line">LC_TELEPHONE&#x3D;en_US.UTF-8</span><br><span class="line">LC_MEASUREMENT&#x3D;en_US.UTF-8</span><br><span class="line">LC_IDENTIFICATION&#x3D;en_US.UTF-8</span><br></pre></td></tr></table></figure><p>修改<code>LANG</code>和<code>LANGUAGE</code>就可以。其中<code>LANG</code>是locale的默认设置，即没有单独设置<code>LC_</code>的变量就使用它的值。<a href="https://wiki.archlinux.org/title/locale#LANGUAGE:_fallback_locales" target="_blank" rel="noopener"><code>LANGUAGE</code>定义一个后备列表</a>，即在某些情况下首选locale不能用的时候，按照它定义的顺序逐个尝试。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaRemote Q&amp;A</title>
      <link href="/2021/08/05/daremote-qa/"/>
      <url>/2021/08/05/daremote-qa/</url>
      
        <content type="html"><![CDATA[<h3 id="下载和购买"><a href="#下载和购买" class="headerlink" title="下载和购买"></a>下载和购买</h3><h4 id="一-无法在Google-play商店找到-DaRemote"><a href="#一-无法在Google-play商店找到-DaRemote" class="headerlink" title="一. 无法在Google play商店找到 DaRemote"></a>一. 无法在Google play商店找到 DaRemote</h4><p>可以直接访问：<a href="https://play.google.com/store/apps/details?id=com.deskangel.daremote" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=com.deskangel.daremote</a></p><p>如果没有显示App，可能是因为您当前的<code>Google play</code>账号设置的地区不支持付费应用。您可以修改账号的国家/地区设置，或者使用一个新的没有设置地区的账号。</p><h4 id="二-无法查询价格"><a href="#二-无法查询价格" class="headerlink" title="二. 无法查询价格"></a>二. 无法查询价格</h4><p>打开 <code>DaRemote</code> 的购买高级版本页面后显示错误，无法查询到价格，可以尝试</p><ul><li>清除 <code>Google Play服务</code>, <code>Google Play商店</code>的数据，</li><li>同时<em>彻底退出</em><code>DaRemote</code>应用并重新进入（如果系统设置中允许<code>DaRemote</code>在后台运行，在多任务管理器中关闭应用可能无法彻底退出，此时可以在系统设置的应用管理中找到<code>DaRemote</code>然后点击<code>强制退出</code>按钮。您也可以重启手机。）。<br><img src="/images/google_play_apps.jpg" alt="Google play"></li><li>请检查系统是否允许<code>Google Play服务</code>, <code>Google Play商店</code>在后台运行。</li><li>请检查<code>Google play</code>账号或者账单地址是否设置为不支持付费应用的地区</li><li>如果您在<code>Google play</code>商店同时添加了多个账号，可以尝试只保留下载了<code>DaRemote</code>应用的那个账号后再试。</li></ul><h4 id="三-无法在Google-play商店进行支付"><a href="#三-无法在Google-play商店进行支付" class="headerlink" title="三. 无法在Google play商店进行支付"></a>三. 无法在Google play商店进行支付</h4><p>如果您没有在<code>Google play</code>商店绑定银行卡或者其他支付方式，以至于无法购买高级版本，可以联系开发者通过<code>微信</code>、<code>Paypal</code>等支付渠道购买兑换码。联系方式可以通过 <code>DaRemote</code> 的<code>关于页面</code>中获得。</p><p>除了购买<code>Google play</code>商店的兑换码外，您也可以选择购买注册码。注册码和设备绑定，用户更换或者是还原手机后可以<em>免费申请</em>更换注册码。在<code>2.3.0</code>及以上版本点击<code>订购页面</code>-<code>其他方式</code>的<code>购买注册码</code>菜单发送邮件给开发者询问<em>价格</em>和<em>支付方式</em>。 原则上一个注册码订单只能申请<em>三次</em>免费更换注册码。</p><h4 id="四-其他情况"><a href="#四-其他情况" class="headerlink" title="四. 其他情况"></a>四. 其他情况</h4><ul><li>如果出现购买或者使用<code>Google play</code>商店兑换码后依然是试用版的情况，可以尝试清理<code>Google play</code>应用的缓存。</li><li>如果出现<code>兑换按钮</code>是禁用状态无法点击，请检查复制的<code>兑换码</code>是否完整或是否有其他不可见字符。</li></ul><h4 id="五-如何使用兑换码"><a href="#五-如何使用兑换码" class="headerlink" title="五. 如何使用兑换码"></a>五. 如何使用兑换码</h4><p><code>Google play</code>的兑换码可以在<code>DaRemote</code>中购买高级版本时的弹出菜单中输入使用，也可以在<code>Google play</code>商店应用的<code>付款和订阅</code>菜单项或者<code>兑换</code>菜单项中使用（视版本不同而定）。</p><table><thead><tr><th>购买时兑换</th><th>Google Play中兑换</th></tr></thead><tbody><tr><td><img src="/images/daremote/daremote_use_code_in_app.jpg" alt="购买时兑换" height="50%"></td><td><img src="/images/daremote/daremote_use_code_in_gp.jpg" alt="Google Play中兑换" height="50%"></td></tr><tr><td><!-- ![购买时兑换](/images/daremote/daremote_use_code_in_app.jpg)![Google Play中兑换](/images/daremote/daremote_use_code_in_gp.jpg) --></td><td></td></tr></tbody></table><p><em>如果出现<code>兑换按钮</code>是禁用状态无法点击，请检查复制的<code>兑换码</code>是否完整或是否有其他不可见字符。</em></p><h4 id="六-如何在华为手机上安装和购买高级版本"><a href="#六-如何在华为手机上安装和购买高级版本" class="headerlink" title="六. 如何在华为手机上安装和购买高级版本"></a>六. 如何在华为手机上安装和购买高级版本</h4><p><del><code>DaRemote</code>已经在<code>华为应用商店</code>除中国大陆外的所有地区发布，华为手机用户可以通过<code>华为应用商店</code>直接安装。如果您当前的商店设置的<code>国家/地区</code>是中国大陆，可以修改成中国香港或其他地区，然后搜索<code>DaRemote</code>即可。</del></p><p><del>如果您通过<code>华为应用商店</code>购买高级版本遇到困难，也可以联系开发者通过<code>微信</code>、<code>Paypal</code>等支付渠道购买，但此种方式需要把您的<code>华为应用商店id</code>(可以是手机号码，也可以是电子邮件地址)发给开发者。</del></p><p><code>DaRemote</code>已经主动从<code>华为应用商店</code>下架，需要在华为 手机上使用的用户可以去<a href="https//daremote.deskangel.com">官网</a>直接下载apk文件。需要购买<code>高级版本</code>可以选择<code>注册码</code>激活。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="ssh密钥支持的格式"><a href="#ssh密钥支持的格式" class="headerlink" title="ssh密钥支持的格式"></a>ssh密钥支持的格式</h4><p><code>DaRemote</code>支持传统的<code>PEM</code>和<code>OpenSSH</code>v7.8后默认的自有密钥/公钥文件格式。其他不支持的文件格式需要转换成此类格式。<br>如果在文件选择界面密钥文件无法选择，可以去掉扩展名后再试。</p><p>您也可以直接在App中生成密钥对，并把密钥部署到服务器中。</p><h4 id="数据库导入导出"><a href="#数据库导入导出" class="headerlink" title="数据库导入导出"></a>数据库导入导出</h4><p>数据库可以和当前设置一起导出到<code>/storage/emulated/0/Documents/daremote</code>目录。</p><p>Android 11+ 后的系统由于读写权限的限制，可能出现在导入页面看不到已经导出的数据库文件。如果出现该情况，可以点击右上角<code>选择</code>按钮，在弹出的系统级文件选择应用中导航到该路径进行选择。</p><h4 id="如何进入命令集、sftp以及终端模拟器"><a href="#如何进入命令集、sftp以及终端模拟器" class="headerlink" title="如何进入命令集、sftp以及终端模拟器"></a>如何进入命令集、sftp以及终端模拟器</h4><p>在服务器列表界面，点击左侧服务器的标签名称可以直接进入<code>终端模拟器</code>，点击右侧的服务器版本类型，可以直接进入<code>命令集</code>。<br><img src="/images/daremote/daremote_brief_guide.png" alt="命令、容器和终端模拟器"></p><h4 id="如何添加Docker容器"><a href="#如何添加Docker容器" class="headerlink" title="如何添加Docker容器"></a>如何添加Docker容器</h4><ol><li>添加一个运行有docker容器的主机</li><li>将os类型改为Docker</li><li>点击 “查找容器 “按钮来查找正在运行的容器</li><li>选择你想添加到 “DaRemote “的容器（支持多选）</li><li>点击 “Save “按钮<br><img src="/images/daremote/daremote_docker.png" alt="如何添加Docker容器"></li></ol><h4 id="如何查看服务器中所有Docker容器"><a href="#如何查看服务器中所有Docker容器" class="headerlink" title="如何查看服务器中所有Docker容器"></a>如何查看服务器中所有Docker容器</h4><p>与上面把docker容器添加到主页面不同，详情页面中将显示所有创建的容器，并控制其运行状态。</p><ol><li>在主页面选择一个有docker容器的服务器</li><li>点击<code>CPU</code>、<code>内存</code>、<code>磁盘</code>、<code>网络</code>中的任意一个进入详情页面</li><li>等待标题后面出现第五个小圆点</li><li>滑动到最后面即可看到<code>docker容器</code>列表（如果使用<code>统一视图</code>，容器类别会显示在最下面）</li></ol><p><em>如果服务器上的容器数量比较多，可能需要花很多时间才会显示。如果长时间没有显示，可以重新进入详情页再试试。</em></p><p><img src="/images/daremote/docker_container_details.jpg" alt="容器详情"></p><h4 id="如何处理需要sudo的Docker"><a href="#如何处理需要sudo的Docker" class="headerlink" title="如何处理需要sudo的Docker"></a>如何处理需要<code>sudo</code>的Docker</h4><p><code>DaRemote</code>不支持需要<code>sudo</code>才可以运行的<code>Docker</code>，如果需要连接这样的容器，需要在系统中把<code>当前用户</code>添加到<code>docker组</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><h4 id="快捷键盘图例"><a href="#快捷键盘图例" class="headerlink" title="快捷键盘图例"></a>快捷键盘图例</h4><p><img src="/images/daremote/daremote_keyboard.png" alt="快捷键盘"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> daremote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter如何做到“按条件”编译</title>
      <link href="/2021/06/16/flutter-conditional-compiling/"/>
      <url>/2021/06/16/flutter-conditional-compiling/</url>
      
        <content type="html"><![CDATA[<p>我们在<code>C/C++</code>下的时候，有时候不需要编辑某些代码，只需要设置一个条件编译即可，但是到了<code>Java</code>、<code>Kotlin</code>、<code>Dart</code>时，这很难做到——不是说做不到，而是编译器不再支持“条件编译”这个功能，需要通过其他的途径来达到这一目的。</p><h3 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h3><p>事情的起源是我想给<a href="https://play.google.com/store/apps/details?id=com.deskangel.daremote" target="_blank" rel="noopener">DaRemote</a>增加一个发布渠道，发布到华为的应用商店。接入<code>HMS Core</code>后发现多了几个权限，比如<code>HMS Core</code>Sdk它要求有<code>安装应用的权限</code>，而发行到华为应用商店的App也不需要<code>Google play结算服务</code>的权限。</p><p>因此，就希望能根据不同的条件把一些代码和<code>SDK</code>以及相关的<code>packages</code>排除出编译环境。</p><p>而要达到这一目的，需要分两个部分来完成：一个是Android原生端的，一个是Flutter/Dart端的。</p><h3 id="Java-amp-Kotlin的实现"><a href="#Java-amp-Kotlin的实现" class="headerlink" title="Java &amp; Kotlin的实现"></a>Java &amp; Kotlin的实现</h3><h4 id="配置build-gradle文件"><a href="#配置build-gradle文件" class="headerlink" title="配置build.gradle文件"></a>配置build.gradle文件</h4><p>原生端是使用<code>gradle</code>来进行编译的，那么“条件编译”的具体实现也是通过<code>build.gradle</code>文件的配置来进行。</p><p>Gradle支持设置不同的风味(flavor)来实现不同的编译配置，之前只是用它来修改一些参数，比如<code>AppId</code>，<code>版本号</code>等等，现在要通过它来导入不同的SDK依赖以及指定不同的代码。</p><p>首先，创建了两个不同的flavor：</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">flavorDimensions <span class="string">"flavor_iap"</span></span><br><span class="line">productFlavors &#123;</span><br><span class="line">    google &#123;</span><br><span class="line">        dimension <span class="string">"flavor_iap"</span></span><br><span class="line">        signingConfig signingConfigs.releaseGoogle</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    huawei &#123;</span><br><span class="line">        dimension <span class="string">"flavor_iap"</span></span><br><span class="line">        signingConfig signingConfigs.releaseHuawei</span><br></pre></td></tr></table></figure><p>然后为他们配置不同的<code>sourceSets</code>：</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">sourceSets &#123;</span><br><span class="line">    google &#123;</span><br><span class="line">        kotlin.srcDirs = [<span class="string">"src/google"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    huawei &#123;</span><br><span class="line">        kotlin.srcDirs = [<span class="string">"src/huawei"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，把依赖和flavor关联起来，即在<code>implementation</code>前加上flavor的名称，并且使用小驼峰格式的命名：</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"</span></span><br><span class="line">    huaweiImplementation <span class="string">'com.huawei.hms:appservice:5.0.4.302'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置源代码"><a href="#配置源代码" class="headerlink" title="配置源代码"></a>配置源代码</h4><p>上面的<code>sourceSets</code>配置了不同的代码集，这些指定的代码集将和<code>src/main</code>下的代码进行合并——<strong>注意是合并和不是替换</strong>。</p><p>因此，第一步就是把原来<code>/src/main</code>下会冲突的代码移动到各自的风味目录中。<br>因为我的Flutter项目在这个目录（<code>src/main/kotlin/com/.../...</code>）下仅有一个<code>MainActivity.kt</code>文件，移走之后就保持为空即可。<br>另外在<code>src</code>下创建<code>google/kotlin/com/.../...</code>和<code>huawei/kotlin/com/.../...</code>目录，路径和原来的<code>src/main</code>下的格式保持一致。</p><p>第二步就是在两个目录下分别创建各自的<code>MainActivity.kt</code>文件，然后根据平台不同实现各自的功能即可。</p><h3 id="Flutter配置"><a href="#Flutter配置" class="headerlink" title="Flutter配置"></a>Flutter配置</h3><p>Flutter下的实现原理主要是它可以通过编译参数指定不同的入口文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flutter build apk --<span class="built_in">help</span></span><br><span class="line">....</span><br><span class="line">-t, --target=&lt;path&gt;                 The main entry-point file of the application, as run on the</span><br><span class="line">                                    device.</span><br><span class="line">                                    If the <span class="string">"--target"</span> option is omitted, but a file name is provided</span><br><span class="line">                                    on the <span class="built_in">command</span> line, <span class="keyword">then</span> that is used instead.</span><br><span class="line">                                    (defaults to <span class="string">"lib/main.dart"</span>)</span><br></pre></td></tr></table></figure><p>另外，它也支持指定flavor，可以透传到gradle：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--flavor                        Build a custom app flavor as defined by platform-specific build</span><br><span class="line">                                    setup.</span><br></pre></td></tr></table></figure><p>因为它支持不同的入口文件，所以代码需要做一些处理，把<code>main.dart</code>文件分离出来。</p><h4 id="代码结构修改"><a href="#代码结构修改" class="headerlink" title="代码结构修改"></a>代码结构修改</h4><p>我把原来的<code>main.dart</code>重命名为<code>daremote.dart</code>（即项目主widget文件），删除<code>main</code>函数，然后在lib目录下创建一个<code>main.google.dart</code>，再创建一个<code>main.huawei.dart</code>，两个main文件中都<code>runApp(DaRemote());</code>。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lib</span><br><span class="line">├── daremote.dart</span><br><span class="line">├── main.google.dart</span><br><span class="line">├── main.huawei.dart</span><br></pre></td></tr></table></figure><h4 id="编译脚本"><a href="#编译脚本" class="headerlink" title="编译脚本"></a>编译脚本</h4><p>由于没有很好的办法对<code>pubspec.yaml</code>中的packages进行“条件控制”，比如没有找到办法创建诸如<code>google_dependencies</code>这样的入口，所以只能通过命令来进行控制：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flutter pub remove --offline in_app_purchase</span><br><span class="line">flutter build appbundle --release --flavor=huawei -t lib/main.huawei.dart</span><br><span class="line">flutter pub add --offline in_app_purchase</span><br></pre></td></tr></table></figure><p>针对huawei的编译，先移除google的<code>in_app_purchase</code>包，然后通过<code>--flavor</code>指定风味，通过<code>-t</code>指定flutter的<code>main</code>文件，编译完成后再把包加回去。</p><h3 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h3><p>开发中需要编译调试，要设置vscode的<code>launch.json</code>。需要注意的地方是要配置<code>program</code>项用以指定入口文件。</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"configurations": [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"huawei"</span>,</span><br><span class="line">        <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"dart"</span>,</span><br><span class="line">        <span class="attr">"program"</span>: <span class="string">"lib/main.huawei.dart"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"--flavor"</span>,</span><br><span class="line">            <span class="string">"huawei"</span>,</span><br><span class="line">            <span class="string">"-t"</span>,</span><br><span class="line">            <span class="string">"lib/main.huawei.dart"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"google"</span>,</span><br><span class="line">        <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"dart"</span>,</span><br><span class="line">        <span class="attr">"program"</span>: <span class="string">"lib/main.google.dart"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"--flavor"</span>,</span><br><span class="line">            <span class="string">"google"</span>,</span><br><span class="line">            <span class="string">"-t"</span>,</span><br><span class="line">            <span class="string">"lib.main.google.dart"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>对于解释型语言也就算了，但是编译型的语言，没有“条件编译”真的是很不方便。为了达到相同的目的，得做很多额外的工作，最主要的是零零碎碎的。</p><p>曾经一度想全部通过bash脚本来控制算了，编译不同的版本的时候，通过脚本把文件覆盖成不同的内容，但最后还是花时间研究了一下，尽量用框架自身支持的方式来达到目的。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 20.04 升级 nginx 1.18 到 1.20.1</title>
      <link href="/2021/05/27/upgrade-nginx-to-1-20-1/"/>
      <url>/2021/05/27/upgrade-nginx-to-1-20-1/</url>
      
        <content type="html"><![CDATA[<p>因为低于 1.20.1 的版本受到 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23017" target="_blank" rel="noopener">CVE-2021-23017</a> 漏洞的影响，所以决定升级一下nginx。</p><h3 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx"</span> \</span><br><span class="line">    | sudo tee /etc/apt/sources.list.d/nginx.list</span><br><span class="line">curl -o /tmp/nginx_signing.key https://nginx.org/keys/nginx_signing.key</span><br><span class="line">sudo mv /tmp/nginx_signing.key /etc/apt/trusted.gpg.d/nginx_signing.asc</span><br><span class="line"></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h3 id="修改目录配置"><a href="#修改目录配置" class="headerlink" title="修改目录配置"></a>修改目录配置</h3><p>安装后的配置和原来的会有点不同，不再使用<code>sites-enabled</code>目录，而是使用 <code>conf.d</code>，所以需要修改一下<code>/etc/nginx/nginx.conf</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">include /etc/nginx/sites-enabled/*;</span><br><span class="line"><span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br></pre></td></tr></table></figure><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><p>新安装的使用了<code>nginx</code>用户，而原来的用户是<code>www-data</code>，如果有配置php或者修改了目录属性的话会有点问题。把用户再修改一下，还是在 <code>/etc/nginx/nginx.conf</code>配置文件中：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user  www-data;</span><br><span class="line"><span class="comment">#user  nginx;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rime配置文件编辑器</title>
      <link href="/2021/05/24/rime-conf-editor/"/>
      <url>/2021/05/24/rime-conf-editor/</url>
      
        <content type="html"><![CDATA[<p>切换到 Ubuntu 下后，<a href="https://blog.deskangel.com/2021/05/03/im-ubuntu/">配置中文输入法</a>花了一些时间，终于搞定了Rime的配置，顺手写了一个基本的配置编辑器，这样就不需要每次都手工编辑了。</p><p>这款编辑器完全开源，代码已经上传到<a href="https://github.com/deskangel/RimeConf" target="_blank" rel="noopener">github</a>，因为我本身对Rime配置并不熟悉，暂时只支持 Linux 。如果有熟悉 Rime 而配置的小伙伴愿意提供帮助和支持，请联系我。</p><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p><img src="/images/rimeconf/general.png" alt="General"><br><img src="/images/rimeconf/schema.png" alt="Schema"><br><img src="/images/rimeconf/switch.png" alt="Switch"><br><img src="/images/rimeconf/fuzzy.png" alt="Fuzzys"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密、算法、证书、密钥和密钥格式</title>
      <link href="/2021/05/13/key-format-etc/"/>
      <url>/2021/05/13/key-format-etc/</url>
      
        <content type="html"><![CDATA[<h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>加密有两种目的：</p><h4 id="签名"><a href="#签名" class="headerlink" title="签名"></a><em>签名</em></h4><p>只需要加密后的密文，用来做验证，确保提供的原始文本在传递或者保存过程中没有被修改过，但是原始的明文文本是什么它不关心或者没有隐藏的必要。这在现实中用途很广泛，比如老板说“明天放假一天”，这条文本本身没有加密的必要，但是需要确保的是内容没有被修改，一天不会被改成两天。</p><p>实现这一目的的加密算法，一般是使用被称为<code>单向散列函数加密</code>的算法，但也有使用<code>非对称加密</code>的算法，比如<code>DSA</code>。</p><h4 id="解密"><a href="#解密" class="headerlink" title="解密"></a><em>解密</em></h4><p>加密后的密文，需要可以被解密成明文。这是我们一般意义上的加密的目的，在传递或者保存中，第三方看不到原始的明文文本，不知道内容是什么。</p><p>实现这一目的的加密算法有两种：<code>对称加密</code>和<code>非对称加密</code>。</p><h4 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h4><p>哈希要达到的效果是：不能由密文推导出明文；而解密要达到的效果是：没有密码或者密钥，不能推导出明文。</p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>加密算法可以分成三个种类：单向散列函数加密、对称加密和非对称加密。第一种一般用来处理签名和消息验证，后面两种一般用来进行加密解密，但这不是绝对的区分。</p><h4 id="单向散列函数加密"><a href="#单向散列函数加密" class="headerlink" title="单向散列函数加密"></a>单向散列函数加密</h4><h5 id="哈希：散列，又称为杂凑，哈希，其实都是英文-hash-的翻译。散列函数又被称为散列算法。最常用的是以下两种算法："><a href="#哈希：散列，又称为杂凑，哈希，其实都是英文-hash-的翻译。散列函数又被称为散列算法。最常用的是以下两种算法：" class="headerlink" title="哈希：散列，又称为杂凑，哈希，其实都是英文 hash 的翻译。散列函数又被称为散列算法。最常用的是以下两种算法："></a><em>哈希</em>：散列，又称为杂凑，哈希，其实都是英文 hash 的翻译。散列函数又被称为散列算法。最常用的是以下两种算法：</h5><ol><li>MD5（Message-Digest Algorithm，即信息摘要算法），由MD2、MD3、MD4改进而来。</li><li>SHA（Secure Hash Algorithm，即安全散列算法），包含SHA-0，SHA-1，SHA-2（SHA-224、SHA-256、SHA-512等）和SHA-3（SHA3-224、SHA3-256和SHA3-512等）。</li></ol><h4 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h4><p>对称加密，是指加密和解密使用相同的密钥。最常用的有以下两种算法。</p><ol><li>DES（Data Encryption Standard，即数据加密标准）和 3DES（即三重数据加密算法）</li><li>AES（Advanced Encryption Standard，即高级加密标准）</li></ol><h4 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h4><p>非对称加密，是指加密和解密使用的是两个不相同的密钥。通常这两个密钥其中一个是公开的，所以这一加密方法也被称为<code>公开密钥加密</code>。</p><ol><li>RSA（三个人名的首字母），它的核心是质因数分解。这个算法可以用来对文本进行加密和解密。</li><li>DSA（Digital Signature Algorithm，即数字签名算法），它的核心是模算数和离散对数问题。它仅用于签名而不能用户解密。算法中使用的散列函数是SHA家族。</li></ol><p>实际实现中还有使用 ECC（Elliptic Curve Cryptography，即椭圆曲线密码学）的ECDSA等算法，是ECC和DSA的结合。</p><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p><code>X.509</code>是密码学里公钥证书的格式标准。</p><p><a href="https://zh.wikipedia.org/wiki/X.509" target="_blank" rel="noopener">X.509</a>证书里含有公钥、身份信息（比如网络主机名，组织的名称或个体名称等）和签名信息，还附带了证书吊销列表和用于从最终对证书进行签名的证书签发机构直到最终可信点为止的证书合法性验证算法。</p><h3 id="格式标准"><a href="#格式标准" class="headerlink" title="格式标准"></a>格式标准</h3><p>格式标准用于指定保存证书或者是公钥和密钥的容器格式。</p><ul><li>DER（Distinguished Encoding Rules，即唯一编码规则），是一种二进制格式。</li><li>PEM（Privacy-Enhanced Mail，即隐私增强型邮件），是一种被编码成base64的文本格式。</li><li>PKCS（Public Key Cryptography Standards，即公钥加密标准），这是有RSA信息安全公司制定的一系列公开密钥密码编译标准。包含 <code>PKCS#1</code>~<code>PKCS#15</code></li></ul><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.microfocus.com/documentation/visual-cobol/VC40/CSWin/BKCJCJCERTS001.html" target="_blank" rel="noopener">Certificate and Key Formats</a><br><a href="https://zh.wikipedia.org/wiki/X.509" target="_blank" rel="noopener">X.509 - 维基百科，自由的百科全书</a></p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pem </tag>
            
            <tag> ssh </tag>
            
            <tag> rsa </tag>
            
            <tag> dsa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 下中文输入法安装的坑</title>
      <link href="/2021/05/03/im-ubuntu/"/>
      <url>/2021/05/03/im-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>我的系统是Ubuntu 21.04，本来安装输入法本来是应该很简单的，甚至无需安装，只需要把输入法调出来就可以了。但是Ubuntu真的不是很稳定，中间不知道什么地方出了问题，导致走了很多弯路。</p><h3 id="一-折腾"><a href="#一-折腾" class="headerlink" title="一. 折腾"></a>一. 折腾</h3><p>我的系统是从Ubuntu 20.04经过两次升级上来的。在20.04版本里面调出系统的输入法就失败了。当时已经在地区和语言里添加上了中文，但是就是只能输入英文。后来无奈装了换成fcitx，装了google输入法，可以用，但是字库什么的几乎没有，很难用。</p><p>升级到最新的21.04后，又尝试了很多次配置，甚至安装了fcitx5，都没什么效果。又安装了fcitx-rime，只能输入繁体，调整配置后又会自动改回去，莫名其妙。又安装了ibus-rime，运行<code>ibus-daemon -drx</code>，运行<code>ibus restart</code>，注销重新登陆，都没有效果，只能输入英文，还不如fcitx，好歹还能输入中文。</p><h3 id="二-转机"><a href="#二-转机" class="headerlink" title="二. 转机"></a>二. 转机</h3><p>虽然fcitx下凑合着能用，但是想用rime，想输入简体中文，毕竟名气那么大，口碑那么好，一定有过人之出吧。于是一边调整配置，一边从网上找资料参考。但是网上的资料基本雷同，而且总觉得语焉不详，看起来很简单的样子，都没有人提到ibus只能输入英文的问题。</p><p>转机的出现总是那么突然，在一次调整<code>地区和语言</code>的设置的时候，本来在安装的语言内已经有了<code>Chinese</code>和<code>English</code>，我还是点开了管理，选择<code>Chinese</code>，惊奇的发现<code>Chinese</code>居然可以点开，里面还有<code>Chiense(Rime)</code>和<code>Chinese(Intelligent Pinyin)</code>。果断添加，虽然输入的时候还是只能是英文，<code>ibus restart</code>等命令运行了还是没有效果，注销也没有效果，但是这个时候感觉曙光就在眼前，直接重启系统了！而且也回想起看到有文章提到“要重启，不推荐注销”。当时没有注意，现在觉得这个可能就是为什么ibus下只能输入英文的关键。</p><p>果然，重启之后，智能拼音可以正常使用了! 切换到rime，也正常！</p><p>接下来就可以参考着配置rime了。</p><h3 id="三-总结"><a href="#三-总结" class="headerlink" title="三. 总结"></a>三. 总结</h3><ol><li>不知道为什么<code>地区和语言</code>的设置里面会有一个<code>Chinese</code>，后面没有跟任何输入法名称。每次看到都没有深入考虑，一直以为已经安装了中文了，因为下面的按钮是:<code>Manage Installed Languages</code>，而不是<code>Manage Installed Input Methods</code>。</li><li>切换到fcitx只需要注销就可以生效，但是ibus必须得重启才行。偷懒只是注销，甚至只是重启ibus框架是没有用的。</li><li>rime也不是非常好用，而且配置麻烦。智能拼音也比较完善了，不想折腾配置的直接用智能拼音也就可以了。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> rime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>放弃 Kitty</title>
      <link href="/2021/04/20/not-kitty/"/>
      <url>/2021/04/20/not-kitty/</url>
      
        <content type="html"><![CDATA[<h3 id="GPU-加持的终端"><a href="#GPU-加持的终端" class="headerlink" title="GPU 加持的终端"></a>GPU 加持的终端</h3><p>由于上次研究 <code>iterm2</code> 下 vim 使用<code>j,k</code>等键进行移动的时候非常慢的问题-&gt;<a href="https://blog.deskangel.com/2021/04/03/vim-j-k-speed-issue/">macos 下 vim j k 移动速度的问题</a>，开始接触了 GPU 加速的模拟终端软件，比如 <code>Kitty</code> 和 <code>Alacritty</code>，速度确实比 <code>iterm2</code> 快了不少。</p><p>有两个软件，难免会有侧重，主要使用了 <code>Kitty</code>。使用过程中难免会遇到些问题，比如 macos 上没有办法记住窗口的位置，去作者的 github 上翻找，感觉作者不太友善，比较难听进去意见，把用户都赶跑了。其实这也正常，有时候一个自己在意的项目，呵护过度也是有的，不过 <code>Kitty</code> 的 bug 有点多，社区也比较小。</p><h3 id="ssh-连接-bug"><a href="#ssh-连接-bug" class="headerlink" title="ssh 连接 bug"></a>ssh 连接 bug</h3><p>这次是因为想在 <code>OpenWrt</code> 下使用 <code>iftop</code> 这个工具，在 <code>iterm2</code> 和 <code>Alacritty</code> 下都没有问题，但是在 <code>Kitty</code> 下却遇到了问题：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ » ssh root@192.168.1.1</span><br><span class="line">root@OpenWrt:~<span class="comment"># iftop</span></span><br><span class="line">interface: eth0</span><br><span class="line">Unable to get IP address <span class="keyword">for</span> interface: eth0</span><br><span class="line">ioctl(SIOCGIFADDR): Address not available</span><br><span class="line">MAC address is: xxxxxxxxxxxxx</span><br><span class="line">Error opening terminal: xterm-kitty.</span><br><span class="line">root@OpenWrt:~<span class="comment"># exit</span></span><br><span class="line">Connection to 192.168.1.1 closed.</span><br><span class="line">~ » kitty +kitten ssh root@192.168.1.1</span><br><span class="line">ash: tic: not found</span><br><span class="line">Connection to 192.168.1.1 closed.</span><br><span class="line">~ » kitty +kitten ssh root@192.168.1.1</span><br></pre></td></tr></table></figure><p>作者给出的方案是使用<code>kitty +kitten ssh root@192.168.1.1</code>这样的方式去使用 ssh，但是很明显，失败了。在这么基础的功能上有这样的问题，以及解决方案是如此的“丑陋”(<code>kitty +kitten</code>?)，说实话还是很失望的。</p><h3 id="放弃"><a href="#放弃" class="headerlink" title="放弃"></a>放弃</h3><p>其实我的主力还是 <code>iterm2</code>，而且本来 <code>Kitty</code> 和 <code>Alacritty</code> 到底用哪个还在纠结，这下可以安心的放弃一个了。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kitty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为 HMS Core 实现 IAP 内购功能的几个备注点</title>
      <link href="/2021/04/20/hms-iap/"/>
      <url>/2021/04/20/hms-iap/</url>
      
        <content type="html"><![CDATA[<h3 id="开启-IAP"><a href="#开启-IAP" class="headerlink" title="开启 IAP"></a>开启 IAP</h3><ol><li><p><code>iap</code>开启，除了要在<code>AppGallery Connect</code>项目中开启<code>应用内支付服务</code> API外，</p></li><li><p>还需要激活“盈利”下的<code>应用内支付服务</code>的配置以获得<code>签名验证公钥</code>。<br>这个公钥是用来验证支付回调是否合法的，类似web中用几个关键参数按顺序加时间和约定的key做md5的签名。没有开启这个的话会报<code>6002</code>错误。如果不需要验证，可以不使用公钥。</p></li><li><p>除了这两个地方，还需要在<code>AppGallery Connect</code>应用中运营页面里配置商品，特别需要注意到地方是配置完商品还需要激活，一定要点激活才行。</p></li></ol><p>上面两个地方是在 AppGallery Connect 的项目中设置的，而最后这个是在 AppGallery Connect 的应用中设置的。</p><h3 id="密钥指纹"><a href="#密钥指纹" class="headerlink" title="密钥指纹"></a>密钥指纹</h3><p>如果使用了<code>上传密钥</code>和<code>应用签名密钥</code>分开的配置，那么debug版本也需要应用签名，否则HMS 的 api 请求会报<code>6003</code>错误。如果签名后依然还是<code>6003</code>，那么把<code>应用签名证书</code>和<code>上传证书</code>的 SHA-256指纹都添加到<code>AppGallery Connect</code>项目设置下的 SHA256证书指纹中。因为按照流程，你本地的签名用的应该是上传证书，需要把它的指纹也加入。</p><h3 id="地区"><a href="#地区" class="headerlink" title="地区"></a>地区</h3><p>测试时应用不需要上传，只需要把应用的信息都配置好，包括发行的国家地区。如果选择中有中国大陆，那需要提供软著等信息，如果没有可以去掉不在中国大陆发行。</p><p>测试手机上的应用商店国家地区要对应发行的地区，如果有地区没有发行而应用商店正好设置为该地区（就是中国），那需要把应用商店的国家改成选择发行的国家</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>华为 HMS 的配置虽然零散，开放资料也不够直观全面，但是其实坑还是比较少的。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iap </tag>
            
            <tag> hms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWrt 19.07 使用 u 盘</title>
      <link href="/2021/04/16/attach-usb-disk-to-openwrt/"/>
      <url>/2021/04/16/attach-usb-disk-to-openwrt/</url>
      
        <content type="html"><![CDATA[<h3 id="格式化-U-盘"><a href="#格式化-U-盘" class="headerlink" title="格式化 U 盘"></a>格式化 U 盘</h3><p>第一步需要格式化 U 盘，可以在其他 Linux 系统下进行，如果需要在 OpenWrt 下，则需要安装对应的工具。</p><p>格式化之前，首先需要确定哪个设备是 U盘，</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p>我的是在<code>/dev/sdb1</code>。<br>确定了位置，就开始格式化。这里是格式化成 ext3文件格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.ext3 /dev/sdb1</span><br></pre></td></tr></table></figure><p>格式化过程会比较缓慢，而且正常情况下是不需要交互的，不要看到有<code>:</code>就去输入。</p><h3 id="安装必要的软件"><a href="#安装必要的软件" class="headerlink" title="安装必要的软件"></a>安装必要的软件</h3><p>默认情况下，OpenWrt 是没有安装块设备相关的文件的，需要自己安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install block-mount</span><br><span class="line">opkg install kmod-usb-storage</span><br><span class="line">opkg install kmod-fs-ext4</span><br><span class="line">opkg install usbutils</span><br></pre></td></tr></table></figure><p><code>block-mount</code> 提供了 block 工具，用来检查块设备。<code>kmod-usb-storage</code> 提供 usb 存储设备的驱动，有一些设备可能还需要额外安装<code>opkg install kmod-usb-storage-uas</code>。<code>kmod-fs-ext4</code>提供了文件系统的支持，向下兼容，所以装这个就可以了。<code>usbutils</code> 提供了 usb 工具，比如<code>lsusb</code>，如果没有空间，也可以不用安装。</p><h3 id="自动挂载"><a href="#自动挂载" class="headerlink" title="自动挂载"></a>自动挂载</h3><h4 id="一-使用如下命令创建-fstab-文件："><a href="#一-使用如下命令创建-fstab-文件：" class="headerlink" title="一. 使用如下命令创建 fstab 文件："></a>一. 使用如下命令创建 <code>fstab</code> 文件：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">block detect | uci import fstab</span><br><span class="line">uci <span class="built_in">set</span> fstab.@mount[-1].enabled=<span class="string">'1'</span></span><br><span class="line">uci commit fstab</span><br></pre></td></tr></table></figure><p>当然也可以手工编辑<code>/etc/config/fstab</code>文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config global</span><br><span class="line">option anon_swap <span class="string">'0'</span></span><br><span class="line">option anon_mount <span class="string">'0'</span></span><br><span class="line">option auto_swap <span class="string">'1'</span></span><br><span class="line">option auto_mount <span class="string">'1'</span></span><br><span class="line">option delay_root <span class="string">'5'</span></span><br><span class="line">option check_fs <span class="string">'0'</span></span><br><span class="line"></span><br><span class="line">config mount</span><br><span class="line">option target <span class="string">'/upan'</span></span><br><span class="line">option uuid <span class="string">'xxxxxf-6xxxx-4xxxx-axxxx-797xxxxxxx'</span></span><br><span class="line">option enabled <span class="string">'1'</span></span><br></pre></td></tr></table></figure><p>其中 uuid 可以使用<code>block info</code>命令获取。需要注意的是 <strong>每次格式化之后，uuid 都会改变，需要更新</strong></p><h4 id="二-验证是否正确："><a href="#二-验证是否正确：" class="headerlink" title="二. 验证是否正确："></a>二. 验证是否正确：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">block umount</span><br><span class="line">block mount</span><br></pre></td></tr></table></figure><p>或者使用<code>service  fstab boot</code>进行挂载，然后<code>df</code>看下是否的挂载都正确。</p><p>重启后看一下是否能自动挂载。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://openwrt.org/docs/guide-user/storage/usb-drives" target="_blank" rel="noopener">https://openwrt.org/docs/guide-user/storage/usb-drives</a><br><a href="https://openwrt.org/docs/guide-user/storage/usb-drives-quickstart" target="_blank" rel="noopener">https://openwrt.org/docs/guide-user/storage/usb-drives-quickstart</a><br><a href="https://openwrt.org/docs/guide-user/storage/fstab" target="_blank" rel="noopener">https://openwrt.org/docs/guide-user/storage/fstab</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openWrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaRemote v1.1.0 功能</title>
      <link href="/2021/04/11/daremote-v1-1-0-release/"/>
      <url>/2021/04/11/daremote-v1-1-0-release/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>DaRemote 是一款通过 ssh 隧道和 Linux 自带的工具来查询系统信息和运行状态，在您的手机上用直观的图列展示出来的 Android App。<br><img src="/images/daremote/daremote_home.jpg" alt="IMAGE 2021-04-11 18:03:38.jpg"></p><p>同时，它也是一个远程命令管理工具，可以让您在手机上自定义一些脚本或命令，在您需要的时候能够方便、快速、准确地运行这些脚本和命令。<br><img src="/images/daremote/daremote_script_demo.gif" alt="script_demo.gif"></p><h3 id="监控功能"><a href="#监控功能" class="headerlink" title="监控功能"></a>监控功能</h3><ul><li>CPU：CPU各个内核的当前负载情况等</li><li>进程：top 10 进程运行时间及资源占用情况</li><li>内存：内存总量和使用情况</li><li>磁盘：每个分区对应的挂载点，以及容量和当前读写速度等</li><li>网络：每个网络接口的入站和出站速度，数据总量等。</li><li>脚本编辑，运行，结果展示等。</li></ul><h3 id="活动及下载"><a href="#活动及下载" class="headerlink" title="活动及下载"></a>活动及下载</h3><p>当前可以在<a href="https://play.google.com/store/apps/details?id=com.deskangel.daremote" target="_blank" rel="noopener">Google Play</a> 上进行下载，所有功能都可以免费使用，但全功能版本可以添加更多的服务器和脚本，仅需 <code>$1.99</code>。</p><table><thead><tr><th>功能</th><th>Free</th><th>Pro 版</th></tr></thead><tbody><tr><td>服务器数量</td><td>2</td><td>无限制</td></tr><tr><td>每服务器脚本数量</td><td>2</td><td>无限制</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> daremote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macos 下 vim j k 移动速度的问题</title>
      <link href="/2021/04/03/vim-j-k-speed-issue/"/>
      <url>/2021/04/03/vim-j-k-speed-issue/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>这个问题其实困扰我好几年了，表现得相当怪异。</p><p>一开始是在 Vim 中发现的，在 iTerm2 下，使用 j 和 k 移动光标的时候，光标和文本的滚动会变得非常的卡顿，但是使用箭头键又是好的。</p><p>有怀疑是 iTerm2的问题，但是换成系统自带的也是一样；有怀疑是 Vim 版本的问题，但是其他版本甚至 gui 版本也有同样的问题；有怀疑是 Vim 插件问题，但是去除所有插件后虽然情况略有好转，但是卡顿还是非常明显；有怀疑有Filco蓝牙键盘的问题，但是 rmbp 自带的键盘也是那副样子；怀疑 macos 是否对键盘进行来特殊处理，因为如果使用<code>上下箭头</code>来移动光标是非常流畅的……</p><p>Google 了很多次，确实也有很多人都会遇到类似的问题，解决方案是调整系统的按键速度——呵呵~😒 还有说安装了一些键盘按键工具，覆盖了系统的按键速度。最过分的是有人说既然使用了 Vim，要学会Vim 的生活方式，不要使用<code>j</code>，要使用<code>10j</code>🤮。</p><p>不过Google 后也不是没有所获。有人提醒说不光是 Vim，其实在 man 等工具中也是一样：确实如此！！</p><h3 id="替换方案"><a href="#替换方案" class="headerlink" title="替换方案"></a>替换方案</h3><p>另一个收获是发现了一个软件：<a href="https://github.com/alacritty/alacritty" target="_blank" rel="noopener">alacritty</a>，一个使用 GPU 加速的终端。使用了之后，确实速度改善非常大，<code>h、j、k、l</code>光标移动问题看不出来了。但是，美中不足的是，它不是 iTerm2。</p><h3 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h3><p>虽然 Vim 不是我的主力编辑器，但是使用的次数也非常频繁，特别是在命令行环境下修改一些参数什么的非常方便，但是每次使用遇到<code>h、j、k、l</code> 光标移动问题特别糟心，每次遇到都要研究一番。比如今天使用了<code>:set verbose=9</code>来查看按键的运行情况，虽然<code>j</code>和<code>ctrl+n</code>产生的命令调用是一样的，但是发现<code>ctrl+n</code>移动光标就是流畅！以前没有试过用组合键来移动光标。如果系统针对字母键和方向键做了不同的按键频率的处理，那么同为字母键应该都一样。难道真的装了我没有发现的键盘按键工具？</p><p>打印出所有进程一个一个查看……没有问题啊……目光不经意的飘向了右上角……输入法……输入法？百度输入法……会不会有影响？换成系统的试试……！！！</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>百度输入法可以设置一个清单，清单中的软件默认切换成英文输入模式——百度输入法的英文模式，而问题也就在这个模式，也许是它要做一些监听和联想？可是翻遍了输入法的配置，没有看到在英文模式下显示联想词的开关，事实也是不会显示联想词语的，不知道在做什么。</p><p>知道了原因，发现不光是Vim等软件中会遇到这个问题，其实iTerm2下就有这个问题，按住字母键就会卡顿，只是正常输入不需要连按，所以平时遇不到。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux配置及优化</title>
      <link href="/2021/04/01/termux-tweak/"/>
      <url>/2021/04/01/termux-tweak/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>当前 Google Play 中的版本不再更新，最新版在 <a href="https://f-droid.org/zh_Hans/packages/com.termux/" target="_blank" rel="noopener">F-Droid</a> 中，版本为0.108。</p><h3 id="termux-chroot-和-sshfs"><a href="#termux-chroot-和-sshfs" class="headerlink" title="termux-chroot 和 sshfs"></a>termux-chroot 和 sshfs</h3><p>termux-chroot 对 linux 环境相关的目录进行映射，比如 /usr，/etc 等。但是开启了 termux-chroot 后，使用 sshfs 会直接断线，看 logcat 是 spft 发生了错误。</p><p>当本地没有运行 termux-chroot 的时候，sshfs 正常连接使用，之后再开启就不会有问题。</p><p>如果想在通过 ssh 连接的时候开启 termux-chroot 而本地不运行该工具，可以在 .bashrc 中进行判断：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$SSH_CONNECTION</span> &amp;&amp; -z <span class="string">"<span class="variable">$TERMUX_CHROOT</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> TERMUX_CHROOT=1</span><br><span class="line">    <span class="built_in">exec</span> termux-chroot</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="zsh-和-exec"><a href="#zsh-和-exec" class="headerlink" title="zsh 和 exec"></a>zsh 和 exec</h3><p>当你把 shell 切换成 zsh，上述脚本在某些设备上会遇到一些问题。据反映在 Android 10 的系统上，exec 在 zsh 的交互模式下运行会导致 crash 而退出 zsh。当然，<code>zsh -c &quot;exec termux-chroot&quot;</code> 是正常的，但是这样就失去了 exec 替换 shell 的功能，导致的结果就是需要 exit 两次，第一次是退出 termux-chroot。</p><h3 id="termux-api-和-系统后台管理"><a href="#termux-api-和-系统后台管理" class="headerlink" title="termux-api 和 系统后台管理"></a>termux-api 和 系统后台管理</h3><p>termux-api 的安装分两个部分进行，第一个部分是app 的安装，需要在 F-Droid 上获取最新版本进行安装。</p><p>第二部分，需要在 termux app 中使用命令 <code>apt install termux-api</code>进行安装，安装后才可以在系统中看到 api 相关的命令。</p><p>当执行相关命令时，如果长时间没有返回，大概率是 termux-api 的 app 没有运行后台运行，需要手动在系统的启动权限设置中进行修改。</p><h3 id="额外键盘配置"><a href="#额外键盘配置" class="headerlink" title="额外键盘配置"></a>额外键盘配置</h3><p>额外键盘配置文件在 <code>~/.termux/termux.properties</code> 文件中，我修改的配置为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extra-keys-style &#x3D; default</span><br><span class="line"></span><br><span class="line">### Two rows with more keys</span><br><span class="line"># extra-keys &#x3D; [[&#123;key: &#39;ESC&#39;, display: &#39;⎋&#39;&#125;,&#39;&#x2F;&#39;,&#39;-&#39;,&#123;key:&#39;HOME&#39;, display: &#39;|&lt;-&#39;&#125;,&#123;key: &#39;UP&#39;, display: &#39;👆&#39;&#125;,&#123;key: &#39;END&#39;, display: &#39;-&gt;|&#39;&#125;, &#123;key: &#39;PGUP&#39;, display:  &#39;⩠&#39;&#125;,&#39;DRAWER&#39;], \</span><br><span class="line">#               [&#39;TAB&#39;,&#123;key: &#39;CTRL&#39;, display: &#39;⌃&#39;&#125;,&#123;key: &#39;ALT&#39;, display: &#39;⌥&#39;&#125;,&#123;key:&#39;LEFT&#39;, display: &#39;👈&#39;&#125;,&#123;key:&#39;DOWN&#39;, display:&#39;👇&#39;&#125;,&#123;key:&#39;RIGHT&#39;, display:&#39;👉&#39;&#125;,&#123;key: &#39;PGDN&#39;, display: &#39;⩢&#39;&#125;,&#39;KEYBOARD&#39;]]</span><br><span class="line">extra-keys &#x3D; [                                                                                  \</span><br><span class="line">                [                                                                               \</span><br><span class="line">                    &#123;key: &#39;ESC&#39;, popup: &#39;pkill sshd;exit&#39;, display: &#39;⎋&#39;&#125;,                       \</span><br><span class="line">                    &#123;key: &#39;ping deskangel.com&#39;, display: &#39;p&#39;&#125;,                                  \</span><br><span class="line">                    &#39;-&#39;,                                                                        \</span><br><span class="line">                    &#39;&#x2F;&#39;,                                                                        \</span><br><span class="line">                    &#123;key:&#39;HOME&#39;, display: &#39;|&lt;-&#39;&#125;,&#39;UP&#39;,&#123;key: &#39;END&#39;, display: &#39;-&gt;|&#39;&#125;,             \</span><br><span class="line">                    &#123;key: &#39;PGUP&#39;, display:  &#39;⩠&#39;&#125;,                                               \</span><br><span class="line">                    &#39;DRAWER&#39;                                                                    \</span><br><span class="line">                ],                                                                              \</span><br><span class="line">                [                                                                               \</span><br><span class="line">                    &#39;TAB&#39;,                                                                      \</span><br><span class="line">                    &#123;key: &#39;CTRL&#39;, popup: &#123;macro: &#39;CTRL c&#39;, display: &#39;ctrl+c&#39;&#125;, display: &#39;⌃&#39;&#125;,   \</span><br><span class="line">                    &#123;key: &#39;ALT&#39;, display: &#39;⌥&#39;&#125;,                                                 \</span><br><span class="line">                    &#39;|&#39;,                                                                        \</span><br><span class="line">                    &#39;LEFT&#39;,                                                                     \</span><br><span class="line">                    &#39;DOWN&#39;,                                                                     \</span><br><span class="line">                    &#39;RIGHT&#39;,                                                                    \</span><br><span class="line">                    &#123;key: &#39;PGDN&#39;, display: &#39;⩢&#39;&#125;,&#39;KEYBOARD&#39;                                      \</span><br><span class="line">                ]                                                                               \</span><br><span class="line">            ]</span><br></pre></td></tr></table></figure><p>放出两张效果图。这张是我最终使用的版本：<br><img src="/images/termux_extra_keyboard.jpeg" alt="extra keyboard"></p><p>这张是支持 emoji 的版本：<br><img src="/images/termux_extra_keyboard_emoji.jpeg" alt="extra keyboard with emoji"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GLFW 学习笔记 （二）</title>
      <link href="/2020/05/19/GLFW-study-notes-2/"/>
      <url>/2020/05/19/GLFW-study-notes-2/</url>
      
        <content type="html"><![CDATA[<h1 id="Load-库"><a href="#Load-库" class="headerlink" title="Load 库"></a>Load 库</h1><ul><li>这几篇不会讲OpenGL和GLFW的原理性的东西，只是开发环境的建立。万事开头难，编程学习的开头就是开发环境，有了开发环境后，其他就可以自己摸索了。*</li></ul><p>这一篇引入了GLAD这个加载库。</p><h3 id="GLAD-and-GLEW"><a href="#GLAD-and-GLEW" class="headerlink" title="GLAD and GLEW"></a>GLAD and GLEW</h3><p>因为OpenGL只是一个标准，具体的实现是由驱动厂商来完成的，针对不同的显卡，有很多不同版本的OpenGL驱动，大多数函数的地址做不到一成不变，需要在运行的时候去查询。而具体的查询方法又是系统相关的，不同的操作系统，使用的方法也不一样，所以出现了很多load库来处理这些事情。</p><p>GLAD和GLEW就是其中的两个，其他的还有GL3W等。</p><h3 id="下载GLAD"><a href="#下载GLAD" class="headerlink" title="下载GLAD"></a>下载GLAD</h3><p>GLAD的<a href="https://glad.dav1d.de/" target="_blank" rel="noopener">官网</a>提供了一个web service，作为一个开始，进行如下设置即可：</p><p><img src="/images/glad_settings.png" alt="glad_settings.png"></p><p>点击<code>Generate</code>按钮生成配置文件，下载并解压后，有一个<code>include</code>目录和一个<code>src</code>目录。</p><h3 id="实例代码和编译"><a href="#实例代码和编译" class="headerlink" title="实例代码和编译"></a>实例代码和编译</h3><p>创建一个文件夹作为项目目录，把上一步解压的glad的include 和src目录放到项目目录中。进入<code>src</code>目录，里面有一个<code>glad.c</code>文件，再创建一个<code>main.cpp</code>文件，编辑<code>main.cpp</code>，使用下面的示例代码：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glfwInit();</span><br><span class="line"></span><br><span class="line">    GLFWwindow* window = glfwCreateWindow(<span class="number">800</span>, <span class="number">600</span>, <span class="string">"LearnOpenGL"</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line">      glfwTerminate();</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window))</span><br><span class="line">    &#123;</span><br><span class="line">      glfwSwapBuffers(window);</span><br><span class="line">      glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在无需深究API的含义，<strong>但是要注意<code>#include &lt;glad/glad.h&gt;</code>需要放在<code>#include &lt;GLFW/glfw3.h&gt;</code>前面</strong>。</p><p>在命令行进入项目根目录，输入编译命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cc $(pkg-config --cflags glfw3 gl) -Iinclude -o <span class="built_in">test</span> src/main.cpp src/glad.c $(pkg-config --static --libs glfw3 gl)</span><br></pre></td></tr></table></figure><p>可能会疑惑<code>pkg-config</code>的作用，其实没什么特别的，也就是查询各个库编译和链接需要的参数。比如我的系统下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pkg-config --cflags --static --libs glfw3 gl</span><br></pre></td></tr></table></figure><p>输出为<code>-lglfw -lrt -lm -ldl -lGL</code></p><p>和<a href="https://blog.deskangel.com/2020/05/16/GLFW-study-notes-1/">GLFW 学习笔记 （一）</a>中相比，增加了<code>-Iinclude</code>和<code>src/glad.c</code>，前者表示增加include的搜索路径为当前目录下的include文件夹，后者表示编译的时候需要一起编译<code>src/glad.c</code>文件，这些都是 gcc/g++ 的参数。</p><p>由此可见，glad的依赖关系还是相当简单的，了解了这些，再用cmake等工具生成编译配置心里就比较有数了。</p><h3 id="glad-的作用s"><a href="#glad-的作用s" class="headerlink" title="glad 的作用s"></a>glad 的作用s</h3><p>上面的代码，我们只使用到了一个glad的函数：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)</span><br></pre></td></tr></table></figure><p>如果把<code>include &lt;glad/glad.h&gt;</code> 和上面的代码注释掉，一样可以正常编译，正常运行，看不出有什么用处，但是如果按照<a href="https://learnopengl.com/Getting-started/Hello-Triangle" target="_blank" rel="noopener">LearnOpenGL - Hello Triangle</a>教程学下去，会发现很多函数，比如<code>glGetShaderiv</code>会提示找不到。</p><p>glad的作用，就是在头文件中声明了这个函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(APIENTRYP PFNGLGETSHADERIVPROC)</span><span class="params">(GLuint shader, GLenum pname, GLint *params)</span></span>;</span><br><span class="line">GLAPI PFNGLGETSHADERIVPROC glad_glGetShaderiv;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> glGetShaderiv glad_glGetShaderiv</span></span><br></pre></td></tr></table></figure><p>并且在初始化的时候获取了这个函数的地址：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">glad_glGetShaderiv = (PFNGLGETSHADERIVPROC)load(<span class="string">"glGetShaderiv"</span>);</span><br></pre></td></tr></table></figure><p>这样代码中就可以安全而方便的使用了。</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://learnopengl.com/Getting-started/Creating-a-window" target="_blank" rel="noopener">LearnOpenGL - Creating a window</a></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> glfw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 20.04 调优 （二）</title>
      <link href="/2020/05/18/ubuntu-2004-tweak-for-macos-users-2/"/>
      <url>/2020/05/18/ubuntu-2004-tweak-for-macos-users-2/</url>
      
        <content type="html"><![CDATA[<h1 id="macos转换到Ubuntu必做的调整"><a href="#macos转换到Ubuntu必做的调整" class="headerlink" title="macos转换到Ubuntu必做的调整"></a>macos转换到Ubuntu必做的调整</h1><p><a href="https://blog.deskangel.com/2020/05/14/ubuntu-2004-tweak-for-macos-users/">Ubuntu 20.04 调优 (一)</a>做了一些调整，但是还不够。</p><h3 id="安装dconf-editor"><a href="#安装dconf-editor" class="headerlink" title="安装dconf-editor"></a>安装dconf-editor</h3><p>系统的设置中有一些键绑定的配置，但是并不全，比如要删掉 <code>Super + p</code> 这个键绑定，就需要安装<code>dconf-editor</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install dconf-editor</span><br><span class="line">dconf-editor</span><br></pre></td></tr></table></figure><p><img src="/images/switch-monitor-keybinding.png" alt="remove super+p keybinding"><br>按照上图把快捷键删掉。</p><p><em><code>dconf</code> 是 GNOME 3中替换<code>gconf</code>的系统，是类似 Windows的注册表的存在。</em></p><h3 id="安装autokeys"><a href="#安装autokeys" class="headerlink" title="安装autokeys"></a>安装autokeys</h3><p>第一篇中说安装<code>gnome-tweak-tool</code>后，设置了键绑定方式为<code>emacs input</code>，但是有很多程序并不起作用。这是因为这里设置的键绑定只是针对gtk+的应用。emacs的键绑定方案存放在<code>/usr/share/themes/Emacs</code>路径下。GNOME是基于GTK+的，但是还有很多程序使用的是QT。</p><p>如何要在这些程序中使用 <code>ctrl+a</code> 或者 <code>ctrl+e</code> 来移动光标，可以安装 <a href="https://github.com/autokey/autokey" target="_blank" rel="noopener">autokeys</a>。</p><p>这个我没有装，看着安装过程有点麻烦，没有去折腾。</p><h3 id="Open-命令"><a href="#Open-命令" class="headerlink" title="Open 命令"></a>Open 命令</h3><p>上一篇有提到使用<code>Preview</code>的替换，这里要介绍的这个命令是在终端下经常会用到的<code>Open</code>。Ubuntu下的有一个对应的命令，叫做<code>xdg-open</code>。为了方便，设置一下别名即可。</p><p><code>xdg-open</code>使用系统默认的程序打开文件，要调整默认程序的话，可以使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --all</span><br></pre></td></tr></table></figure><h3 id="Visual-Studio-Code键绑定"><a href="#Visual-Studio-Code键绑定" class="headerlink" title="Visual Studio Code键绑定"></a>Visual Studio Code键绑定</h3><p>其他程序可以不设置，但是生产力工具就没有办法了，vscode必须的键绑定必须得修改。好在vscode有自己的键绑定功能，不需要修改到系统的配置。修改完的键绑定方案放在了gist上：<a href="https://gist.github.com/deskangel/0757972c73373d61cd5575ac56efae97" target="_blank" rel="noopener">Personal vscode keybindings for Ubuntu · GitHub</a>。</p><p>要做到这个键绑定方案，除了修改vscode的设定，还需要前面提到的删除系统的<code>ctrl+shift+e</code>和<code>Super+p</code>，还有相应调整系统设定<code>Settings</code>中键绑定的方案，不然还是会被系统拦截。</p><p>下面是一个方案，使用<code>dconf dump / &gt; all.conf</code>导出，然后编辑只保留<code>keybindings</code>相关的内容：<br><a href="https://gist.github.com/deskangel/f2fc3e9eb000c49e21eab51c98b2464a" target="_blank" rel="noopener">keybindings for gnome dumped by dconf · GitHub</a></p><p>要使用的话，可以使用<code>dconf load</code>命令（未导入过）。</p><h3 id="调整屏幕关闭时间"><a href="#调整屏幕关闭时间" class="headerlink" title="调整屏幕关闭时间"></a>调整屏幕关闭时间</h3><ul><li><p>进入空白屏幕时间：<br>系统设置<code>Power</code>分页中可以设置进入空白屏幕的时间，但是可以选择除了Never最多也就只有15分钟，如果要调成其他的时间，需要修改配置。可以使用<code>dconf-editor</code>或者<code>gsettings</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.desktop.session idle-delay 3600</span><br></pre></td></tr></table></figure><p>3600秒就是一个小时。</p></li><li><p>锁屏延时<br>锁屏延时在<code>Privacy</code>分页下，<code>Screen Lock</code>中。这里也同样可以设置空白屏幕时间，也可以设置空白屏幕多久后进入锁屏。</p></li><li><p>关闭屏幕时间<br>空白屏幕和关闭屏幕是两个概念。进入空白屏幕，显示器其实没有关闭。要关闭显示器，系统设置中没有，<code>dconf</code>的设置中也没有，需要使用<code>xset</code>命令。<code>xset q</code>查看当前设置，<code>xset +dpms</code>开启屏幕节能（能源之星）选项，<code>xset -dpms</code>关闭节能，<code>xset dpms 0 0 0</code>设置进入节能模式的时间，后面三个参数分别是待机、休眠和关闭屏幕的时间，单位为秒。</p></li></ul><p>我的Ubuntu 20.04不知道为什么不能自动关闭屏幕，哪怕用了<code>set +dpms</code>，过一会，dpms还是会自动关闭。</p><h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h5><p><a href="https://blog.deskangel.com/2020/05/14/ubuntu-2004-tweak-for-macos-users/">Ubuntu 20.04 调优</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GLFW 学习笔记 （一）</title>
      <link href="/2020/05/16/GLFW-study-notes-1/"/>
      <url>/2020/05/16/GLFW-study-notes-1/</url>
      
        <content type="html"><![CDATA[<h1 id="从零开始"><a href="#从零开始" class="headerlink" title="从零开始"></a>从零开始</h1><ul><li>这几篇不会讲OpenGL和GLFW的原理性的东西，只是开发环境的建立。万事开头难，编程学习的开头就是开发环境，有了开发环境后，其他就可以自己摸索了。*</li></ul><p>这一篇是直接使用GLFW来开发。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Ubuntu 20.04桌面版</li></ul><h3 id="安装开发包"><a href="#安装开发包" class="headerlink" title="安装开发包"></a>安装开发包</h3><p>首先需要安装的是glfw库和头文件，我使用的还是X，所以使用下面的命令就可以了：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libglfw3-dev</span><br></pre></td></tr></table></figure><p>如果是<code>wayland</code>，那么可以安装<code>libglfw3-wayland</code>。其他的包可以按需安装，要查看有哪些glfw相关的包，可以使用apt的search命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt search glfw</span><br></pre></td></tr></table></figure><ul><li>输出结果就不列了，在自己的系统中试一下就知道，或者去<a href="https://packages.ubuntu.com/search?suite=focal&keywords=glfw" target="_blank" rel="noopener">Ubuntu packages</a>网站查找。*</li></ul><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><p>照着<a href="https://www.glfw.org/documentation.html" target="_blank" rel="noopener">GLFW 官网</a>的例子在 <strong>vscode</strong> 里面照抄一遍。因为上面已经把需要的头文件都安装好了，应该不会有任何的错误提示。</p><p>代码中使用了<code>GLFW/glfw3.h</code>，就不需要自己再 include OpenGL的头文件了，也不需要保护平台相关的头文件如 <code>windows.h</code>。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    GLFWwindow* window;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!glfwInit()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    window = glfwCreateWindow(<span class="number">640</span>, <span class="number">480</span>, <span class="string">"Hello World"</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!window) &#123;</span><br><span class="line">        glfwTerminate();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window))</span><br><span class="line">    &#123;</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line"></span><br><span class="line">        glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译和链接"><a href="#编译和链接" class="headerlink" title="编译和链接"></a>编译和链接</h3><p>一般来说，这是设置开发环境最有挑战的一步，如果走得不顺，前面的可能都要推翻重来，比如开发包安装得不对，库版本和代码不一致。所以从零开始的时候，最好照着做一遍。有时候做事，看着浪费时间，超近路往往欲速则不达。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cc $(pkg-config --cflags glfw3 gl) -o <span class="built_in">test</span> main.c $(pkg-config --static --libs glfw3 gl)</span><br></pre></td></tr></table></figure><p>上面的命令会把 main.c 文件编译成文件名为 test 的程序。</p><p>cc 我系统中设置的就是gcc：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ll /usr/bin/cc</span><br><span class="line">rwxrwxrwx 1 root root 20 5月  12 17:05 /usr/bin/cc -&gt; /etc/alternatives/cc</span><br><span class="line">$ ll /etc/alternatives/cc</span><br><span class="line">lrwxrwxrwx 1 root root 12 5月  12 17:05 /etc/alternatives/cc -&gt; /usr/bin/gcc</span><br><span class="line">$ gcc --version</span><br><span class="line">gcc (Ubuntu 9.3.0-10ubuntu2) 9.3.0</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the <span class="built_in">source</span> <span class="keyword">for</span> copying conditions.  There is NO</span><br><span class="line">warranty; not even <span class="keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><p>如果使用了C++的语法或库，把<code>cc</code>改成<code>c++</code>或者干脆用<code>g++</code>即可。</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/glfw_first_window.png" alt="glfw_first_window"></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> glfw </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 20.04 调优 (一)</title>
      <link href="/2020/05/14/ubuntu-2004-tweak-for-macos-users/"/>
      <url>/2020/05/14/ubuntu-2004-tweak-for-macos-users/</url>
      
        <content type="html"><![CDATA[<h1 id="macos转换到Ubuntu必做的调整"><a href="#macos转换到Ubuntu必做的调整" class="headerlink" title="macos转换到Ubuntu必做的调整"></a>macos转换到Ubuntu必做的调整</h1><p>Ubuntu 20.04 虽然已经很不错了，但是安装完后还是需要进行一些设置并且安装一些软件，这样才可以更好用。</p><h3 id="使用厂商驱动"><a href="#使用厂商驱动" class="headerlink" title="使用厂商驱动"></a>使用厂商驱动</h3><p>Ubuntu自带了很多设备的驱动，但是因为版权的问题，它默认安装的都是开源的版本，而不是厂商自己的驱动。开源的驱动虽然也能用，但是可能会遇到一些问题，这时候就需要使用厂商自己的专利驱动了。</p><p>Ubuntu 20.04中使用所谓的专利驱动非常方便，打开 <code>Software &amp; Updates</code> 工具，切换到<code>Additional Drivers</code>，会列出来能用的专利驱动，直接切换就可以了。切换后可能会没有提示重启系统，保险起见还是需要重启一下。</p><h3 id="安装Tweak工具"><a href="#安装Tweak工具" class="headerlink" title="安装Tweak工具"></a>安装Tweak工具</h3><p>如果说上面的驱动没有遇到问题不必要更换，那么gnome的tweak工具几乎是必装的，即使不准备使用第三方主题，调整一些设置也是需要用到的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-tweak-tool</span><br></pre></td></tr></table></figure><p>如果要装主题，还需要另外的工具和库，这个就根据需要自行安装了。</p><p>安装了tweak工具后，第一个操作是开启<code>Emacs Input</code>，可惜在Ubuntu 20.04上没有什么效果（好像只有在Chrome中有点效）。第二个是把关闭按钮等移到左边，即设置<code>Window Titlebars-&gt;Placement</code>。</p><h3 id="Preview工具"><a href="#Preview工具" class="headerlink" title="Preview工具"></a>Preview工具</h3><p>就像用惯Windows的人会无意识的点击右键刷新桌面，使用惯macos后会无意识的按空格键进行预览，所以预览工具是必须得装的。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-sushi</span><br></pre></td></tr></table></figure><p>装完后不需要任何配置（我没找到），在Files文件管理器里面选择文件后直接按空格就可以预览了，效果让人满意。</p><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>Code （或者叫vscode）一定不要装软件商店里面的，也就是snap的版本，去<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">官网</a>下载对应的版本。snap的版本 <code>ctrl+shift+e</code>这个键绑定无法修改。这个键是emoji的快捷键，但是如果是snap版本的vscode，即使通过<code>ibus-setup</code>删除掉这个快捷键，vscode里面这个键还是生效的。</p><p>另一个问题是snap版本的vscode可能会有些程序识别不到，比如<code>flutter doctor</code>。</p><p>所以，换成官网的版本就好了，而且所有的设置都会保留，放心地在软件商店里删除然后去官网下载deb包重装吧。</p><hr><p>颇为遗憾的是还没有找到有效修改快捷键的方法，不能使用macos的键绑定方案。macos的键绑定其实主要就是emacs的方案，但是tweak中的设置在大部分的程序中都不起效果，可能需要进行更深层次的挖掘才行，这个就留到以后了，现在先开工干活！:-)</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 下安装 clang</title>
      <link href="/2020/05/13/install-clang-on-ubuntu/"/>
      <url>/2020/05/13/install-clang-on-ubuntu/</url>
      
        <content type="html"><![CDATA[<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>Ubuntu 20.04<br>clang 10</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>Ubuntu 20.04下直接装不行，<code>sudo apt install clang</code> 会提依赖问题。</p><p>为了找到问题所在，使用apt 把依赖的包都放到命令上，比如第一个提示的是 <code>clang-10</code> blabla，那么：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install clang clang-10</span><br></pre></td></tr></table></figure><p>这时会提示一堆库依赖问题，选一个放到<code>clang-10</code>后面继续回车，一路下去，最后提示<code>libllvm10</code>找不到。</p><p>这就很明确了，没有安装来源嘛————原本以为这种程序ubuntu的官方源中都应该有的。</p><p>既然这样，到<a href="https://apt.llvm.org/" target="_blank" rel="noopener">llvm网站</a>，按照指示添加源至<code>/etc/apt/sources.list</code>。因为是Ubuntu 20.04，所以添加focal的部分就可以了：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># i386 not available</span><br><span class="line">deb http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal main</span><br><span class="line">deb-src http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal main</span><br><span class="line"># 9</span><br><span class="line">deb http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal-9 main</span><br><span class="line">deb-src http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal-9 main</span><br><span class="line"># 10</span><br><span class="line">deb http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal-10 main</span><br><span class="line">deb-src http:&#x2F;&#x2F;apt.llvm.org&#x2F;focal&#x2F; llvm-toolchain-focal-10 main</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>我们选择装稳定版（stable branch）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先添加key</span></span><br><span class="line">wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装clang最新的稳定版本</span></span><br><span class="line">apt-get install clang-10 lldb-10 lld-10</span><br></pre></td></tr></table></figure><p>如果没有指定版本，会安装clang-11，这个还是开发版。</p><p>安装完成后，默认的命令是<code>clang-10</code>和<code>clang++-10</code>，需要使用<code>update-alternatives</code>来设置成<code>clang</code>和<code>clang++</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 1 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-10</span><br></pre></td></tr></table></figure><p>设置完成后就可以使用<code>clang</code>和<code>clang++</code>命令了：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">～/ clang++ --version</span><br></pre></td></tr></table></figure><p>输出：</p><blockquote><p>clang version 10.0.1-++20200507115421+eaae6dfc545-1<del>exp1</del>20200507220021.33<br>Target: x86_64-pc-linux-gnu<br>Thread model: posix<br>InstalledDir: /usr/bin</p></blockquote><p>至此，ubuntu下clang 就安装完成了。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> clang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开发机访问Android模拟器网络</title>
      <link href="/2020/05/05/android-simulator-network-service/"/>
      <url>/2020/05/05/android-simulator-network-service/</url>
      
        <content type="html"><![CDATA[<h3 id="模拟器网络"><a href="#模拟器网络" class="headerlink" title="模拟器网络"></a>模拟器网络</h3><p>这里说的模拟器，是 Google 官方模拟器。模拟器的网络是独立的，隐藏在虚拟路由器后面，使得模拟器可以通过开发机的网络接口，但是看不到开发机，当然也看不到开发机网络上的其他机器。</p><p>虚拟路由器管理的网络是 10.0.2/24，其中，10.0.2.1是网关，也就是虚拟路由器自己；10.0.2.2映射到开发机的127.0.0.1，模拟器要访问开发机的资源的话，就需要访问这个地址；10.0.2.15是模拟器自己的 ip，开发机访问模拟器就通过这个 ip。</p><h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><p>Android 开发文档提供了两种方式：使用模拟器控制台；使用 adb 工具。这两种方法都是用的端口转发的方式来通讯，但是 adb 的方式不能动态删除一条转发规则，所以这里不考虑。</p><h4 id="模拟器控制台端口"><a href="#模拟器控制台端口" class="headerlink" title="模拟器控制台端口"></a>模拟器控制台端口</h4><p>要使用模拟器控制台，首先需要确定模拟器的端口。使用 adb 命令<code>adb devices</code>，输出：</p><blockquote><p>List of devices attached<br>emulator-5554    device</p></blockquote><p>端口即为 <em>5554</em>。</p><p>使用 telnet 工具连接：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet localhost 5554</span><br></pre></td></tr></table></figure><p>telnet 工具有点老了，Windows 上默认是隐藏的，需要通过设置才可以使用，具体如何设置 Google 一下即可。</p><h4 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h4><p>连接上控制台后，会有提示说需要认证，并且认证的方法页在提示中说明了：</p><blockquote><p><code>~ telnet localhost 5554</code><br>Trying ::1…<br>Connected to localhost.<br>Escape character is ‘^]’.<br>Android Console: Authentication required<br>Android Console: type ‘auth <auth_token>‘ to authenticate<br>Android Console: you can find your <auth_token> in<br>‘/Users/username/.emulator_console_auth_token’<br>OK</p></blockquote><p>我用的是 macos，其他平台大同小异。找到<code>.emulator_console_auth_token</code>文件，把里面的字符串复制一下，然后直接输入：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auth gu9eE2s761qDJG4R</span><br></pre></td></tr></table></figure><p><code>gu9eE2s761qDJG4R</code>即为<code>.emulator_console_auth_token</code>文件中的<em>auth_token</em>。</p><p>认证后，输入<code>help</code>命令，会列出所有能在模拟器控制台中使用的命令。如果没有认证，那么只有几个基本命令可以使用。</p><h4 id="端口转发-1"><a href="#端口转发-1" class="headerlink" title="端口转发"></a>端口转发</h4><p>接下来使用<code>redir</code>命令添加端口转发规则。如果在模拟器上的服务使用的是 <em>8000</em> 端口，在开发机上随便选一个大于 <em>1024</em> 的端口进行转发（1024以下的端口需要权限）。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">redir add tcp:3000:8000</span><br></pre></td></tr></table></figure><p><code>redir</code>的使用语法是：<code>redir (tcp|udp):hostport:guestport</code>，支持 tcp 和 udp 协议的转发，后面第一个端口是开发机的端口，最后的是模拟器的端口。</p><p>所以，添加上面的转发规则后，要访问模拟器上<em>8000</em>端口的服务，在开发机上访问<code>localhost:3000</code>就可以了。</p><h4 id="redir-其他子命令"><a href="#redir-其他子命令" class="headerlink" title="redir 其他子命令"></a>redir 其他子命令</h4><p>在模拟器控制台运行 <code>redir</code> 命令，会显示能使用的子命令：</p><blockquote><p>available sub-commands:<br>    list             list current redirections<br>    add              add new redirection<br>    del              remove existing redirection</p></blockquote><ul><li>redir list: 查看当前设置的转发列表</li><li>redir add: 增加一条转发规则，用法<code>redir (tcp|udp):hostport:guestport</code></li><li>redir del: 删除一条转发规则，用法<code>redir (tcp|udp):hostport</code></li></ul><h4 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h4><p>其实就是退出<code>telnet</code>，直接输入<code>quit</code>或者<code>exit</code>命令就可以退出。也可以按照 telnet 提示，使用快捷键<code>ctrl~]</code>退到 telnet shell，再通过<code>ctrl+d</code>或者<code>quit</code>命令退出。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://developer.android.com/studio/run/emulator-networking" target="_blank" rel="noopener">Set up Android Emulator networking  |  Android Developers</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>build ubuntu 18.04 kernel</title>
      <link href="/2020/05/05/build-ubuntu-18-04-kernel/"/>
      <url>/2020/05/05/build-ubuntu-18-04-kernel/</url>
      
        <content type="html"><![CDATA[<p>虽然是在 Ubuntu 18.04 上的实验，但是其他版本应该也适用。</p><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><h4 id="安装-linux-和-linux-image-依赖"><a href="#安装-linux-和-linux-image-依赖" class="headerlink" title="安装 linux 和 linux image 依赖"></a>安装 linux 和 linux image 依赖</h4><p><code>sudo apt-get build-dep linux linux-image-$(uname -r)</code></p><p>在能成功运行上面的命令之前，可能需要编辑<code>/etc/apt/sources.list</code>，把其中<code>deb-src</code>的行的注释都去掉，然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>继续安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-source kernel-package</span><br><span class="line">sudo apt-get install libncurses-dev</span><br></pre></td></tr></table></figure><h3 id="准备代码"><a href="#准备代码" class="headerlink" title="准备代码"></a>准备代码</h3><ul><li><p>进入 <code>/usr/src/linux-source-4.15.0</code>目录，其中，<code>linux-source-4.15.0</code> 也是当前 Ubuntu 18.04 默认使用的内核版本，这可以通过 <code>uname -r</code> 来进行确认。</p></li><li><p>解压缩文件<code>linux-source-4.15.0.tar.bz2</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar jvcf linux-source-4.15.0.tar.bz2</span><br></pre></td></tr></table></figure></li><li><p>复制当前的配置文件到源码目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /boot/config-4.15.0-99-generic .config</span><br></pre></td></tr></table></figure></li><li><p>把上面复制的旧的配置文件应用到内核代码中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make oldconfig</span><br></pre></td></tr></table></figure></li><li><p>配置内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><h3 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h3><p>运行下面的命令开始编译代码。其中，<code>deb-pkg</code> 参数会在<code>/usr/src/</code>下生成几个 deb 安装包，之后可以通过 <code>dpkg -i linux-*.deb</code> 来安装内核。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make clean</span><br><span class="line">sudo make -j2 deb-pkg LOCALVERSION=-custom</span><br></pre></td></tr></table></figure><p><code>-custom</code>参数可以自己设定，会在内核版本后面添加该字符串，也就是运行<code>uname -r</code>看到的 generic 这样的字符串。</p><p>如果需要编译模块，可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make modules</span><br><span class="line">sudo make modules_install</span><br></pre></td></tr></table></figure><p><code>make modules_install</code>是模块编译完成后进行安装到对应目录。</p><h3 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h3><p>编译好的内核文件默认放在上一级目录，共有4个 deb 文件。安装命令入下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">sudo dpkg -i linux-*.deb</span><br></pre></td></tr></table></figure><p>安装后，新的内核文件会出现在<code>/boot</code>目录下，同时<code>/boot/grub/menu.lst</code>中还会添加新的内核启动入口，在系统启动的时候按住<code>shift</code>键可以选择使用哪个内核，默认使用新内核。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel" target="_blank" rel="noopener">Kernel/BuildYourOwnKernel - Ubuntu Wiki</a></li><li><a href="https://www.linuxtopia.org/online_books/linux_kernel/kernel_configuration/re137.html" target="_blank" rel="noopener">Linux Kernel Configuration - LOCALVERSION</a></li><li><a href="https://debian-handbook.info/browse/stable/sect.kernel-compilation.html" target="_blank" rel="noopener">The Debian Administrator’s Handbook: 8.10. Compiling a Kernel</a></li><li><a href="https://help.ubuntu.com/lts/installation-guide/amd64/ch08s06.html" target="_blank" rel="noopener">Ubuntu Installation Guide: 8.6. Compiling a New Kernel</a></li><li><a href="https://askubuntu.com/questions/1056598/trying-to-build-kernel-on-18-04-no-editconfigs-option" target="_blank" rel="noopener">compiling - Trying to build kernel on 18.04. No editconfigs option - Ask Ubuntu</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu 18.04 desktop不接显示器开启 vnc 服务</title>
      <link href="/2020/05/02/vino-on-headless-ubuntu-desktop/"/>
      <url>/2020/05/02/vino-on-headless-ubuntu-desktop/</url>
      
        <content type="html"><![CDATA[<p>Ubuntu 下如果没有接入显示器，vnc 会无法正常工作，所以需要做一些额外的操作来处理。</p><h3 id="配置-vino"><a href="#配置-vino" class="headerlink" title="配置 vino"></a>配置 vino</h3><p>Ubuntu使用vino来作为默认的vnc服务器，但是默认的设置需要进行一些修改，特别是<code>require-encryption</code>这个标志，macos自带的vnc客户的不支持它的加密方式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.Vino require-encryption <span class="literal">false</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.Vino prompt-enabled <span class="literal">false</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.Vino authentication-methods <span class="string">"['vnc']"</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.Vino lock-screen-on-disconnect <span class="literal">false</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.Vino vnc-password $(<span class="built_in">echo</span> -n <span class="string">"mypassword"</span>|base64)</span><br></pre></td></tr></table></figure><p>需要注意的是，不要用<code>sudo</code>来运行上面的命令，否则不但在ssh客户的操作时会有警告，而且修改的也不是当前的配置。</p><h3 id="自动启动-vino-server"><a href="#自动启动-vino-server" class="headerlink" title="自动启动 vino server"></a>自动启动 vino server</h3><p>随用户登录后，自动启动 vino server。编辑一个 vino-server.desktop 文件，如果 autostart 目录不存在，就创建一个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.config/autostart/vino-server.desktop</span><br></pre></td></tr></table></figure><p>填入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type&#x3D;Application</span><br><span class="line">Name&#x3D;Vino VNC server</span><br><span class="line">Exec&#x3D;&#x2F;usr&#x2F;lib&#x2F;vino&#x2F;vino-server</span><br><span class="line">NoDisplay&#x3D;true</span><br></pre></td></tr></table></figure><p>vino-server 不能在 console 中运行，所以需要在用户登录到桌面后用这样的方式自动启动。</p><h3 id="安装-video-dummy"><a href="#安装-video-dummy" class="headerlink" title="安装 video-dummy"></a>安装 video-dummy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xserver-xorg-video-dummy</span><br></pre></td></tr></table></figure><h3 id="配置-dummy-显示器"><a href="#配置-dummy-显示器" class="headerlink" title="配置 dummy 显示器"></a>配置 dummy 显示器</h3><p>在<code>/etc/X11</code>下创建 xorg.conf 文件，填写分辨率等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/X11/xorg.conf</span><br></pre></td></tr></table></figure><p>填写如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Section <span class="string">"Monitor"</span></span><br><span class="line">Identifier <span class="string">"Monitor0"</span></span><br><span class="line">HorizSync 28.0-80.0</span><br><span class="line">VertRefresh 48.0-75.0</span><br><span class="line"><span class="comment"># 1024x768 @ 60.00 Hz (GTF) hsync: 47.70 kHz; pclk: 64.11 MHz</span></span><br><span class="line"><span class="comment"># Modeline "1024x768_60.00" 64.11 1024 1080 1184 1344 768 769 772 795 -HSync +Vsync</span></span><br><span class="line"><span class="comment"># 1280x720 @ 60.00 Hz (GTF) hsync: 44.76 kHz; pclk: 74.48 MHz</span></span><br><span class="line"><span class="comment"># Modeline "1280x720_60.00" 74.48 1280 1336 1472 1664 720 721 724 746 -HSync +Vsync</span></span><br><span class="line"><span class="comment"># 1368x768 @ 60.00 Hz (GTF) hsync: 47.70 kHz; pclk: 85.86 MHz</span></span><br><span class="line"><span class="comment"># Modeline "1368x768_60.00" 85.86 1368 1440 1584 1800 768 769 772 795 -HSync +Vsync</span></span><br><span class="line"><span class="comment"># 1600x900 @ 60.00 Hz (GTF) hsync: 55.92 kHz; pclk: 119.00 MHz</span></span><br><span class="line"><span class="comment"># Modeline "1600x900_60.00" 119.00 1600 1696 1864 2128 900 901 904 932 -HSync +Vsync</span></span><br><span class="line"><span class="comment"># 1920x1080 @ 60.00 Hz (GTF) hsync: 67.08 kHz; pclk: 172.80 MHz</span></span><br><span class="line">Modeline <span class="string">"1920x1080_60.00"</span> 172.80 1920 2040 2248 2576 1080 1081 1084 1118 -HSync +Vsync</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">"Device"</span></span><br><span class="line">Identifier <span class="string">"Card0"</span></span><br><span class="line">Option <span class="string">"NoDDC"</span> <span class="string">"true"</span></span><br><span class="line">Option <span class="string">"IgnoreEDID"</span> <span class="string">"true"</span></span><br><span class="line">Driver <span class="string">"dummy"</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">"Screen"</span></span><br><span class="line">DefaultDepth 16</span><br><span class="line">Identifier <span class="string">"Screen0"</span></span><br><span class="line">Device <span class="string">"Card0"</span></span><br><span class="line">Monitor <span class="string">"Monitor0"</span></span><br><span class="line">    SubSection <span class="string">"Display"</span></span><br><span class="line">    Depth 16</span><br><span class="line">    Modes <span class="string">"1920x1080"</span></span><br><span class="line">    EndSubSection</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><h3 id="配置用户自动登录桌面"><a href="#配置用户自动登录桌面" class="headerlink" title="配置用户自动登录桌面"></a>配置用户自动登录桌面</h3><p>查看当前用的是什么管理器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/X11/default-display-manager</span><br></pre></td></tr></table></figure><p>我的是<code>/usr/sbin/gdm3</code>，那么编辑文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/gdm3/custom.conf</span><br></pre></td></tr></table></figure><p>把下面三行的注释去掉，其中<code>AutomaticLogin</code>行修改成自己的用户名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WaylandEnable=<span class="literal">false</span></span><br><span class="line">AutomaticLoginEnable = <span class="literal">true</span></span><br><span class="line">AutomaticLogin = username</span><br></pre></td></tr></table></figure><p>重启电脑，就可以登录了。</p><h3 id="重启桌面"><a href="#重启桌面" class="headerlink" title="重启桌面"></a>重启桌面</h3><p>我通过 macos 的 <code>Screen Sharing.app</code> 用 vnc 协议来连接，查看 Ubuntu 的 Settings 的时候每次都会 crash，据说是 nvidia 的驱动问题，但是我没有深究，有兴趣的可以研究。</p><p>crash 后，vino-server 就退出了，要再次启动的话，需要重启桌面管理。Ubuntu 18.04下，只需要运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart display-manager</span><br></pre></td></tr></table></figure><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>这样配置后，如果再次接上显示器后，显示器会黑屏，这时候，需要把<code>/etc/X11/xorg.conf</code>删除或者改名，比如改成<code>/etc/X11/xorg.conf.dummy</code>，然后重启显示管理器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart display-manager</span><br></pre></td></tr></table></figure><p>即可。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> vnc </tag>
            
            <tag> vino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaFileShare macos 版本介绍</title>
      <link href="/2020/04/26/dafileshare-macos-version-how-to/"/>
      <url>/2020/04/26/dafileshare-macos-version-how-to/</url>
      
        <content type="html"><![CDATA[<p>DaFileShare 主要用来在电脑和手机之间进行文件分享。手机端无需下载任何软件，通过浏览器就可以接收文件。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>启动 App</p><p><img src="/images/dfs_empty.png" alt="启动后.png"></p><p>把需要分享的文件拖动到窗口中，App 会生成分享的链接和二维码。</p><p><img src="/images/dfs_sharing.png" alt="42419761.png"></p><p>复制链接，发送给接收的人员即可下载。如果手机浏览器支持扫描二维码，也可以直接扫描二维码进行下载。</p><h1 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h1><p>你可以下载 <a href="https://github.com/deskangel/DaFileShare/releases/download/v1.1/DaFileShare.app.zip" target="_blank" rel="noopener">DaFileShare</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dafileserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>私人日记 P.Diary</title>
      <link href="/2020/04/25/p-diary/"/>
      <url>/2020/04/25/p-diary/</url>
      
        <content type="html"><![CDATA[<p>P.Diary就是 Personal Diary 的意思。</p><p>之前用 iPhone 的时候，记点私人的感悟什么的，都用的是 Momento，但是换到 Android 手机后，就再也没有找到一个很好的日记软件，大部分都是游记，强调的是图文，社交，这些都不适合我。我只是想安安静静地写个日记，留待老了可以做在炉火旁摇椅上慢慢地读。</p><p>P.Diary 就是在这样的想法下产生的。它有这样一些特点：</p><h3 id="一-纯粹"><a href="#一-纯粹" class="headerlink" title="一. 纯粹"></a>一. 纯粹</h3><p>没有很多功能，就是一个传统意义上的日记软件，只是数字化而已。以<code>文字记录</code>为主，<code>天气和心情</code>用系统自带的 emoji，尽量不引入不必要的资源和功能。</p><h3 id="二-私人"><a href="#二-私人" class="headerlink" title="二. 私人"></a>二. 私人</h3><p>这是开发中很重要的一个考虑点。推己及人，如果是别人开发这样一个软件，做到什么样我才会放心的使用它来记录一些私人甚至私密的生活感受和感悟？</p><p>出于这样的考虑，这是一款纯<code>单机</code>的 App，特意避免任何的网络请求，包括云端存储。</p><p>日记保存是通过导出文件的方式进行存放，虽然比起云端存放多了一点麻烦，但是更让人安心。</p><h3 id="三-安全"><a href="#三-安全" class="headerlink" title="三. 安全"></a>三. 安全</h3><p>安全方面，除了用登录密码做一个入口的安全检查外，每一篇日记都可以选择是否进行加密。而加密的日记会在列表中以<code>模糊</code>的方式显示，这是考虑到万一需要在非私密环境下打开 App，不会把一些需要隐藏的文字暴露给外人。</p><p>加密后的日记，在导出后的文件中也是加密的，可以安全存放在云盘上，比如 DropBox 或者 Google Drive。如果手机安装了这些软件，可以在导出后的提示框中直接把文件分享过去进行存放，相当方便。</p><h3 id="四-图片"><a href="#四-图片" class="headerlink" title="四. 图片"></a>四. 图片</h3><p>图片功能我也一直在考虑，主要是两个问题：</p><ol><li>是否有必要。一开始的设想是没有必要，图片的记录就使用专门图片记录的 App 好了，比如 Google  相册 App，无限容量不说，还有很多其他功能。不过有时候也会有一些和文字强相关的图片想放在日记里，就又觉得或许有必要增加这个功能。</li><li>如何存放的问题。是原图存放，还是进行压缩裁剪。原图存放很容易使得数据变大，压缩裁剪又会增加额外操作，毕竟图片只是一个辅助的作用，不想在上面开发很多功能。</li></ol><h3 id="五-平台"><a href="#五-平台" class="headerlink" title="五. 平台"></a>五. 平台</h3><p>iOS 和 macos 也是支持的，已经开发完成。但是由于个人没有申请账号，所有没有发布出来。或许等以后开发的 App 多了之后会一起上架吧，比较上架 Apple App Store 比较麻烦，怕了。</p><h3 id="六-定价"><a href="#六-定价" class="headerlink" title="六. 定价"></a>六. 定价</h3><p>不喜欢订阅等方式，采用的是一次性定价，设定的是Google play 商店的最低价。</p><p>现在还写日记的人应该是非常少了，写私密日记的更是凤毛麟角，理论上应该把定价定得很高才是——但人有时候就是这么任性！</p><p>如果你觉得这个日记 App 有点符合你的需要，随时可以发邮件向我要兑换码，不需要有任何压力。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>Google play store 的下载地址：<br><a href="https://play.google.com/store/apps/details?id=com.deskangel.personal_diary" target="_blank" rel="noopener">P.Diary - Apps on Google Play</a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> p.diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaFileShare 开发笔记</title>
      <link href="/2020/04/20/dafileserver-dev-notes/"/>
      <url>/2020/04/20/dafileserver-dev-notes/</url>
      
        <content type="html"><![CDATA[<p>一直以来都觉得电脑分享文件到手机上比较麻烦，试过不少软件，不是收费很贵就是不太方便，至于通过 USB 线——感觉这个更不方便。每次通过微信，QQ 之类的 IM 传了文件之后，就想要开发一个简单的文件分享工具。</p><p>DaFileShare 的代码很简单，分成两个部分：</p><ul><li>Command line 的 http server 提供文件分享功能</li><li>Mac App 对其进行封装，提供拖放支持</li></ul><p>开发 DaFileShare 之前没有做过 Mac App 的开发，也没有接触过 Swift，一切都是新学，所以记一下Mac App的开发过程，以及遇到的问题，至于 Command line 部分，没有什么好讲的。</p><p>第一个遇到的问题就是<code>拖放</code>。</p><h3 id="拖放"><a href="#拖放" class="headerlink" title="拖放"></a>拖放</h3><p>Macos 的拖放是通过剪切板实现的，首先App需要注册拖放的类型。第一个纠结的问题是：在哪里注册？</p><p>参考了网上的文章和 Apple 的开发文档，NSView 提供了拖放的支持，但是还需要进行一些处理。经过测试，<code>awakFromNib</code> 是一个很好的入口，哪怕用的是<code>StoryBoard</code>，一样会进入这个函数。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">awakeFromNib</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.awakeFromNib()</span><br><span class="line">    <span class="keyword">self</span>.registerForDraggedTypes([<span class="type">NSPasteboard</span>.<span class="type">PasteboardType</span>.fileURL])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为新手的原因，不知道如何把 NSView 类和 StoryBoard，Google 了很久也没有任何发现，直到后来看到 <code>identity inspector</code> 下的 <code>Custom Class</code>，尝试着把 StoryBoard 中的 view 的类改为自己的类才算成功。</p><h4 id="获取拖放的数据"><a href="#获取拖放的数据" class="headerlink" title="获取拖放的数据"></a>获取拖放的数据</h4><p>可能是因为 Swift 的快速发展，网上一些文章已经过时，获取剪切板数据的方法在 Xcode 11.4.1 下已经失效了。下面是可以工作的代码：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">performDragOperation</span><span class="params">(<span class="number">_</span> sender: NSDraggingInfo)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> pboard = sender.draggingPasteboard</span><br><span class="line">    <span class="keyword">let</span> dragTypes = pboard.types! <span class="keyword">as</span> <span class="type">NSArray</span></span><br><span class="line">    <span class="keyword">if</span> dragTypes.<span class="built_in">contains</span>(<span class="type">NSPasteboard</span>.<span class="type">PasteboardType</span>.fileURL) &#123;</span><br><span class="line">        <span class="keyword">let</span> files = pboard.propertyList(forType: <span class="type">NSPasteboard</span>.<span class="type">PasteboardType</span>(rawValue: <span class="string">"NSFilenamesPboardType"</span>)) <span class="keyword">as</span>! [<span class="type">String</span>]</span><br><span class="line">        <span class="keyword">let</span> numberOfFiles = files.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> numberOfFiles &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> filePath = files[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> delegate = <span class="keyword">self</span>.delegate &#123;</span><br><span class="line">                <span class="type">NSLog</span>(<span class="string">"file path \(filePath)"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><p>第二个遇到的大问题是关闭：view 的关闭，窗口的关闭，App 的关闭。<br>由于想在退出 App 的时候进行一些处理，特别是 Command line 的 http server 进程的关闭，结果就遇到问题了。</p><h4 id="同步关闭"><a href="#同步关闭" class="headerlink" title="同步关闭"></a>同步关闭</h4><p>首先，点击窗口上的关闭按钮后，只是关闭了窗口，但是 App 没有退出。再次点击 Dock 上的 App 图标，也没有像其他应用一样再次打开窗口，而是没有任何反应。<br>因为我不需要再打开窗口，只需要同步关闭，这个比较好处理，在 <code>AppDelegate</code> 中加一个函数即可：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">applicationShouldTerminateAfterLastWindowClosed</span><span class="params">(<span class="number">_</span> sender: NSApplication)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不同的关闭方式"><a href="#不同的关闭方式" class="headerlink" title="不同的关闭方式"></a>不同的关闭方式</h4><p>然后，只需要找个地方同一处理关闭事件就好了吧？——然而并不是！<br>正常的关闭方式有三种：关闭按钮，菜单Quit，Cmd+Q。三种方式，三个表现形式！！</p><hr><h5 id="关闭按钮"><a href="#关闭按钮" class="headerlink" title="关闭按钮"></a>关闭按钮</h5><p>窗口上的关闭按钮可能是最正常的方式了。点击后，<code>ViewController</code> 的 <code>viewDidDisappear</code> 被调用，但是如果你在 <code>AppDelegate</code> 有写<br><code>applicationShouldTerminate</code> 函数，你会发现这个函数关闭没有调用到。</p><h5 id="菜单-Quit"><a href="#菜单-Quit" class="headerlink" title="菜单 Quit"></a>菜单 Quit</h5><p>通过菜单——不管是 Dock 上的菜单还是菜单栏上——的Quit，<code>applicationShouldTerminate</code> 被调用到了，但是，<code>viewDidDisappear</code> 没有调用。</p><h5 id="Cmd-Q"><a href="#Cmd-Q" class="headerlink" title="Cmd+Q"></a>Cmd+Q</h5><p>一句话，什么都不调用！！</p><hr><p>通过查阅资料，是因为在”macOS 10.6”中引入了一个叫做<code>Sudden Termination</code>的机制来快速关闭 App。由于刚开始接触 macos 开发，不想一开始就钻研太深，还是尽早把 App 实现才是正事，所以只看了如何关闭这个机制。没错，这个<code>Sudden Termination</code>可以关闭，只需要一行代码：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">applicationDidFinishLaunching</span><span class="params">(<span class="number">_</span> aNotification: Notification)</span></span> &#123;</span><br><span class="line">    <span class="comment">// Insert code here to initialize your application</span></span><br><span class="line">    <span class="type">ProcessInfo</span>.processInfo.disableSuddenTermination()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，这三种关闭方式都会调用到<code>applicationShouldTerminate</code>和<code>viewDidDisappear</code>，选一个地方处理就可以。我是在<code>viewDidDisappear</code>中进行处理，因为主要的逻辑代码在<code>ViewController</code>中。</p><h5 id="异常关闭"><a href="#异常关闭" class="headerlink" title="异常关闭"></a>异常关闭</h5><p>异常关闭有两种：一种是程序出现 Exception 导致退出的，一种是被 kill 掉。</p><p>根据 Windows 上的经验，第一种应该有一个全局处理比如“unCaughtException” 这样的函数来处理，但是我没有尝试；第二种应该是需要捕获 signal 来处理，我尝试了但是没有成功，于是为了省事，把 kill signal屏蔽掉了：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">applicationDidFinishLaunching</span><span class="params">(<span class="number">_</span> aNotification: Notification)</span></span> &#123;</span><br><span class="line">    <span class="comment">// Insert code here to initialize your application</span></span><br><span class="line">    <span class="type">ProcessInfo</span>.processInfo.disableSuddenTermination()</span><br><span class="line"></span><br><span class="line">    signal(<span class="type">SIGTERM</span>, <span class="type">SIG_IGN</span>) <span class="comment">// ignore the termination signal</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><p>Xcode 11.4.1，Swift 5，macos 10.15.4</p><h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p>你可以下载 <a href="https://github.com/deskangel/DaFileShare/releases/download/v1.1/DaFileShare.app.zip" target="_blank" rel="noopener">DaFileShare</a></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dafileserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Build EOS on ubuntu 16.04</title>
      <link href="/2018/03/31/build-eos-on-ubuntu-16-04/"/>
      <url>/2018/03/31/build-eos-on-ubuntu-16-04/</url>
      
        <content type="html"><![CDATA[<p>为了和官方测试链对接，选择的是<code>dawn-2.x</code>分支。官方推荐的是在<code>Ubuntu 16.10</code>上面编译，但是我只有16.04，想来应该是差不多的。</p><p>参考<a href="https://github.com/EOSIO/eos/blob/DAWN-2018-02-14/README.md" target="_blank" rel="noopener">官方文档</a>，直接开干。</p><h4 id="第一个坑"><a href="#第一个坑" class="headerlink" title="第一个坑"></a>第一个坑</h4><p>第一个坑其实是关于git的，具体一点就是关于git的子模块的。如果在命令行checkout dawn-2.x分支，一定不要忘了在子模块不会自动切换分支。而且，手动切换后，也会留下一堆<code>Untracked files</code>，我是直接没管。</p><h4 id="第二个坑"><a href="#第二个坑" class="headerlink" title="第二个坑"></a>第二个坑</h4><p>一开始自然是使用自动编译脚本<code>./build.sh ubuntu</code>。前面的下载和配置都没有报错，直到编译的时候，提示找不到<code>clang</code>，而且是<code>opt/wasm/bin/</code>下找不到。这好办，找到<code>/usr/bin/clang-4.0</code>，在<code>opt/wasm/bin/</code>下创建个链接就好</p><h4 id="第三个坑"><a href="#第三个坑" class="headerlink" title="第三个坑"></a>第三个坑</h4><p>然后<code>make -j4</code>，还是提示错误，仔细一看，是<code>binaryen</code>没有。处理第一个坑的时候，明明看到<code>binaryen</code>明晃晃的躺在<code>opt/</code>目录下，怎么没有了？进去一看，居然是空的！！</p><p>把<a href="https://github.com/EOSIO/eos/blob/DAWN-2018-02-14/README.md#ubuntu" target="_blank" rel="noopener">官方文档</a>翻到手动编译部分，找到<code>binaryen</code>的github地址，开始clone，只是速度非常慢。过了一段时间，一看已经失败了。提示错误信息：</p><blockquote><blockquote><p>error: RPC failed; curl 18 transfer closed with outstanding read data remaining<br>fatal: The remote end hung up unexpectedly<br>fatal: early EOF</p></blockquote></blockquote><p>Google之后，网友们会告诉你，这是缓存不够的原因。设置下git的配置 <code>git config --global http.postBuffer 524288000</code>，把缓存加大。而我修改了这个设置之后，又设置了http代理，几秒钟就把代码拉下来了。</p><p>大概也就遇到了这两个问题，应该说还算是比较顺利的。文档上说要下载<code>secp256k1-zkp</code>，然后我找了下，自动化脚本应该没有下载，而我也没有手动去下，并没有影响到编译和运行。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eos </tag>
            
            <tag> blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>custom-eui-control-in-egret</title>
      <link href="/2017/09/21/custom-eui-control-in-egret/"/>
      <url>/2017/09/21/custom-eui-control-in-egret/</url>
      
        <content type="html"><![CDATA[<p>如何创建一个 eui 的控件，在 egret 的文档中是比较零散的，而且有些东西也没有讲到。这里提供一个比较完整的范例。</p><ol><li>创建一个 exml 文件，用来定义控件的显示元素，这里要注意的<code>classname</code> 的设置，比如设置成 <code>game.CustomButton</code>。game 为模块名（文档上也称呼为命名空间），后面需要用到。</li><li>创建一个 ts 文件，用来处理控件的逻辑。这个 ts 文件里面需要有模块，比如：<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> game &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">class</span> CustomButton <span class="keyword">extends</span> eui.Button &#123;</span><br><span class="line">        <span class="keyword">public</span> rtQuality: eui.Rect;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">super</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.skinName = <span class="string">"resource/skins/custom/EquipButtonSkin.exml"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">set</span> quality(color: <span class="built_in">number</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.rtQuality) &#123;</span><br><span class="line">                <span class="keyword">this</span>.rtQuality.strokeColor = color;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> label = <span class="keyword">this</span>.labelDisplay <span class="keyword">as</span> eui.Label;</span><br><span class="line">            label.textColor = color;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">get</span> quality(): <span class="built_in">number</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.rtQuality) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.rtQuality.strokeColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0x444444</span>;</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在其他皮肤中使用的时候，可以从组件列表（COMPONENT/Custom)中直接拖动控件来使用，在 wing 4.03 版本中需要修改一下<code>Category Properties</code>中的 Skin，这应该是 wing 的一个 bug。</li><li>看一下 exml 的 Source，会发现添加了两个东西。一个是根节点的 <code>&lt;e:Skin ......... xmlns:game=&quot;game.*&quot; &gt;</code>；另一个是添加的控件的 tag 是 <code>&lt;game:CustomButton .....&gt;</code><br>关于这一点，可以<a href="http://developer.egret.com/cn/github/egret-docs/extension/EUI/advancedSkills/useComponents/index.html" target="_blank" rel="noopener">参考文档</a>。</li><li>在 ts 文件中使用的时候和普通的按钮一样，只是类型需要设置成 <code>game.CustomButton</code>。 </li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> egret </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>乐动力“网络不给力”问题的处理</title>
      <link href="/2016/10/01/ledongli-login-issue-workaround/"/>
      <url>/2016/10/01/ledongli-login-issue-workaround/</url>
      
        <content type="html"><![CDATA[<p>MX5上的乐动力 App 很早以前就不能登录了，各种途径都是提示“网络不给力”，等了大半年看他们是否会修正这个问题，但是每次版本更新后都试了，问题依旧存在。而且，无论是官网还是 App或是微博客服，都没有提供相关的说明该如何操作。<br>为了不丢失数据，只好自己动手了。</p><p>进入 Flyme 5 的访客系统，安装微信和乐动力 App，测试登录正常，之前的数据也能正常同步下来。</p><h4 id="第一步，祭出-Charles-看看都干了啥"><a href="#第一步，祭出-Charles-看看都干了啥" class="headerlink" title="第一步，祭出 Charles 看看都干了啥"></a>第一步，祭出 Charles 看看都干了啥</h4><p>启动 Charles，然后在手机上设置代理，进行登录，发现一个正常的登录主要做了几个操作：</p><ol><li>adduser，发送一个 pc 串，返回一个临时的 id</li><li>authbywechat，登录请求，url参数 uid 为之前请求的临时 id，返回用户 id</li><li>getinfo，获得用户相关信息，包括头像 url</li><li>updatewechatinfo，更新数据</li><li>updateinfo，更新数据</li></ol><h4 id="第二步，进入正常的系统，看看无法登录的版本都做了些什么"><a href="#第二步，进入正常的系统，看看无法登录的版本都做了些什么" class="headerlink" title="第二步，进入正常的系统，看看无法登录的版本都做了些什么"></a>第二步，进入正常的系统，看看无法登录的版本都做了些什么</h4><ol><li>authbywechat，url参数 uid 为<strong>残留的用户 id</strong>，返回 {“errorCode”: -10001, “ret”: “auth fail”}</li></ol><p>返回错误后就没有后续请求了。</p><p>现在看来就是验证的时候的 uid 的问题。查看反编译后的代码的时候发现，登录成功后这个 uid 是会被覆盖的。这样的话，给 App 一些正常的数据，让他先登录成功一次，以后理论上就不会有问题了。</p><p>如果是 root 的设备，直接把 SharedPreferences 中的 uid 的值改为0，App 就会进入 adduser 的流程，这样会比较简单。我不想 root 这个设备，所以写了些代码来模拟登录的流程。</p><h4 id="第三部，拦截请求，修改数据"><a href="#第三部，拦截请求，修改数据" class="headerlink" title="第三部，拦截请求，修改数据"></a>第三部，拦截请求，修改数据</h4><p>把正常登录的数据保存下来，在拦截到请求后把这些数据返回给 App。可能这部分也可以在 Charles 中完成，不过我修改了 hosts 文件，然后直接写了些 php 代码：<br>hosts 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 walk.ledongli.cn</span><br></pre></td></tr></table></figure><p>路由部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Route::post(<span class="string">'/v2/rest/users/authbywechat'</span>, <span class="string">'MsgController@handleAuthWeChat'</span>);</span><br><span class="line">Route::post(<span class="string">'/v2/rest/users/getinfo'</span>, <span class="string">'MsgController@handleGetInfo'</span>);</span><br><span class="line">Route::post(<span class="string">'/v2/rest/users/updatewechatinfo'</span>, <span class="string">'MsgController@handleUpdateWeChatInfo'</span>);</span><br><span class="line">Route::post(<span class="string">'/v2/rest/users/updateinfo'</span>, <span class="string">'MsgController@handleUpdateInfo'</span>);</span><br></pre></td></tr></table></figure><p>响应部分(uid 和部分返回值删除了）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handleUpdateWeChatInfo</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response()-&gt;json([<span class="string">"errorCode"</span> =&gt; <span class="number">0</span>, <span class="string">"ret"</span> =&gt; <span class="keyword">null</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handleUpdateInfo</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response()-&gt;json([<span class="string">"errorCode"</span> =&gt; <span class="number">0</span>, <span class="string">"ret"</span> =&gt; <span class="keyword">null</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handleAuthWeChat</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response()-&gt;json([<span class="string">"errorCode"</span> =&gt; <span class="number">0</span>, <span class="string">"ret"</span> =&gt; [<span class="string">"uid"</span> =&gt; xxxxxxxxxx]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handleGetInfo</span><span class="params">(Request $request)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response()-&gt;json([<span class="string">"errorCode"</span> =&gt; <span class="number">0</span>, <span class="string">"ret"</span> =&gt; [<span class="string">"target"</span> =&gt; , <span class="string">"weight"</span> =&gt; <span class="string">""</span>, <span class="string">"gender"</span> =&gt; <span class="string">"m"</span>, <span class="string">"checkined"</span> =&gt; , <span class="string">"checkin_mcount"</span> =&gt; , <span class="string">"birthdate"</span> =&gt; <span class="string">""</span>, <span class="string">"height"</span> =&gt; <span class="string">""</span>, <span class="string">"is_wechat"</span> =&gt; <span class="keyword">true</span>, <span class="string">"avatar"</span> =&gt; <span class="string">""</span>, <span class="string">"is_qq"</span> =&gt; <span class="keyword">false</span>, <span class="string">"is_sina"</span> =&gt; <span class="keyword">false</span>, <span class="string">"nickname"</span> =&gt; <span class="string">""</span>, <span class="string">"email"</span> =&gt; <span class="string">""</span>, <span class="string">"is_email"</span> =&gt; <span class="keyword">false</span>]]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录进入 App 之后，把 hosts 文件还原，去掉手机上 wifi 的代理，再在 App 中点击<code>立即备份数据</code>，可以看到开始正常备份了。</p><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><ul><li>之所以出现这个问题，是因为残留的 uid 去请求登录的时候会导致失败。可能的原因大概是某一个版本的登录逻辑改变了，但是没有处理好老版本的兼容性。其实哪怕多加一个按钮能重置一下用于登录的临时 id 也好啊。</li><li>同步的时候也出现了问题，同步一两条数据后就会卡住不动，不会自动重新开始，需要用户反复的进行操作才能把所有的数据同步完。</li><li>退出登录的时候，居然<strong>真的</strong>把用户的数据删除了。</li></ul><p>综合来看，乐动力这个 App 在这部分上设计得是比较烂的，可能只是一个临时的外包产品的品质。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> charles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React with Node.js in Webstorm</title>
      <link href="/2016/07/30/React-with-Node-js-in-Webstorm/"/>
      <url>/2016/07/30/React-with-Node-js-in-Webstorm/</url>
      
        <content type="html"><![CDATA[<p>软件环境：</p><table><thead><tr><th>软件</th><th>版本</th></tr></thead><tbody><tr><td>OSX</td><td>10.11.6</td></tr><tr><td>WebStorm</td><td>2016.2</td></tr><tr><td>Node.js</td><td>6.3.1</td></tr><tr><td>React</td><td>15.3.1</td></tr></tbody></table><p>Node.js 是通过 nvm 安装的最新版本。国内的网络环境，想通过 WebStorm 直接创建工程是做不到的，只能通过命令行，使用淘宝的镜像。</p><h3 id="安装-express"><a href="#安装-express" class="headerlink" title="安装 express"></a>安装 express</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> reactStudy</span><br><span class="line">npm install --registry=https://registry.npm.taobao.org -g express-generator</span><br><span class="line">express -e -css sass reactStudy</span><br><span class="line"><span class="built_in">cd</span> reactStudy</span><br><span class="line">npm install --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="安装-react"><a href="#安装-react" class="headerlink" title="安装 react"></a>安装 react</h3><p>安装 react、react-dom、babel、browserify、watchify 等模块。package.json 文件的内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"taskmgr"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"node ./bin/www"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"babel-cli"</span>: <span class="string">"^6.11.4"</span>,</span><br><span class="line">    <span class="attr">"babel-preset-es2015"</span>: <span class="string">"^6.9.0"</span>,</span><br><span class="line">    <span class="attr">"babel-preset-react"</span>: <span class="string">"^6.11.1"</span>,</span><br><span class="line">    <span class="attr">"babelify"</span>: <span class="string">"^7.3.0"</span>,</span><br><span class="line">    <span class="attr">"body-parser"</span>: <span class="string">"~1.15.1"</span>,</span><br><span class="line">    <span class="attr">"cookie-parser"</span>: <span class="string">"~1.4.3"</span>,</span><br><span class="line">    <span class="attr">"debug"</span>: <span class="string">"~2.2.0"</span>,</span><br><span class="line">    <span class="attr">"ejs"</span>: <span class="string">"~2.4.1"</span>,</span><br><span class="line">    <span class="attr">"express"</span>: <span class="string">"~4.13.4"</span>,</span><br><span class="line">    <span class="attr">"express-session"</span>: <span class="string">"^1.14.0"</span>,</span><br><span class="line">    <span class="attr">"morgan"</span>: <span class="string">"~1.7.0"</span>,</span><br><span class="line">    <span class="attr">"mysql"</span>: <span class="string">"^2.11.1"</span>,</span><br><span class="line">    <span class="attr">"node-sass-middleware"</span>: <span class="string">"0.8.0"</span>,</span><br><span class="line">    <span class="attr">"passport"</span>: <span class="string">"^0.3.2"</span>,</span><br><span class="line">    <span class="attr">"react"</span>: <span class="string">"^15.3.0"</span>,</span><br><span class="line">    <span class="attr">"react-dom"</span>: <span class="string">"^15.3.0"</span>,</span><br><span class="line">    <span class="attr">"serve-favicon"</span>: <span class="string">"~2.3.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"browserify"</span>: <span class="string">"^13.1.0"</span>,</span><br><span class="line">    <span class="attr">"watchify"</span>: <span class="string">"^3.7.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>在 views 目录下创建一个文件作为主文件：main.js。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"><span class="keyword">var</span> ReactDOM = <span class="built_in">require</span>(<span class="string">'react-dom'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Main = React.createClass(&#123;</span><br><span class="line"></span><br><span class="line">    render: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello william<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">    &lt;Main /&gt;,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>也可以使用 ES2015的方式来写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span></span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">"react-dom"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">App</span>/&gt;</span></span>, <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>));</span><br></pre></td></tr></table></figure><h3 id="配置babel"><a href="#配置babel" class="headerlink" title="配置babel"></a>配置babel</h3><p>在<strong>WebStorm-&gt;Preferences…-&gt;Tools-&gt;File Watchers</strong>下添加Babel。以下字段需要注意修改：</p><p>Field | Value | 说明<br>—|—<br>Name | Babel | 这里不要修改，不然还会提示添加 Babel Watcher<br>File type | javascript | 也可以选其他类型，只要和你自己的文件匹配<br>Program | $ProjectFileDir$/node_modules/browserify/bin/cmd.js |<br>Arguments | -t [ babelify –presets [ es2015 react ] ] ./views/main.js -o public/javascripts/index.bundle.js | 如果要调试，需要加上 -d 参数</p><p>在<code>index.ejs</code>文件的下方添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/javascripts/index.bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后的效果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/javascripts/index.bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为对 Babel 和 browserify 不熟悉，所以这一段是花时间最多的地方。开始的时候因为用了 jsx 扩展名，在文件头的注释中有<code>@jsx</code>，render 函数翻译出来的代码会带上 <code>file</code> 函数而不是<code>React.createElement</code>，导致错误。后来重启 WebStorm 就好了。</p><h3 id="结束"><a href="#结束" class="headerlink" title="结束."></a>结束.</h3>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> webstorm </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js from scratch</title>
      <link href="/2016/04/18/Node-js-from-scratch/"/>
      <url>/2016/04/18/Node-js-from-scratch/</url>
      
        <content type="html"><![CDATA[<p>使用 webstorm，从创建一个空白的工程开始构建一个 Node.js 的websocket服务器。</p><ol><li>创建空白工程</li><li>添加一个 js 文件，比如 main.js</li><li>添加一个 package.json 文件</li><li>在控制台中进入工程的根目录，使用命令<code>npm install --save ws</code>添加websocket模块。使用<code>--save</code>参数会把模块的依赖直接添加到 package.json 文件中。</li><li>编辑webstorm 的 Run/Debug配置，新建一个 Node.js 的配置，在 <code>JavaScript file:</code>这一栏里面写上<code>main.js</code>。</li><li>在 main.js 中填入如下代码：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> WebSocketServer = <span class="built_in">require</span>(<span class="string">'ws'</span>).Server;</span><br><span class="line"><span class="keyword">var</span> wss = <span class="keyword">new</span> WebSocketServer(&#123;<span class="attr">port</span>: <span class="number">8280</span>&#125;);</span><br><span class="line"></span><br><span class="line">wss.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> <span class="title">connection</span>(<span class="params">ws</span>) </span>&#123;</span><br><span class="line">   ws.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> <span class="title">incoming</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'received: %s'</span>, message);</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br><span class="line">    ws.send(<span class="string">'something'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>至此，一个服务器就搭建好了。</p><p>注意点：<br>在 webstorm 中，可能会提示<code>Unresolved function or method require()</code>，这是因为没有开启<code>Node.js Core library</code>。在 webstorm 的<code>Preferences-&gt;Languages &amp; Frameworks-&gt;Node.js and NPM</code>下开启就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> webstorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpStorm remote debug with xdebug</title>
      <link href="/2015/09/20/phpstorm-remote-debug-with-xdebug/"/>
      <url>/2015/09/20/phpstorm-remote-debug-with-xdebug/</url>
      
        <content type="html"><![CDATA[<p>因为使用了 docker 进行了环境隔离，所以需要对 phpStorm 进行远程调试的配置。</p><p>网上有一些教程，不是太复杂就是已经过时。经过摸索，一下是完整的配置流程。</p><p>版本： ubuntu 14.04 LTS, phpStorm 9, php5-fpm</p><p>首先是服务器端的设置：</p><ol><li><p>安装xdebug </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install php5-xdebug</span><br></pre></td></tr></table></figure></li><li><p>配置 xdebug </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;php5&#x2F;fpm&#x2F;conf.d&#x2F;20-xdebug.ini</span><br></pre></td></tr></table></figure><p>加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zend_extension&#x3D;xdebug.so</span><br><span class="line">xdebug.remote_mode&#x3D;&quot;req&quot;</span><br><span class="line">xdebug.idekey&#x3D;&quot;PHPSTORM&quot;</span><br><span class="line">xdebug.remote_enable&#x3D;1</span><br><span class="line">xdebug.remote_connect_back&#x3D;1</span><br></pre></td></tr></table></figure><p>上面的设置也可以直接放在 php.ini 中。</p></li></ol><p>接下来进行客户端的设置：</p><ol start="3"><li>点击phpStorm菜单<code>Run -&gt; Start Listening for PHP Debug Connections</code></li><li>设置断点</li><li>安装 xdebug-helper  Chrome 浏览器插件</li><li>打开要调试的网页，激活地址栏的 xdebug-helper</li><li>如果一切都设置正确，在 phpStorm 会弹出对话框进行文件映射等设置。</li></ol><p>这样就可以了。</p><p>PS：<br>如果在 phpStorm 中创建 Remote debug 配置，也是可以收到 debug 断点的。</p><p>如果是apache2，xdebug 的默认配置文件会出现在 <code>/etc/php5modes-available/xdebug.ini</code></p><p><strong>UPDATE</strong><br>如果web 服务器是在<code>Docker for Mac</code>下使用的话，<code>xdebug.remote_connect_back=1</code>会不起作用，因为这里的 docker container 接受到的 ip 都是来自<code>172.17.0.1</code>，所以需要显式的指定 ip 和端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">zend_extension&#x3D;xdebug.so</span><br><span class="line">xdebug.remote_mode&#x3D;&quot;req&quot;</span><br><span class="line">xdebug.idekey&#x3D;&quot;PHPSTORM&quot;</span><br><span class="line">xdebug.remote_enable&#x3D;1</span><br><span class="line">xdebug.remote_host&#x3D;&quot;192.168.1.22&quot;</span><br><span class="line">xdebug.remote_port&#x3D;9000</span><br><span class="line">xdebug.remote_connect_back&#x3D;0</span><br></pre></td></tr></table></figure><p>这里的嗯<code>Docker for Mac</code>的版本是 v1.12，之后是否会修复这个问题，不得而知。<br>————2016.08.21</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> phpStorm </tag>
            
            <tag> xdebug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞定 osx 下 virtualbox 中的 docker container 访问共享文件夹的权限问题</title>
      <link href="/2015/09/13/osx-virtualbox-shared-folder-permission-issue/"/>
      <url>/2015/09/13/osx-virtualbox-shared-folder-permission-issue/</url>
      
        <content type="html"><![CDATA[<p>案例是这样的：</p><ul><li>有一台 osx 系统</li><li>安装了 virtualbox 虚拟机</li><li>在虚拟机里面装 Linux</li><li>在 Linux 里面装了 docker</li><li>用 docker 装了 Ubuntu 的 image</li><li>在 Ubuntu 的 container 中装了 nginx</li></ul><p>现在把OSX 下的一个 web 开发文件夹共享给 virtualbox下的 Linux，然后在通过 docker 映射到 container 下，nginx 的 root 目录指向这个文件夹，提供 web 服务。</p><p>但是问题来了，nginx 会报错说“permission denied”。在 container 下可以很明显的看到，共享文件夹中的内容是存放在了<code>999</code>这个 group 中。</p><p>分析一下原因，根源在于 virtualbox 从某一个版本开始，无法修改 osx 共享目录的权限了。可以看到，在 virtualbox 下的 Linux 中，共享文件夹的权限在一个叫做<code>vboxsf</code>的 group 下面。</p><p>以下是解决方法：</p><ul><li>在 container 下创建一个叫做<code>vboxsf</code>的 group： <code>groupadd vboxsf</code></li><li>修改这个 group 的 id 为999：<code>vim /etc/group</code></li><li>把 www-data 这个用户加入到<code>vboxsf</code>中：<code>usermod -a -G vboxsf www-data</code></li><li>重启 nginx：<code>service nginx restart</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
            <tag> osx </tag>
            
            <tag> virtualbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java压缩，javascript 解压缩总结</title>
      <link href="/2015/06/06/java-compress-javascript-uncompress/"/>
      <url>/2015/06/06/java-compress-javascript-uncompress/</url>
      
        <content type="html"><![CDATA[<p>这里描述如何在 client 端使用 javascript 处理通过 ajax 调用返回的压缩数据。服务器端使用java 的<code>DeflaterOutputStream</code>来进行数据的压缩。</p><p>最早尝试使用<code>jquery</code>的<code>$.ajax</code>方法来做 ajax 调用，但是其返回的数据都是字符串类型的，部分字节被强制转换了，导致这部分数据无法正确的解码。</p><p><em>如果仔细观察，浏览器的开发者模式中<code>Response</code>页面得到的数据格式是正常的，但是在 <code>success: function (data)</code>中数据是不正确的。</em></p><h4 id="接收字节流而不是字符串"><a href="#接收字节流而不是字符串" class="headerlink" title="接收字节流而不是字符串"></a>接收字节流而不是字符串</h4><p>所以，如果需要 ajax 能够接收字节流而仅仅是字符串，需要使用 <code>XMLHttpRequest</code>自己来实现，v1和 v2都可以，下面给出的代码使用 v2的特性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajaxRequest</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> request = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    request.open(data.type, data.url, <span class="literal">true</span>);</span><br><span class="line">    request.responseType = <span class="string">"arraybuffer"</span>;</span><br><span class="line">    request.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded; charset=UTF-8"</span>);</span><br><span class="line">    request.onload = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data.success) &#123;</span><br><span class="line">            data.success(request.response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    request.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data.error) &#123;</span><br><span class="line">            data.error(request.response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    request.send(data.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> szActionUrl = http_host + path;</span><br><span class="line"><span class="keyword">var</span> content = <span class="string">"userName="</span> + userName + <span class="string">"&amp;password="</span> + password;</span><br><span class="line">ajaxRequest(&#123;</span><br><span class="line">    url: szActionUrl,</span><br><span class="line">    type: <span class="string">"POST"</span>,</span><br><span class="line">    data: content,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"success"</span>);</span><br><span class="line">        decodeToJson(data);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h4><p>解压缩使用的是 <a href="https://github.com/imaya/zlib.js" target="_blank" rel="noopener">zlib</a>，在使用前先加入引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"JavaScript"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"zlip/inflate.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>javascript 的代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uintToString</span>(<span class="params">uintArray</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> encodedString = <span class="built_in">String</span>.fromCharCode.apply(<span class="literal">null</span>, uintArray);</span><br><span class="line">    <span class="keyword">var</span> decodedString = <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(encodedString));</span><br><span class="line">    <span class="keyword">return</span> decodedString;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeToJson</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> uintArray = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> inflate = <span class="keyword">new</span> Zlib.Inflate(uintArray);</span><br><span class="line">    <span class="keyword">var</span> plainArray = inflate.decompress();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> s = uintToString(plainArray);</span><br><span class="line">    <span class="built_in">console</span>.log(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result = <span class="built_in">JSON</span>.parse(s);</span><br><span class="line">    <span class="keyword">return</span> result;      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>uintToString</code>是用来把 <code>Uint8Array</code>转换成字符串，<code>decodeURIComponent</code>可以正确的处理 utf-8编码的字符。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sftp用户创建与设置</title>
      <link href="/2015/04/29/sftp-user-creat-and-config/"/>
      <url>/2015/04/29/sftp-user-creat-and-config/</url>
      
        <content type="html"><![CDATA[<p>环境：ubuntu server 14.04<br>目的：用户只能通过 sftp 访问指定目录，并且不能登录 shell</p><p>网上有很多这方面的介绍，最有价值的是<a href="http://solderintheveins.co.uk/2011/03/ubuntu-sftp-only-account-how-to/" target="_blank" rel="noopener">这里</a>。但是按照这篇文档还是遇到了两个坑：</p><ol><li>配置没有加载</li><li>sshd 无法正常启动</li></ol><p>这并不能说是参考文章，只是它没有提到而已。解决方法在下面会以<em>斜体</em>的字体表明。</p><p>下面是需要的步骤；</p><h5 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo addgroup sftponly</span><br></pre></td></tr></table></figure><p>之后将通过用户组来控制权限，所以创建一个新的用户组是有必要的。</p><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -d /home/bob -s /usr/lib/sftp-server -M -N -g sftponly bob</span><br></pre></td></tr></table></figure><p>把新用户 bob 加入到 sftponly 这个用户组。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd bob</span><br></pre></td></tr></table></figure><p>为新用户 bob 设置密码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "/usr/lib/sftp-server" &gt;&gt; /etc/shells</span><br></pre></td></tr></table></figure><p>把 sftp-server 作为一个 shell 加入到 shell 列表。</p><h5 id="创建用户目录"><a href="#创建用户目录" class="headerlink" title="创建用户目录"></a>创建用户目录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/bob/uploads</span><br><span class="line">sudo chown bob:sftponly /home/bob/uploads</span><br></pre></td></tr></table></figure><p>为新用户创建 home 目录和 sftp 目录，并设置所有权。<br><em>需要注意的一点是，/home/bob 目录的 owner 需要是 root，权限最好是755</em></p><h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>打开 sshd_config 配置文件，把 <code>Subsystem sftp /usr/lib/openssh/sftp-server</code> 注释掉，在下面加上 <code>Subsystem sftp internal-sftp</code>。</p><p>在<em>最后一行</em>添加上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Match group sftponly</span><br><span class="line">    ChrootDirectory %h</span><br><span class="line">    X11Forwarding no</span><br><span class="line">    AllowTcpForwarding no</span><br><span class="line">    ForceCommand internal-sftp</span><br></pre></td></tr></table></figure><p><em>注意：上面的代码一定要加在最有一行，否则 sshd 会无法启动</em></p><h5 id="重启-sshd"><a href="#重启-sshd" class="headerlink" title="重启 sshd"></a>重启 sshd</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure><p><em>注意：参考中使用<code>sudo /etc/init.d/ssh restart</code>来重启 sshd，没有任何的效果。</em></p><p>当使用 service 来重新启动的时候，如果正常会显示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh stop/waiting</span><br><span class="line">ssh start/running, process 12760</span><br></pre></td></tr></table></figure><p>如果出错，则只会显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh stop/waiting</span><br><span class="line">ssh start/running</span><br></pre></td></tr></table></figure><p>`</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> sftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker之程序员系列 （一）</title>
      <link href="/2015/04/22/docker-for-programmer/"/>
      <url>/2015/04/22/docker-for-programmer/</url>
      
        <content type="html"><![CDATA[<p><em>因为我主要使用 ubuntu 做服务器，所以以下的操作都是在 ubuntu server 14.04下进行。</em></p><h4 id="OSX-下的选择"><a href="#OSX-下的选择" class="headerlink" title="OSX 下的选择"></a>OSX 下的选择</h4><p>虽然官方提供了一个工具（<a href="https://github.com/boot2docker/boot2docker" target="_blank" rel="noopener">boot2docker</a>），但是说到底，它其实也是在 OSX 下使用 virtualbox 虚拟了一个 linux 出来，然后再在 linux 下进行 docker 操作。那么对于我这样的凡事都希望清晰、简单的人来说，第一选择肯定不会使用这个工具，而是会选择从头开始。如果你和我一样，那么我们需要下面这几样东西：</p><ol><li>virtualbox</li><li>ubuntu server 14.04</li></ol><p>linux 安装完成之后，为了更好的使用，你需要知道几件关于 virtualbox 的事情：</p><ol><li>如何映射端口</li><li>在命令行启动虚拟机</li></ol><p>映射端口在 virtualbox 的gui 界面中就可以简单的完成。下面我贴出命令行启动和保存虚拟机的代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VBoxManage startvm Ubuntu --<span class="built_in">type</span> headless</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VBoxManage controlvm Ubuntu savestate</span><br></pre></td></tr></table></figure><h4 id="Ubuntu-下-docker-安装和配置"><a href="#Ubuntu-下-docker-安装和配置" class="headerlink" title="Ubuntu 下 docker 安装和配置"></a>Ubuntu 下 docker 安装和配置</h4><p>docker 安装和配置和其他程序没有什么两样。使用<em>apt-get</em>进行安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get udpate</span><br><span class="line">sudo apt-get install docker.io</span><br></pre></td></tr></table></figure><p>此时 docker 的每次运行都需要加上前缀<strong>sudo</strong>，比较麻烦。可以进行如下的处理：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><p>其中，<code>${USER}</code>代表 ubuntu 的当前用户。具体可以参考 <a href="http://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo" target="_blank" rel="noopener">askubuntu.com</a>。</p><h4 id="第一个-image"><a href="#第一个-image" class="headerlink" title="第一个 image"></a>第一个 image</h4><p>现在我们需要一个 image。这里也有几种选择：</p><ol><li>从网上下载。如果网络速度比较快的话，可以使用下面的命令从 docker 官方库中搜索并拉一个 image 下来： <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search ubuntu</span><br><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure></li><li>自己做一个</li></ol><p>如果你选择自己做一个，也是有多个选择，但这里我选择简单一点，使用 debootstrap 工具。而使用这个工具，不需要一个参数一个参数自己输入，docker 官方提供了一个脚本<code>mkimage.sh</code>。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/docker/docker.git</span><br><span class="line"><span class="built_in">cd</span> docker</span><br><span class="line">./mkimage.sh</span><br></pre></td></tr></table></figure><p>按照提示进行即可。</p><h4 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h4><p>现在我们有了一个baseimage，在我们启动它之前，我们可以给它打一个 tag。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前用于的 image</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 给 image 打 tag，格式为[repository[:tag]]</span></span><br><span class="line">docker tag &lt;image_id&gt; ubuntu:14.04</span><br></pre></td></tr></table></figure><p>当我们拥有多个 image 之后，可以很容易的通过 tag 来识别各自的用处。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行这个 dock</span></span><br><span class="line">docker run -it --name first ubuntu:14.04</span><br></pre></td></tr></table></figure><p>这样就启动了一个容器，把这个容器命名为 first，并且获得一个控制台。</p><h4 id="保存修改"><a href="#保存修改" class="headerlink" title="保存修改"></a>保存修改</h4><p>容器的一大优势就是很方便的丢弃一些数据和状态。如果你只是临时性的运行一下程序，验证一些想法，容器是非常方便的。当退出并且删除容器之后，所有的数据都会被抛弃。<br>但是当你需要保存数据或是状态，那么需要显示的进行保存。docker 的一些概念和 git 相似，这里也是通过 commit 来保存容器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit first tag</span><br></pre></td></tr></table></figure><p>tag可以是原来的 image 的 tag，也可以是一个新的 tag。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog 从 Dreamhost 搬到了 Linode</title>
      <link href="/2015/04/18/Blog-moved/"/>
      <url>/2015/04/18/Blog-moved/</url>
      
        <content type="html"><![CDATA[<p>Dreamhost 从国内访问越来越差，速度慢不说，有时候还连不上。</p><p>除此之外，每月$8.5的共享服务器在价格方面也完全没有优势，没有 root 权限，很多东西都无法操作。</p><p>而且，虽然他们说硬盘大小是没有限制的，但是上次放了多一点东西就发邮件过来要求删除，说什么不能作为备份用途云云。</p><p>早有打算换一个服务商，只是一直没有找到合适的。这次买了 Linode 的 vps就把 blog 和 web 以及 git 都搬了过来。blog 也从 wordpress 换成了 <a href="http://hexo.io" target="_blank" rel="noopener">hexo</a>。因为 vps 上有足够的权限，分别做了 php 和 nginx 两个 docker 来支持这些服务。</p><p>Dreamhost 上现在只留下了域名服务，以后发现有更优惠的域名服务商之后再迁移出来。</p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Pomelo开发环境搭建之 Docker</title>
      <link href="/2015/02/01/pomelo-dev-env-with-docker/"/>
      <url>/2015/02/01/pomelo-dev-env-with-docker/</url>
      
        <content type="html"><![CDATA[<p>因为不想把当前的 osx 的环境弄得更复杂以及想实战一下docker，所以选择了在docker下搭建pomelo 的开发环境，大致的过程如下：</p><h4 id="一-安装"><a href="#一-安装" class="headerlink" title="一. 安装"></a>一. 安装</h4><ol><li>安装 VirtualBox</li><li>在 VirtualBox 安装 Ubuntu server</li><li>在 Ubuntu 下安装 docker</li><li>在 docker 下下载 Ubuntu image</li><li>运行 Ubuntu image，下载各种工具</li><li>根据文档安装 pomelo</li></ol><h4 id="二-配置"><a href="#二-配置" class="headerlink" title="二. 配置"></a>二. 配置</h4><ol><li>在 VirtualBox 中映射 Ubuntu 到 OSX 的 ssh 端口</li><li>在 VirtualBox 中映射 Ubuntu 到 OSX 的 pomelo 需要的端口</li><li>在 docker 下映射 Ubuntu container 到 Ubuntu host 的 pomelo 需要的端口</li></ol><h4 id="三-文件"><a href="#三-文件" class="headerlink" title="三. 文件"></a>三. 文件</h4><ol><li>在 VirtualBox 中设置 OSX 到 Ubuntu 的共享文件夹</li><li>在 docker 下把 Ubuntu host 中的共享文件夹映射到 Ubuntu container</li></ol><h4 id="四-调试"><a href="#四-调试" class="headerlink" title="四. 调试"></a>四. 调试</h4><ol><li>安装node-inspector，并指定web-port和 debug-port</li><li>编辑 pomelo 的工程中的 servers.json，为需要调试的服务器指定调试端口</li><li>在 Chrome 中按照node-inspector 的提示打开调试的 url</li></ol><h4 id="五-问题"><a href="#五-问题" class="headerlink" title="五. 问题"></a>五. 问题</h4><ol><li>安装 pomelo 的时候花了很多时间，有些包比如 heapdump 总是出错，后来发现是没有安装 make 和 g++等开发工具</li><li>在 container 中用命令创建 pomelo 工程后在 OSX 下无法保存，发现是因为权限的问题。一个方法是在 container 中把目录和文件都改成 other 可写，另一个方法是在 OSX 下把 container 中创建的工程复制一份，把原来的工程目录删除即可</li><li>服务器指定调试端口（3005）后一直没有办法连上，Chrome 中也看不到工程的文件，此时换一个调试端口即可</li><li>在 container 中需要运行 node-inspector、server、client 以及其他的命令，但是只有一个控制台，解决的办法一个是把命令运行到后台，另一个安装 tmux</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> osx </tag>
            
            <tag> pomelo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quick-cocos2d-x 接入 protobuf</title>
      <link href="/2014/12/11/quick-cocos2d-x-with-protobuf/"/>
      <url>/2014/12/11/quick-cocos2d-x-with-protobuf/</url>
      
        <content type="html"><![CDATA[<ol><li>下载云风的 pbc：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:cloudwu&#x2F;pbc.git</span><br></pre></td></tr></table></figure>把 pbc 下 src 目录复制到 quick 的 lua_extensions 目录下，并重命名为 pbc。</li><li>下载 lpeg，并同样复制到 lua_extensions 下</li><li>下载 struct，并同样复制到 lua_extensions 下</li><li>编辑 lua_extensions\lua_extensions[_more].c 文件，添加：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// protobuf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pbc/pbc-lua.h"</span></span></span><br><span class="line"><span class="comment">// lpeg</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"lpeg/lptree.h"</span></span></span><br><span class="line"><span class="comment">// struct</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"struct/struct.h"</span></span></span><br><span class="line">... ...    <span class="keyword">static</span> luaL_Reg luax_exts[] = &#123;</span><br><span class="line">... ...</span><br><span class="line">    &#123;<span class="string">"lpeg"</span>, luaopen_lpeg&#125;,</span><br><span class="line">    &#123;<span class="string">"struct"</span>, luaopen_struct&#125;,</span><br><span class="line">    &#123;<span class="string">"protobuf.c"</span>, luaopen_protobuf_c&#125;,</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure></li><li>把 pbc，lpeg，struct 目录加入到 xcode 的工程中。比如游戏工程或是 quick-player 的工程</li><li>编译项目。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> quick cocos2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Cocostudio 创建 listview item</title>
      <link href="/2014/11/30/cocostudio-create-listview-item/"/>
      <url>/2014/11/30/cocostudio-create-listview-item/</url>
      
        <content type="html"><![CDATA[<p>为了快速开发一个小游戏，使用了 Cocostudio 2.0 作为 UI 编辑器。其实 Cocostudio 的功能比较弱，特别是针对稍微复杂一点的控件（Widget），无法做到所见即所得，不得不写一些代码。</p><p>游戏中用到了一个 listview，但是 Cocostudio2.0中没有 listview，所以只能写代码实现，这个是没有办法的。好在一个 listview 本身还是比较简单的，但是 listview 中的 item 可以很复杂，是否有办法简化呢？</p><p>尝试了很久之后，还真找到了一个迂回的方法，即：</p><ul><li>在 Cocostudio 中创建一个新的 Layer</li><li>在 Layer 上编辑所需要的 item</li></ul><p>这本来是一件比较简单的事情，但是问题在于 listview 的 item 只能是 widget，而 Cocostudio 2.0中 widget 有限，所以，尽量用 button 拼凑吧！</p><p>放出 listview 和 listitem 的 lua 代码：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> LISTVIEW_WIDTH = <span class="number">340</span></span><br><span class="line"><span class="keyword">local</span> LISTVIEW_HEIGHT = <span class="number">405</span></span><br><span class="line"><span class="keyword">local</span> listView = ccui.ListView:<span class="built_in">create</span>()</span><br><span class="line"><span class="comment">-- set list view ex direction</span></span><br><span class="line">listView:setDirection(ccui.ScrollViewDir.vertical)</span><br><span class="line">listView:setBounceEnabled(<span class="literal">true</span>)</span><br><span class="line"><span class="comment">-- listView:setBackGroundImage("hall/di.png")</span></span><br><span class="line"><span class="comment">-- listView:setBackGroundImageScale9Enabled(true)</span></span><br><span class="line">listView:setContentSize(cc.size(LISTVIEW_WIDTH, LISTVIEW_HEIGHT))</span><br><span class="line">listView:setAnchorPoint(cc.p(<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">listView:setPosition(cc.p(<span class="number">10</span>, <span class="number">12</span>))</span><br><span class="line">listView:addEventListener(listViewEvent)</span><br><span class="line"><span class="comment">-- SCISSOR</span></span><br><span class="line">listView:setClippingType(<span class="number">1</span>)</span><br><span class="line">parent:addChild(listView)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">createDefaultListItem</span><span class="params">()</span></span></span><br><span class="line"><span class="keyword">local</span> leaderboardItemLayer =                 cc.CSLoader:createNode(<span class="string">"hall/LeaderboardItem.csb"</span>)</span><br><span class="line"><span class="comment">-- retrieve the widget. MUST be a widget</span></span><br><span class="line"><span class="keyword">local</span> listItemRoot = leaderboardItemLayer:getChildByTag(<span class="number">2001</span>)</span><br><span class="line">listItemRoot:removeFromParent()</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> listItemRootSize = listItemRoot:getContentSize()</span><br><span class="line">listItemRoot:setPosition(cc.p(LISTVIEW_WIDTH / <span class="number">2.0</span>, listItemRootSize.height / <span class="number">2.0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> default_item = ccui.Layout:<span class="built_in">create</span>()</span><br><span class="line">default_item:setTouchEnabled(<span class="literal">true</span>)</span><br><span class="line">default_item:setContentSize(listItemRootSize)</span><br><span class="line">default_item:addChild(listItemRoot)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> default_item</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> default_item = createDefaultListItem()</span><br><span class="line">listView:setItemModel(default_item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>, <span class="number">100</span> <span class="keyword">do</span></span><br><span class="line">listView:pushBackDefaultItem()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- set all items layout gravity</span></span><br><span class="line">listView:setGravity(ccui.ListViewGravity.centerVertical)</span><br><span class="line"></span><br><span class="line"><span class="comment">--set items margin</span></span><br><span class="line">listView:setItemsMargin(<span class="number">2.0</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cocos2d </tag>
            
            <tag> cocostudio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式符号</title>
      <link href="/2014/07/04/common-regular-expression-signs/"/>
      <url>/2014/07/04/common-regular-expression-signs/</url>
      
        <content type="html"><![CDATA[<h4 id="转意符号"><a href="#转意符号" class="headerlink" title="转意符号"></a>转意符号</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>\  %</td><td>改变下一个字符的属性，让普通字符包含特殊含义或者相反</td></tr></tbody></table><h4 id="字符匹配模式"><a href="#字符匹配模式" class="headerlink" title="字符匹配模式"></a>字符匹配模式</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>.</td><td>匹配除「\n」之外的任何单个字符。</td></tr><tr><td>x|y</td><td>匹配x或y</td></tr><tr><td>[xyz]</td><td>匹配所包含的任意一个字符</td></tr><tr><td>[^xyz]</td><td>匹配未列出的任意字符</td></tr><tr><td>[a-z]</td><td>字符范围。匹配指定范围内的任意字符。</td></tr><tr><td>[^a-z]</td><td>匹配任何不在指定范围内的任意字符</td></tr><tr><td>…..</td><td>其他特殊的 patterns</td></tr></tbody></table><h4 id="数量限定"><a href="#数量限定" class="headerlink" title="数量限定"></a>数量限定</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>*</td><td>匹配前面的子表达式零次或多次</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。</td></tr><tr><td>{n}</td><td>匹配确定的n次。</td></tr><tr><td>{n,}</td><td>至少匹配n次</td></tr><tr><td>{n,m}</td><td>最少匹配n次且最多匹配m次</td></tr></tbody></table><h4 id="贪婪模式取消"><a href="#贪婪模式取消" class="headerlink" title="贪婪模式取消"></a>贪婪模式取消</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>?</td><td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的</td></tr></tbody></table><h4 id="控制字符"><a href="#控制字符" class="headerlink" title="控制字符"></a>控制字符</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>^</td><td>匹配输入字符串的开始位置</td></tr><tr><td>$</td><td>匹配输入字符串的结束位置</td></tr></tbody></table><h4 id="分组模式"><a href="#分组模式" class="headerlink" title="分组模式"></a>分组模式</h4><table><thead><tr><th>pattern</th><th>meaning</th></tr></thead><tbody><tr><td>(xyz)</td><td>分组</td></tr><tr><td>\n</td><td>对分组的引用</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> regular expression </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;Keyboard backlight controller&#39; Open Source</title>
      <link href="/2013/09/26/Keyboard-backlight-controller-Open-Source/"/>
      <url>/2013/09/26/Keyboard-backlight-controller-Open-Source/</url>
      
        <content type="html"><![CDATA[<p>All the source code have been put into github:<a href="https://github.com/fantastxmw/kbLight" target="_blank" rel="noopener">https://github.com/fantastxmw/kbLight</a></p><p>Hope you would like it!</p>]]></content>
      
      
      <categories>
          
          <category> Source </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opensource </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tolua++:namespace导致的问题</title>
      <link href="/2013/05/22/tolua++-namespace-issue/"/>
      <url>/2013/05/22/tolua++-namespace-issue/</url>
      
        <content type="html"><![CDATA[<p>在用 <code>cocos2d-x</code> 的时候，可以把自己的类和 <code>cocos2d-x</code> 的类混在一起，即简单的把自己需要导出的类放到 <code>cocos2d</code>的 pkg 文件中。</p><p>网上也有推荐这样的做法，但是这样虽然简单，却让人难以接受。</p><p>我选择了比较麻烦的一种，就是自己重新定义 pkg 文件，并且导出了一个独立的cpp文件。摸过一些简单的坑之后，还算比较顺利，只是在pkg文件中没有注意处理 <code>cocos2d</code> 的 <code>namespace</code>，导致了在lua脚本中，自定义类中获得的比如 <code>CCNode</code> 之类的对象后无法访问其成员函数而已。</p><p>具体的原因，因为在cocos2d-x的pkg中，它是删除了namespace的，所以tolua++生成的代码是这样的：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tolua_usertype(tolua_S,<span class="string">"CCNode"</span>);</span><br></pre></td></tr></table></figure><p>而在我的pkg文件中，由于没有处理namespace，生成的代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tolua_usertype(tolua_S,<span class="string">"cocos::CCNode"</span>);</span><br></pre></td></tr></table></figure><p>这就导致了同一个类在lua脚本中被认为是两个不同的对象。</p><p>解决的方法很简单，去掉namespace即可。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lua </tag>
            
            <tag> tolua++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针vector初始化</title>
      <link href="/2013/04/20/pointer-vector-initialization/"/>
      <url>/2013/04/20/pointer-vector-initialization/</url>
      
        <content type="html"><![CDATA[<p>C++中，在申明的时候初始化一个vector的时候可以指明vector的大小和默认值。但是如果用NULL来初始化指针的时候，会遇到问题。</p><pre class="lang:c++ decode:true ">class A;vector&lt;A *&gt; vtTest&lt;2, NULL&gt;;</pre><p>在XCode中报错：说不能把int型赋值给A*。原因就是NULL本身是不带具体的类型的，默认会被认为是一个int类型。</p><p>所以，解决的方法就是类型强制转换。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下部署Jenkins的一些要点</title>
      <link href="/2013/03/20/ubuntu-jenkins/"/>
      <url>/2013/03/20/ubuntu-jenkins/</url>
      
        <content type="html"><![CDATA[<p>Jenkins是一个开源的持续集成的工具，安装什么的都没有问题，非常简单。但是在配置的时候还是遇到了几个问题：</p><ol><li><p>配置权限管理的时候，一定要先创建一个用户之后再进行。如果没有创建用户，又去掉了”Allow users to sign up”的勾，那么只能去编辑config.xml了。</p></li><li><p>jenkins用户需要提升到root权限来进行一些操作。先把他加入到root group，再编辑/etc/sudoers设在sudo的时候不需要密码。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gpasswd -a jenkins root</span><br><span class="line">sudo vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>在sudoers中加入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jenkins ALL=NOPASSWD:ALL</span><br></pre></td></tr></table></figure><p>当然，也可以使用expect工具来提升脚本执行时的权限</p></li><li><p>多个命令执行的时候，无法正确的反映执行的状态，往往其中已经出现错误了，jenkins还是返回成功。这个问题可以通过检查每个命令的返回值来处理，比如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">sudo make clean</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sudo make</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sudo make install</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntun下GIT服务器的建立</title>
      <link href="/2013/03/18/ubuntun-install-git/"/>
      <url>/2013/03/18/ubuntun-install-git/</url>
      
        <content type="html"><![CDATA[<p>使用环境：小团队</p><h2 id="安装openssh-server-git"><a href="#安装openssh-server-git" class="headerlink" title="安装openssh-server, git"></a>安装openssh-server, git</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><h2 id="添加git账号"><a href="#添加git账号" class="headerlink" title="添加git账号"></a>添加git账号</h2><p>这儿方案中，所有的人共享一个账号，即git账号：<br><code>sudo adduser git</code><br>按照提示设置账号内容，密码等。</p><h2 id="配置登陆认证"><a href="#配置登陆认证" class="headerlink" title="配置登陆认证"></a>配置登陆认证</h2><p>使用公钥来避免每次都需要输入密码的麻烦。可以给每个用户配置一个不同的公钥。</p><p>这里直接在Ubuntu上为用户生成公钥-密钥对，把公钥加入认证文件，密钥发给用户。<br><code>ssh-keygen</code><br>为不同的用户指定不同的文件名，比如：id_rsa.wxue，将生成id_rsa.wxue和id_rsa.wxue.pub。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat .ssh&#x2F;id_rsa.wxue.pub</span><br><span class="line">&#x2F;home&#x2F;git&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p>这些密钥可以用来登陆git账号了。</p><h2 id="创建GIT仓库"><a href="#创建GIT仓库" class="headerlink" title="创建GIT仓库"></a>创建GIT仓库</h2><p>把git的仓库放在/opt/gitrepo下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">mkdri gitrepo</span><br><span class="line">cd gitrepo</span><br><span class="line">mkdir project.git</span><br><span class="line">cd project.git</span><br><span class="line">git --bare init</span><br></pre></td></tr></table></figure><h2 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h2><p>现在git账号的权限，只能做git相关的操作<br><code>sudo vim /etc/passwd</code><br>把git的shell从<code>/bin/bash</code>改为<code>/usr/bin/git-shell</code></p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><ol><li>说说在osx下的配置，其他linux系统也是一样。<br>把相关用户的密钥放在它电脑的.ssh目录下，然后编辑或是创建config文件<br><code>$ vim ~/.ssh/config</code><br>在config文件中加入如下内容：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host 192.168.1.222 192.168.1.222</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa.wxue</span><br></pre></td></tr></table></figure>如果只有一个id_rsa密钥文件，也可以不创建config文件。</li></ol><p>修改config文件的属性<br><code>$ chmod 644 ~/.ssh/config</code><br>文件的目录也可以做一下限制，只有git帐号才可以打开：<br><code>$ sudo chown git:git gitrepo</code></p><ol start="2"><li>windows下的配置<br>Windows下一般使用图形化工具<a href="https://code.google.com/p/tortoisegit/" target="_blank" rel="noopener">TortoiseGit</a>。TortoiseGit如果使用plink则无法使用id_rsa，需要转换从PuTTY Key Generator格式的ppk密钥。在TortoiseGit目录下可以找到PuTTY Key Generator工具，把id_rsa导入进去，并保存成ppk文件，放在用户目录的.ssh目录下。</li></ol><p>还没完，还需要在TortoiseGit目录中找到Pageant程序，把ppk文件加入到里面。或者，在添加remote的时候，把ppk绑定进来。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua与C/C++的一些简单交互</title>
      <link href="/2013/03/13/lua-with-c-cpp/"/>
      <url>/2013/03/13/lua-with-c-cpp/</url>
      
        <content type="html"><![CDATA[<h2 id="我只写简单的！"><a href="#我只写简单的！" class="headerlink" title="我只写简单的！"></a>我只写简单的！</h2><ul><li>lua版本 5.1.4</li><li>环境 ubuntu 12.04</li></ul><h3 id="从C-C-调用lua中自定义的函数"><a href="#从C-C-调用lua中自定义的函数" class="headerlink" title="从C/C++调用lua中自定义的函数"></a>从C/C++调用lua中自定义的函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;lua.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  lua_State *L = luaL_newstate();</span><br><span class="line">  luaopen_base(L);</span><br><span class="line">  luaL_openlibs(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> ret = luaL_dofile(L, <span class="string">"test.lua"</span>);</span><br><span class="line">  <span class="keyword">if</span> (ret != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"load test.lua failed"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  lua_getglobal(L, <span class="string">"showValue"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"William"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"Hsueh"</span>);</span><br><span class="line"></span><br><span class="line">  lua_pcall(L, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  lua_close(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;c++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>test.lua文件：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showValue</span><span class="params">(strFirstName, strLastName)</span></span></span><br><span class="line"> <span class="built_in">print</span>(strFirstName .. <span class="string">"."</span> .. strLastName)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="从lua中返回一个值给C-C"><a href="#从lua中返回一个值给C-C" class="headerlink" title="从lua中返回一个值给C/C++"></a>从lua中返回一个值给C/C++</h3><p>main.cpp，注意lua_pcall中设置了返回3个值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;lua.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  lua_State *L = luaL_newstate();</span><br><span class="line">  luaopen_base(L);</span><br><span class="line">  luaL_openlibs(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> ret = luaL_dofile(L, <span class="string">"test.lua"</span>);</span><br><span class="line">  <span class="keyword">if</span> (ret != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"load test.lua failed"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  lua_getglobal(L, <span class="string">"showValue"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"William"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"Hsueh"</span>);</span><br><span class="line"></span><br><span class="line">  lua_pcall(L, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> nOld = lua_tonumber(L, <span class="number">-1</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pIs = lua_tostring(L, <span class="number">-2</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pName = lua_tostring(L, <span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; pName &lt;&lt; <span class="string">" "</span> &lt;&lt; pIs &lt;&lt; <span class="string">" "</span> &lt;&lt; nOld &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  lua_pop(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  lua_close(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>test.lua文件返回了3个值</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showValue</span><span class="params">(strFirstName, strLastName)</span></span></span><br><span class="line"> strName = strFirstName .. <span class="string">"."</span> .. strLastName</span><br><span class="line"> <span class="built_in">print</span>(strName)</span><br><span class="line"> <span class="keyword">return</span> strName, <span class="string">"is"</span>, <span class="number">18</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Lua调用C-C-中自定义的函数"><a href="#Lua调用C-C-中自定义的函数" class="headerlink" title="Lua调用C/C++中自定义的函数"></a>Lua调用C/C++中自定义的函数</h3><p>Lua不能调用任意的C/C++函数。可以向Lua中注册的函数，需要符合以下的规范：<br><code>typedef int (*lua_CFunction) (lua_State *L);</code><br>main.cpp，定义了一个名为lua_printValue的函数，并且注册为PrintValue的lua函数，以便于在Lua中使用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;lua.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lua_printValue</span><span class="params">(lua_State *L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// get the parameter</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pValue = lua_tostring(L, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// do something here...</span></span><br><span class="line"></span><br><span class="line">  lua_pushstring(L, pValue);</span><br><span class="line">  lua_pushstring(L, <span class="string">"Year"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// return 2 value</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  lua_State *L = luaL_newstate();</span><br><span class="line">  luaopen_base(L);</span><br><span class="line">  luaL_openlibs(L);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// register the lua_printValue function </span></span><br><span class="line">  <span class="comment">// as PrintValue which can be used in lua</span></span><br><span class="line">  lua_pushcfunction(L, lua_printValue);</span><br><span class="line">  lua_setglobal(L, <span class="string">"PrintValue"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> ret = luaL_dofile(L, <span class="string">"test.lua"</span>);</span><br><span class="line">  <span class="keyword">if</span> (ret != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"load test.lua failed"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  lua_getglobal(L, <span class="string">"showValue"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"William"</span>);</span><br><span class="line">  lua_pushstring(L, <span class="string">"Hsueh"</span>);</span><br><span class="line"></span><br><span class="line">  lua_pcall(L, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> nOld = lua_tonumber(L, <span class="number">-1</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pIs = lua_tostring(L, <span class="number">-2</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *pName = lua_tostring(L, <span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; pName &lt;&lt; <span class="string">" "</span> &lt;&lt; pIs &lt;&lt; <span class="string">" "</span> &lt;&lt; nOld &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  lua_pop(L, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  lua_close(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>test.lua文件：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showValue</span><span class="params">(strFirstName, strLastName)</span></span></span><br><span class="line"> strName = strFirstName .. <span class="string">"."</span> .. strLastName</span><br><span class="line"> strThis, strYear = PrintValue(<span class="string">"this"</span>)</span><br><span class="line"> strAge = strThis .. <span class="string">" "</span> .. strYear .. <span class="string">" is"</span></span><br><span class="line"> <span class="keyword">return</span> strName, strAge, <span class="number">18</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>PrintValue从Lua中接受一个参数，在C/C++中处理了一下，返回两个参数给Lua。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua与C++的集成</title>
      <link href="/2013/03/12/lua-and-c++/"/>
      <url>/2013/03/12/lua-and-c++/</url>
      
        <content type="html"><![CDATA[<h4 id="——一个最简单的Lua与C-的例子"><a href="#——一个最简单的Lua与C-的例子" class="headerlink" title="——一个最简单的Lua与C++的例子"></a>——一个最简单的Lua与C++的例子</h4><p>很多人推荐脚本和引擎相结合，灵活又方便，但是以前没有这方面的经验，所以从头开始学习。</p><p>脚本方面选择了Lua，因为用得比较广，而且据说很简单！</p><p>开始之前要有心理准备，这东西，其实不简单！</p><p>或许Lua本身是简单的，或许Lua与C的集成也不难，但是如何在Lua中使用C++的类、对象和函数？特别是对以前没有使用过Lua的人来说，连语法和API都磕磕绊绊，要把Lua和C++集成在一起互相访问，其中需要打通的关节，很多……</p><h2 id="第一个难点是：版本！"><a href="#第一个难点是：版本！" class="headerlink" title="第一个难点是：版本！"></a>第一个难点是：版本！</h2><p>因为某些原因，我选择tolua++来生成Lua和C++之间的胶水文件。 Lua现在最新的版本是5.2.1，tolua++最新的版本是1.0.93，但是遗憾的是，这两个版本对不起来。1.0.93版的tolua++对应的是lua 5.1.4。我意识到这个问题，并就此请教google大神之前，已经在osx下奋战近2个小时了。</p><h2 id="第二个难点是：编译！"><a href="#第二个难点是：编译！" class="headerlink" title="第二个难点是：编译！"></a>第二个难点是：编译！</h2><p>理顺了版本只是第一步，接下来要把源代码编译成库文件。</p><p>一开始我是在osx下面，编译lua没有问题，但是tolua++失败了。tolua++需要使用scons来编译，scons需要python环境，这些都满足了之后，编译的时候还是提示很多错误，我没有细究，直接放弃了。</p><p>我也尝试像cocos2d-x那样把lua和tolua++放到工程中直接用xcode编译，但是也没有成功。于是不得不转战到Linux下面。</p><p>在Ubuntu下，用apt直接可以安装lua和tolua++。</p><p>tolua++安装好之后，你如果直接在shell里输入tolua++是找不到程序的。是用whereis tolua++命令可以发现，可执行文件的名字是：<span style="color: #ff0000;">/usr/bin/tolua++5.1</span>，为了方便，我建立了一个<span style="color: #ff0000;">tolua++</span>的链接。</p><h2 id="第三个难点是：工具使用！"><a href="#第三个难点是：工具使用！" class="headerlink" title="第三个难点是：工具使用！"></a>第三个难点是：工具使用！</h2><p>到这一步，已经不算难点了。在Linux下面，难度本身就减少了不少，但我还是遇到了一点点小问题。一开始，我只下载了tolua++，然后写了一个简单的头文件：</p><p>HelloWorld.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">  HelloWorld();</span><br><span class="line"></span><br><span class="line">  <span class="function">HelloWorld *<span class="title">GetInstance</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">PrintHello</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>HelloWorld.cpp中是实现，随便写就可以了。</p><p>然后使用下面的命令，希望生成对应的cpp：<br><code>tolua++ -o hellulua.cpp HelloWorld.h</code><br>但是，貌似正确的结果中，却没有函数的内容。再在网上查了一些资料之后，我开始怀疑后缀名必须是<span style="color: #ff0000;">.pkg</span>才可以。测试了一下，结果正确了！</p><p>正确的pkg文件应该写成：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"HelloWorld.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">HelloWorld();</span><br><span class="line"><span class="function">HelloWorld *<span class="title">GetInstance</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintHello</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>正确的命令，也不是使用.h文件，而是如下：<br><code>tolua++ -o hellulua.cpp HelloWorld.pkg</code></p><h2 id="第四个难点是：集成！"><a href="#第四个难点是：集成！" class="headerlink" title="第四个难点是：集成！"></a>第四个难点是：集成！</h2><p>或许是版本众多的原因，网上有很多相关的例子，但是都无法正确的运行。tolua++本身也带了一些测试，但是如果没有一定的基础，看起来也是非常困难的。总的来说，就是“不够简单”。经过多次失败，以及对lua文档的研习，再参考网上的例子，终于有了一个最简单的测试了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> &amp;lt;lua.hpp&amp;gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"HelloWorld.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tolua_HelloWorld_open</span><span class="params">(lua_State* tolua_S)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  lua_State *L = luaL_newstate();<span class="comment">//tolua_open()</span></span><br><span class="line">  luaopen_base(L);</span><br><span class="line"></span><br><span class="line">  tolua_HelloWorld_open(L);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> ret = luaL_dofile(L, <span class="string">"test.lua"</span>);</span><br><span class="line"></span><br><span class="line">  lua_close(L);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候再回过去看tolua++的<a href="http://www.codenix.com/~tolua/tolua++.html#using" target="_blank" rel="noopener">How to use toLua</a>， 就可以很好的理解了。</p><p>用g++来编译：<br><code>g++ main.cpp HelloWorld.cpp hellolua.cpp -ltolua++5.1 -llua5.1 -I /usr/include/lua5.1</code><br>一开始我只下载了tolua++，所以编译的时候出现了一些reference没有找到的问题。再下载lua的开发库就OK了。</p><p>再写个test.lua文件：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello = HelloWorld:new()</span><br><span class="line">hello.PrintHello()</span><br></pre></td></tr></table></figure><p>我在如何在Lua中使用C++类的构造函数上也花了很多时间。因为整个程序没有跑通，所以失败的时候，也不知道是语法不对，还是其他的问题。</p><p>然后运行编译出来的HelloWorld:<br><code>./a.out</code><br>就可以得到显示：<br><code>hello</code></p><p>至此，一个最简单的，在Lua脚本中使用C++对象的项目成功完成了。再回过来去看tolua++的文档，很多之前难懂的地方都清晰了。而且，有了这样一个最简单的项目，可以慢慢向里面添加更多Lua相关的东西，是深入学习Lua的一个好的起点。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lua </tag>
            
            <tag> tolua++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cocos2d-x的几个注意点</title>
      <link href="/2013/03/08/some-points-in-cocos2d-x/"/>
      <url>/2013/03/08/some-points-in-cocos2d-x/</url>
      
        <content type="html"><![CDATA[<p>这段时间渐渐地从剑II的项目中退出来，来说研究一些cocos2d-x相关的内容。</p><p>Cocos2d-x虽然是使用C++来实现的，但是代码显得很怪异。比如下面的代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    CC_BREAK_IF(! CCLayer::init());</span><br><span class="line">    CCSprite* bomb1 = CCSprite::create(<span class="string">"CloseNormal.png"</span>);</span><br><span class="line">    addChild(bomb1,<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这里之所以要用<code>do...while</code>，仅仅只是为了使用CC_BREAK_IF这个宏。非但打乱了C++的语法，而且也是代码复杂化了。</p><p>另外一个需要注意的地方是它的对象的生命周期管理，和C++通行的逻辑不同。看下面的代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSpriteSheetMgr</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CSpriteSheetMgr();</span><br><span class="line">    ~CSpriteSheetMgr();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    cocos2d::CCDictionary *m_pBatchNodeDic;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">CSpriteSheetMgr::CSpriteSheetMgr()</span><br><span class="line">&#123;</span><br><span class="line">    m_pBatchNodeDic = CCDictionary::create();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你以为m_pBatchNodeDic的生命周期是跟随类的实例的话，那么就错了。在 <em>每一个Message Loop之后，cocos2d-x引擎都会尝试去释放这类对象</em> ，可能你还没有用到，他就已经无效了。这个就是cocos2d-x的内存管理模型<strong>Reference Count and AutoReleasePool</strong></p><p>正确的，需要写成：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CSpriteSheetMgr::CSpriteSheetMgr()</span><br><span class="line">&#123;</span><br><span class="line">    m_pBatchNodeDic = CCDictionary::create();</span><br><span class="line">    m_pBatchNodeDic-&amp;gt;retain();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cocos2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dictionary Assignment Breaks the Iteration!</title>
      <link href="/2012/12/22/dictionary-assignment-issue/"/>
      <url>/2012/12/22/dictionary-assignment-issue/</url>
      
        <content type="html"><![CDATA[<p>Let’s check the following code first:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dict[btn1] &#x3D; false;</span><br><span class="line">dict[btn2] &#x3D; false;</span><br><span class="line">dict[btn3] &#x3D; false;</span><br><span class="line"></span><br><span class="line">for (var key:Object in dict)</span><br><span class="line">&#123;</span><br><span class="line">       dict[key] &#x3D; true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>How many times do you think the loop would be entered in this case?</p><p>NOT only 3!</p><p>I run the codes in flash player 11.1, it sometimes was 4! Under flash player 11.5, I haven’t encountered any issue.</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> as3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在flash builder中显示workspace路径</title>
      <link href="/2012/10/10/show-workspace-path-in-flashbuilder/"/>
      <url>/2012/10/10/show-workspace-path-in-flashbuilder/</url>
      
        <content type="html"><![CDATA[<p>默认的flash builder启动后没有显示workspace的信息，对于在多个workspace中切换的开发人员来说，非常不方便。</p><p>flash builder是基于eclipse的，而在eclipse中有一个启动参数 <span style="color: #ff0000;">-showLocation</span> ，可以用来在标题栏中显示workspace的路径。</p><p>对于windows，有几种在启动时候添加参数的方法，但是对windows 7来说，如果你使用pin功能把flash builder固定在任务栏上，那么最好使用在配置文件中增加启动参数的方法：</p><p>打开<span style="color: #ff0000;">FlashBuilder.ini</span>，在第一行加入<span style="color: #ff0000;">-showLocation</span>。也可以同时在eclipse目录下的<span style="color: #ff0000;">eclipse.ini</span>文件中加入该参数。这样，但你启动flash builder的时候，不会在任务栏出现两个图标。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSX 下提取pkg包中的文件</title>
      <link href="/2012/09/23/extract-file-from-pkg-in-osx/"/>
      <url>/2012/09/23/extract-file-from-pkg-in-osx/</url>
      
        <content type="html"><![CDATA[<p>今天犯了个错误，本来想把几个文件夹复制到/usr/share/vim/vim73/目录下合并的，谁知osx下却是替换的操作（系统确实有替换的提示，但是windows下的目录，都是合并的操作:-(）——它真的替换了，结果原来的文件丢失了。</p><p>系统是OSX 10.8，没有从安装盘装回软件的选项，只有自己动手。</p><ol><li><p>翻出安装盘挂载，很明显应该是在Packages目录下的文件；</p></li><li><p>逐个启动里面的pkg文件，但是并不进行下一步，而是选择 <code>File-&gt;Show Files</code> 查看是否所需的包。最后发现是在<code>BSD.pkg</code>里面；</p></li><li><p>启动Terminal，运行命令 <code>pkgutil --expand BSD.pkg ~/wxue/bsd</code>，把文件都提取到bsd目录下；</p></li><li><p>进入<code>~/wxue/bsd</code> 目录，把最大的那个文件（Payload）增加后缀<code>.pax.gz</code>；</p></li><li><p>接下去就简单了，解压即可。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pkg </tag>
            
            <tag> osx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python处理多个不同编码的文件</title>
      <link href="/2012/09/09/different-encoding-files-with-python/"/>
      <url>/2012/09/09/different-encoding-files-with-python/</url>
      
        <content type="html"><![CDATA[<p>当需要把多个不同编码的文件合并成一个的时候，unicode是一个很好的选择。但是如果把不同的编码转换成unicode，python并没有提供一个很好的方法。</p><p>Python内部是使用unicode来编码，但要把不同的编码转换成unicode，首先需要知道需要转换的内容是什么编码的。这种设计用来处理转码特定的编码文件没有问题，但是要写一个通用的工具，将是不可能的任务。</p><p>但是对于一些特殊的项目，还是可以做一些事情的。有一个检测文本编码类型的库可以借用：<a href="http://pypi.python.org/pypi/chardet" target="_blank" rel="noopener">chardet</a> 。</p><p>chardet的使用很简单。它的输入如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;'confidence': 0.62467997951868914, 'encoding': 'GB2312'&#125;</span><br></pre></td></tr></table></figure><p>从它的输出可以看到，这并不是一个非常有效的方法，但是聊胜于无。</p><p>在我的案例里面，是这样使用的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sf = codecs.open(<span class="string">"xxx.txt"</span>, <span class="string">"w"</span>, <span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line">of1 = codecs.open(f1, <span class="string">"r"</span>)</span><br><span class="line"></span><br><span class="line">line1 = of1.read()</span><br><span class="line">enc = chardet.detect(line1)</span><br><span class="line"><span class="keyword">print</span> enc</span><br><span class="line"><span class="keyword">if</span> enc[<span class="string">'encoding'</span>] == <span class="string">'utf-8'</span>:</span><br><span class="line"> line1 = unicode(line1, <span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"> line1 = line1.decode(<span class="string">'gb18030'</span>)</span><br><span class="line"></span><br><span class="line">sf.write(line1)</span><br></pre></td></tr></table></figure><p>对中文需要注意的是， 虽然chardet 能检测出的中文编码是gb2312，但是最好用<span style="color: #ff0000;">gb18030<span style="color: #000000;">来处理它，后者的覆盖会更全一点。</span></span></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pureMVC对项目并无益处</title>
      <link href="/2012/08/18/purmvc-useless/"/>
      <url>/2012/08/18/purmvc-useless/</url>
      
        <content type="html"><![CDATA[<ol><li><p>首先，在稍大一点的项目中，pureMVC的消息传递会成为一个比较严重的瓶颈。</p></li><li><p>其次， 使用麻烦。先要定义消息，注册消息，创建command，注册command，分发command，处理command等等。绝大多数情况下，程序需要处理的只是command中携带的数据，而非command本身，以上步骤完全是不必要的。</p></li><li><p>太过于灵活。一个框架，如果既可以这样使用，也可以那样使用，那么用户基本上不知道该怎么使用。pureMVC的消息传递并非只有一条路径。Message和Notification可以在很多地方发起。当一个框架的使用需要用文档而不是代码本身来规范，这个框架的设计通常都是不知所谓的。</p></li></ol><p>这三点是互相影响的。比如，考虑到灵活、强大，必然会导致性能问题，以及使用上的复杂化。 对于框架上的选择，并不推荐使用类似的设计。这种设计模式的框架，和通常的库框架——比如MFC——不同，并不能提供任何功能上的好处，实在是没引入的必要，特别是对那些规模较大的项目。</p>]]></content>
      
      
      <categories>
          
          <category> Critique </category>
          
      </categories>
      
      
        <tags>
            
            <tag> puremvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flash builder项目多国化设置问题</title>
      <link href="/2012/05/30/international-language-setting-of-flashbuilder/"/>
      <url>/2012/05/30/international-language-setting-of-flashbuilder/</url>
      
        <content type="html"><![CDATA[<p>在配置多国化的时候，在ActionScript Compiler的Additional Compiler argument中是这样设置的：</p><pre escaped="true" lang="php" line="1">-locale zh_CN</pre><p>其他都没有问题，但是ActionScript Build Path中的Output folder怎么都无法设置。</p><p>最后查到的问题是，Additional Compiler argument应该是如下设置的：</p><pre escaped="true" lang="php" line="1">-locale=zh_CN</pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flash builder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADDED_TO_STAGE的触发时机</title>
      <link href="/2012/04/06/when-to-trigger-added-to-stage/"/>
      <url>/2012/04/06/when-to-trigger-added-to-stage/</url>
      
        <content type="html"><![CDATA[<p>Adobe的help文件说，这个event的触发时机是：</p><blockquote><p>The following methods trigger this event: DisplayObjectContainer.addChild(), DisplayObjectContainer.addChildAt().</p></blockquote><p>这个很容易给人误导。设想一下有显示对象A、B、C，他们的关系如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B.addChild(C);</span><br><span class="line">A.addChild(B);</span><br><span class="line">stage.addChild(A);</span><br></pre></td></tr></table></figure><p>当我们在ADDED_TO_STAGE事件，什么时候会触发呢？是在</p><p><code>B.addChild(C);</code>的时候？还是在<br><code>A.addChild(B);</code>的时候？还是在<br><code>stage.addChild(A);</code>的时候？</p><p>答案是在<code>stage.addChild(A);</code>的时候，<code>ADDED_TO_STAGE</code>事件才会逐个触发，这一点从名字上也比较好理解。</p><p>所以，在程序里，一定要<code>Event.ADDED_TO_STAGE</code>和<code>Event.REMOVED_FROM_STAGE</code>同时出现，这样会减少很多Bug。因为如果<code>Event.ADDED_TO_STAGE</code>没有触发，<code>Event.REMOVED_FROM_STAGE</code>也是铁定不会触发的。</p><p><em>有一种错误的使用方法是，把事件注册写在构造函数里面，然后在<code>Event.REMOVED_FROM_STAGE</code>事件中移除注册的事件，其实很可能事件移除是不会被调用的。切记！</em></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> as3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Breakpoint acts weirdly</title>
      <link href="/2012/02/25/breakpoint-acts-weirdly/"/>
      <url>/2012/02/25/breakpoint-acts-weirdly/</url>
      
        <content type="html"><![CDATA[<p>Encountered the break point issue in visual studio 2008, which says</p><blockquote><p>The breakpoint will not currently be hit. The source code is different from the original version<br>Or, the IDE complains nothing, but the step command jumping between lines.</p></blockquote><p>In my project, I encountered this issue in only a few files .</p><p>Well, the root cause is,** <span style="color: #ff6600;">those files were mixed different line endings!</span>**</p><p>So, the solution is very easy, save the files in a uniform line ending format, like windows (CR LF).</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BitmapData内存测试</title>
      <link href="/2011/06/21/memory-test-of-bitmapdata/"/>
      <url>/2011/06/21/memory-test-of-bitmapdata/</url>
      
        <content type="html"><![CDATA[<p>测试平台<br>Windows 7 sp1 x64<br>Flash builder 4.5.1<br>IE 9.0 with flash player plug-in 10.3.181.26</p><p>测试工具<br>Profiler</p><p>测试内容</p><ol><li>removeChild调用是否必要</li><li>BitmapData的dispose调用是否必要</li><li>Bitmap和BitmapData的对象是否需要设置为null</li><li>BitmapData对象赋值语句的影响</li></ol><p>测试结果</p><ol><li><p>removeChild必须调用</p></li><li><p>dispose并非必要，只需要把其对象设置为null</p></li><li><p>需要释放任然在作用域中的对象，需要设置其为null</p></li><li><p>只是增加了引用，所以两个对象的数据是一样的。<br>结论</p></li><li><p>不需要的显示对象需要及时调用removeChild删除</p></li><li><p>不再需要的对象应该手动设为null</p></li><li><p>如果容器对象没有设置为null，即使调用了removeChild，其元素也不会被释放<br>测试代码</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">package</span><br><span class="line">&#123;</span><br><span class="line">import flash.display.Bitmap;</span><br><span class="line">import flash.display.BitmapData;</span><br><span class="line">import flash.display.BitmapDataChannel;</span><br><span class="line">import flash.display.Sprite;</span><br><span class="line">import flash.events.Event;</span><br><span class="line">import flash.events.MouseEvent;</span><br><span class="line">import flash.system.System;</span><br><span class="line"></span><br><span class="line">public class memtest extends Sprite</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">private var bmp:Bitmap;</span><br><span class="line">private var mouseDown:Boolean;</span><br><span class="line">private var bmpData:BitmapData;</span><br><span class="line">private var bitmap:Bitmap;</span><br><span class="line">private var memory:uint;</span><br><span class="line"></span><br><span class="line">public function memtest()</span><br><span class="line">&#123;</span><br><span class="line">stage.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);</span><br><span class="line">stage.addEventListener(Event.ENTER_FRAME, onFrame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private function onFrame(event:Event):void</span><br><span class="line">&#123;</span><br><span class="line">if (bmpData !&#x3D; null &amp;&amp; bmp !&#x3D; null)</span><br><span class="line">&#123;</span><br><span class="line">var seed:Number &#x3D; Math.floor(Math.random() * 10);</span><br><span class="line">var channels:uint &#x3D; BitmapDataChannel.GREEN | BitmapDataChannel.BLUE;</span><br><span class="line">bmpData.perlinNoise(100, 100, 6, seed, false, true, channels, false, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private function onMouseDown(event:MouseEvent):void</span><br><span class="line">&#123;</span><br><span class="line">memory &#x3D; System.totalMemory;</span><br><span class="line"></span><br><span class="line">if (!mouseDown)</span><br><span class="line">&#123;</span><br><span class="line">bmpData &#x3D; new BitmapData(200, 200, false, 0x00CCCCCC);</span><br><span class="line">bmp &#x3D; new Bitmap(bmpData);</span><br><span class="line">addChild(bmp);</span><br><span class="line"></span><br><span class="line">var bmpDataCloned:BitmapData &#x3D; bmpData;</span><br><span class="line">bitmap &#x3D; new Bitmap(bmpDataCloned);</span><br><span class="line">bitmap.x &#x3D; 300;</span><br><span class="line">addChild(bitmap);</span><br><span class="line"></span><br><span class="line">mouseDown &#x3D; true;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">removeChild(bmp);</span><br><span class="line">bmp.bitmapData.dispose();</span><br><span class="line">&#x2F;&#x2F;bmpData.dispose();</span><br><span class="line">&#x2F;&#x2F;bmpData &#x3D; null;</span><br><span class="line">bmp &#x3D; null;</span><br><span class="line"></span><br><span class="line">removeChild(bitmap);</span><br><span class="line">&#x2F;&#x2F;bitmap.bitmapData.dispose();</span><br><span class="line">bitmap &#x3D; null;</span><br><span class="line"></span><br><span class="line">mouseDown &#x3D; false; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> as3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AS3中置换滤镜的理解</title>
      <link href="/2011/06/17/understand-of-transform-filter-in-as3/"/>
      <url>/2011/06/17/understand-of-transform-filter-in-as3/</url>
      
        <content type="html"><![CDATA[<p><span style="font-size: small;"><span style="line-height: normal;">在ActionScription中，DisplacementMapFilter是一个非常强大的滤镜，很多的特效，比如火焰，波纹等都会使用到它。另一方面，它也比较多变，让初学者难以掌握它的功能。下面的分析从AS3中使用的公式开始。</span></span></p><p><span style="font-size: small;"><span style="line-height: normal;">在<a href="http://help.adobe.com/zh_CN/FlashPlatform/reference/actionscript/3/flash/filters/DisplacementMapFilter.html?filter_flash=cs5&amp;filter_flashplayer=10.2&amp;filter_air=2.6#DisplacementMapFilter()" target="_blank" rel="noopener">Adobe的官方文档</a>中，提到DisplacementMapFilter使用如下的公式：</span></span></p><pre escaped="true">dstPixel[x, y] = srcPixel[x + ((componentX(x, y) - 128) * scaleX) / 256, y + ((componentY(x, y) - 128) * scaleY) / 256)]</pre><p>我们先来理解该公式。</p><p>这里面涉及到三个像素，源图上的srcPixel，置换图上的componentX和componentY以及最后生成的目标图上的dstPixel。为了便于理解，我们把上面的公式变化一下：</p><pre escaped="true">dstPixel[x, y] = srcPixel[(x + X), (y + Y)]X = (componentX(x, y) - 128) * scaleX) / 256Y = (componentY(x, y) - 128) * scaleY) / 256</pre><p>有上面的公式就可能很容易的看出来，，目标像素dstPixel [x, y] 就是源像素srcPixel [x, y]分别在x方向上偏移X距离，y方向上偏移Y距离后的一个结果。</p><p><strong><span style="color: #ff0000;">所以DisplacementMapFilter的根本效果就是像素的偏移！</span></strong></p><p>&nbsp;</p><p><span style="color: #000000;">那么像素的偏移如何可以创造出那么绚烂的效果呢？很简单，就是对偏移量的控制。很容易想象一张正常的图片，上面的每个像素经过不同距离的偏移之后，它会产生的扭曲、挤压的效果。结合其他的滤镜，就可以创建很酷的效果。</span></p><p>&nbsp;</p><p><span style="color: #000000;">我们回到偏移量的公式：</span></p><pre escaped="true">X = (componentX(x, y) - 128) * scaleX) / 256Y = (componentY(x, y) - 128) * scaleY) / 256</pre><p>里面有四个变数：置换图的像素componentX，componentY以及scaleX和scaleY。变数越多，结果就越难以琢磨。这也是置换滤镜的困难所在。</p><p>我们来深入看一下这个公式每一个量（变量和常量）的含义。</p><p>&nbsp;</p><p>先看componentX和componentY的含义。</p><p>我们知道一个像素有四个通道：3个颜色通道RGB和1个Alpha通道。componentX和componentY在这里表示一个像素的颜色通道。因此，componentX(x, y)和componentY表示置换图上位置为(x, y)的像素点的指定颜色通道的值。颜色通道的设置可以通过构造函数来指定，并且源像素srcPixel(x, y)在x与y方向的偏移量可以由componentX(x, y)和componentY(x, y)分别指定。scaleX和scaleY作用类似，不必再提。</p><p>举个例子，比如置换图上(x, y)的点RGB值为0xaabbcc。现在指定 x 方向上的颜色通道为红色，y 方向上的颜色通道为绿色。componentX(x, y)的值就是0xaa，componentY(x, y)的值就是0xbb。其他值忽略。</p><p>&nbsp;</p><p>再看常量128。这里不说为什么要减128，只看减了128之后是什么。</p><p>我们知道一个颜色通道的范围为 0 ~ 255， (componentX(x, y) - 128)的结果为 (-128, 127)，其效果就是这个指定的颜色通道的值的范围只有 0 ~ 127，但是它有方向。看偏移量的公式，这个方向也是最后偏移量的方向，这个很好理解，就不再赘述。</p><p>&nbsp;</p><p>最后我们看256以及scaleX和scaleY。我们再把偏移量公式稍微变化一下：</p><pre escaped="true">X = ((componentX(x, y) - 128) / 256) * scaleXY = ((componentY(x, y) - 128) / 256) * scaleY</pre><p>上面我们知道，(componentX(x, y) - 128)的值为 -128 ~ 127，除以256之后就是±(0, 0.5)，这可以看成是scale的一个系数。</p><p>&nbsp;</p><p>整个偏移量的含义就比较明显了：<strong><span style="color: #ff0000;">scale的值缩小若干倍就是偏移量</span></strong>。</p><p>&nbsp;</p><p>至此，置换滤镜的含义就可以总结为：<strong><span style="color: #ff0000;">用置换图上某个位置的像素的某个颜色通道值控制缩放比例，得到一个偏移量；用该偏移量对源图上对应的像素进行偏移，得到目标图上对应位置的像素值。</span></strong><span style="color: #ff0000;"><span style="color: #000000;">说白了就是<strong>用置换图上的像素控制源图上的像素进行偏移</strong>。</span></span></p><p>&nbsp;</p><p><span style="color: #000000;">虽然上面的结论比较拗口，但还不是DisplacementMapFilter提供的功能的全部。我们看一下它的构造函数：</span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DisplacementMapFilter(</span><br><span class="line">    mapBitmap:[BitmapData](..&#x2F;..&#x2F;flash&#x2F;display&#x2F;BitmapData.html) &#x3D; null, </span><br><span class="line">    mapPoint:[Point](..&#x2F;..&#x2F;flash&#x2F;geom&#x2F;Point.html) &#x3D; null, </span><br><span class="line">    componentX:[uint](..&#x2F;..&#x2F;uint.html) &#x3D; 0, </span><br><span class="line">    componentY:[uint](..&#x2F;..&#x2F;uint.html) &#x3D; 0, </span><br><span class="line">    scaleX:[Number](..&#x2F;..&#x2F;Number.html) &#x3D; 0.0, </span><br><span class="line">    scaleY:[Number](..&#x2F;..&#x2F;Number.html) &#x3D; 0.0, </span><br><span class="line">    mode:[String](..&#x2F;..&#x2F;String.html) &#x3D; &quot;wrap&quot;,</span><br><span class="line">    color:[uint](..&#x2F;..&#x2F;uint.html) &#x3D; 0, </span><br><span class="line">    alpha:[Number](..&#x2F;..&#x2F;Number.html) &#x3D; 0.0</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>其中mapPoint, mode, color和alpha我们并没有讨论。好在他们的含义并不难以理解，不提。</p><span style="color: #000000;"></span>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> as3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对三大桌面系统的一点看法</title>
      <link href="/2011/03/21/perspective-of-three-desktop-oses/"/>
      <url>/2011/03/21/perspective-of-three-desktop-oses/</url>
      
        <content type="html"><![CDATA[<p>Windows是最流行的桌面系统，虽然现在Apple如日中天，但是短期之内无法撼动windows的地位。不过不可否认的是，windows已经开始走向没落。其实苗头早在几年前就已经显现，只是win7的推出犹如一支强心剂，给垂垂老矣的windows带来新的活力。但是现在那怕win8推出，也达不到那样的效果了。越来越多的人开始在windows之外尝试其他的系统，并且不想再回头。</p><p>Linux和OSX是流出的两大方向。几年以前，流出的方向是linux，现在多了一个选择。传奇的贵族式的osx比linux更具有吸引力。在软件行业，如果当年linux吸引的还主要是geek特质的对象，那么osx已经开始吸引普通的工程师。只要给他们机会，大部分人都乐意离开windows，投入osx或者linux的环抱。即使工作的关系在公司不得不使用windows，越来越多的工程师在家也安装了linux系统或是购买了安装osx的苹果电脑。我也是如此，要不是现在工作的需要必须绑定在windows上，我非常乐意去尝试全新的体验。但在家里，我还是购买了iMac并在笔记本上安装了ubuntu。</p><p>开发人员的数量和素质决定一个平台的命运。如果他们离开，剩下的就只有没落！而关于开发者离开的原因，就我个人观察，完全不是因为windows不够友好。在使用过osx半年之后，我并不觉得它比windows更出色，除去因为历史原因导致的软件方面的匮乏不谈，就一些系统自身的操作，很多方面windows也是更方便的。方便友好并不能决定开发者的去留。linux是公认的不友好，但是依然有大批的开发者，虽然它也有自身的问题。</p><p>影响开发者的选择的原因多种多样，但是有两个是最重要的：暗淡的前景和厌倦！</p><p>对真正的开发者来说，在windows上进行投入前景越来越暗淡，说的明确一点，就是收入越来越微薄。造成这一情况的原因也有两个：一个是外部的原因。自由软件吞噬了绝大部分的小软件的市场份额，个人开发者或是小型的开发团体已经无法从市场获利。同时当前整个桌面平台在向网络平台过渡，而微软提出的一些技术方案并没有得到其他公司和社区的支持，进一步压缩了其平台上的开发者的生存空间。另一个是微软自身的原因。频繁的抛出一些没有营养的概念，企图用学习成本把开发者捆绑在他的平台上，却忽略了整个生态环境的建立。当人们花了大力气追在他后面学习各种概念，比如不知所谓的.net，却发现学会了之后发展空间反而变窄了。一方面微软大力宣传学习成本低廉，大量的人员开始进入，另一方面微软并没有或是没能力为他的追随者们创造足够的发展空间。整个生态环境因为拥挤而变得恶劣，甚至微软为开发者们提供更容易使用的工具这样看似正确的事情也在伤害着他现在的开发者。由于门槛的降低，大批平庸的开发者涌入这一领域，必定严重冲击整个市场。如同在一些新技术行业的小公司，他们把是否从该行业中退出的风向标定为是否有中国公司进入一样，先来的开发者会陆续退出，另辟战场，并会很乐意的把windows留个他们。这情形就像投资者丢弃一支烂股票一样。</p><p>除了客观的原因以外，也有一些非理性的因素在起着影响。或多或少像我这样的人会对windows有一种厌倦感。我曾和朋友说，如果windows phone要成功，首先需要抛弃windows这个词，至少在商标和宣传上应该如此。这个词除了兼容性，并不能给我们其他的美好感觉，甚至在兼容性方面，他代表的也并不是完美。开发者喜欢新鲜感，但是windows，大家太熟悉了。他们有勇气承认不懂linux和osx，但是不好意思说自己不懂windows，哪怕他们确实对windows phone一无所知！人们第一印象并不会区分这是桌面和移动两个不同的系统，他们首先注意到的是相同点，这大概也是微软为什么要在phone前加上windows的原因，只是这个想法完全错了！而另一方面，windows的知识越来越没有特殊性，难于彰显个性。人们只有对自己不熟悉的东西才有好奇心。而失去好奇心的开发者根本就不能称为工程师。</p><p>windows开始没落，而桌面版linux，一开始就走入了歧途。桌面版linux的目标，如果他们有目标的话，就是在linux上建立windows的用户体验。看看这几年这个社区努力在做的事情，看看wine，看看gnome。他们只是在把linux变成免费的windows，可是他们并不成功，哪怕在个人市场以及非商业领域。现在使用linux的人，依然是那些应该使用linux的人。在我看来，沿着这条路走下去，他们永远也不可能成功。</p><p>osx的情况和linux的不同。它本来就是一个完善和强大桌面系统，只是价格限制了它的发展。它以某种方式被人们看作是一种奢侈品，是一种象征或是一种精神。当它走下神坛后必将立刻吸引大批的追随者，但是这种情况是否会持久并不能立刻作出判断。和windows以及它的近亲linux不同，osx平台上几乎所有的程序都是需要收费的。这对开发者而言却是一种很好的生存环境，只是这必然会阻碍它长期占据大众市场。</p><p>我对这三个主要的桌面系统的看法是它们应该根据各自的特色形成一个不交叉的定位：osx不应该想着打入主流市场，它甚至不应该进入服务器市场，这些与它长久以来的贵族式的特质并不吻合，强行进入反而会削弱原来的影响力。linux应该替换的是unix，除了服务器外还有科研领域。它应该为他的大批geek追随者提供更强的功能。他们不会在乎有没有ui界面，只要console足够强大，开发环境足够强大，社区支持足够强大，总之功能要足够强大。windows面向大众，它需要把自己弱化成一个工具并向osx和linux提供接口以接受他们的成果。他需要作出牺牲，放弃把人人都变成程序员的梦想，把专业的事情留个专业的人，而不是抢走他们的饭碗。</p>]]></content>
      
      
      <categories>
          
          <category> Critique </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于“十三个球用天平称三次，找出其中一个质量不同的球”的解</title>
      <link href="/2011/03/07/algorithm-about-thirteen-balls/"/>
      <url>/2011/03/07/algorithm-about-thirteen-balls/</url>
      
        <content type="html"><![CDATA[<p>这个问题最重要的是如何分配这些球。我们可以假设该质量不同的球为x，并把13个球分成两组：A组8个球，B组5个球。</p><ol><li>把A组均分成两组：a组4个球，b组也是4个球。</li><li>假如a＝b，则x在B组；                            （第一次称）<br> 1.）在A组中拿出3个正常的球组成c组；在B组5个球中取3个作为d组，剩余2个球为e组。<br> 2.）假如c＝d，则x在e组。                      （第二次称）<pre><code>（1.）在A组中取出一正常球作为f；在e组取出一球作为g，余下一球为h。（2.）假如f＝g，则h即为x。                （第三次称）（结束）（3.）否则g即为x。（结束）</code></pre> 3.）假如c＞d，则x在d组，并且为重球。<pre><code>（1.）把d组的三个球分别表示为f，g，h。（2.）假如f＝g，则h即为x。               （第三次称）（结束）（3.）假如f＞g，则f即为x，因为x是重球。（结束）（4.）假如f＜g，则g即为x，因为x是重球。（结束）</code></pre> 4.）假如c＜d，则x在d组，并且为轻球。过程同3.）。</li><li>否则，则x在A组。假如a＞b，<br> 1.）在a中取三个球组成c组，余下一球为d。<br> 2.）在b中取两个球组成e组，余下两球为f组。<br> 3.）假如（c＋e）＝B，则x在（d＋f）中。        （第二次称）<pre><code>（1.）把f组中两球分别表示为g，h。（2.）假如（d＋g）＝e，则h即为x。            （第三次称）（结束）（3.）假如（d＋g）＞e，可知x为重球，因已知a＞b，可得d即为x。（结束）（4.）假如（d＋g）＜e，可知x为轻球，因已知a＞b，可知g即为x。（结束）</code></pre> 4.）假如（c＋e）＞B，则x在（c＋e）中，且为重球。<pre><code>（1.）因为a＞b，而x为重球，则x在c中。（2.）由2.3.）,可以得出x所在。（结束）</code></pre> 5.）假如（c＋e）＜B，则x在（c＋e）中，且为轻球。<pre><code>（1.）因为a＞b，而x为轻球，则x在e中。（2.）把e组的两个球分别表示为g，h。（3.）假如g＞h，则h为x。              （第三次称）（结束）（4.）假如g＜h，则g为x。（结束）</code></pre></li><li>否则，则x在A组。假如a＜b，<br> 1.）过程同3.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何补全proxy switchy!的功能</title>
      <link href="/2011/02/09/proxy-switchy/"/>
      <url>/2011/02/09/proxy-switchy/</url>
      
        <content type="html"><![CDATA[<p><a href="https://chrome.google.com/webstore/detail/caehdcpeofiiigpdhbabniblemipncjj" target="_blank" rel="noopener">Proxy Switch!</a>是一个Google Chrome浏览器的插件，通过它可以方便的设置和切换代理（Auto Switch Mode）。但是，Proxy Switch!新建的规则只能使用shExpMatch函数，这导致了一些局限性。下面的揭示如何让其支持自动代理脚步的其他的函数，唯一的要求是要有一个web空间可以存放自动代理脚步。</p><p>方法很简单，</p><ol><li>把那些用shExpMatch无法满足的url和host放在一个文件中，比如proxy.pac，然后传到一个web空间。</li><li>在Switchy!新建的proxy profiles，比如ssh_proxy中，不使用manual configuration，而是Automatic Configuration，并在Auto Config URL中指明proxy.pac的地址。</li><li>在Switch Rules中，Default Rule的Proxy Profile中指定ssh_proxy。</li><li><span style="color: #ff0000;">由于proxy switchy！1.6.3版本的bug，除了在Default rule中指定ssh_proxy外，在自定义的rule中必须要有至少一项的profile也指定为ssh_proxy。</span><br>这样设置后，虽然同一个url会被匹配两次，但是与获得的便利相比，性能的损失可以忽略。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;Go to work&#39; and &#39;Get to work&#39;</title>
      <link href="/2011/01/07/Go-to-work-and-Get-to-work/"/>
      <url>/2011/01/07/Go-to-work-and-Get-to-work/</url>
      
        <content type="html"><![CDATA[<p>今天看New York Times一则关于防雪的报道，里面提到</p><blockquote><p>… and people could not get to work.</p></blockquote><p>平时我一直用”go to work”表示去上班的意思，这里为什么用”get to work”呢？好奇驱使下搜索了一下，发现它们还真是两个不同意思的词组。</p><p>“go to”表示的是动身去做，而”get to”的意思是到达。所以这两个词组的含义其实是：<br>“go to work”， 动身去上班，比如从家里出发；而”get to work”，是到达上班（的地方）。</p><p>如果说”could not go to work”，表示的是不能出发去上班，比如生病了之类，强调的是不能动身；”could not get to work”，表示的是不能到达上班的地方，比如大雪封路，强调的是不能到达。前面的报道如果用”go to work”，意思就错了。</p><p>所以如果要问某人是搭什么交通工具上班的，也需要用”get to work”：</p><blockquote><p>How do you get to work?<br>By bus.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> english </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New features in DaCalc v1.7.1.0</title>
      <link href="/2010/12/08/new-features-in-dacalc-v1-0-7-1/"/>
      <url>/2010/12/08/new-features-in-dacalc-v1-0-7-1/</url>
      
        <content type="html"><![CDATA[<p> The new version of DaCalc 1.7.1.0 comes with several new features.</p><ol><li>Automatically use the last result as the first operand if an operator is the first input in normal mode. For example, after calc an expression, <span style="color: #ff0000;">2+3</span>, we get <span style="color: #ff0000;">5</span> as the result. Now the expression box is empty and user press a + button directly, the last result <span style="color: #ff0000;">5</span> will be added as the first operand and the expression looks like: <span style="color: #ff0000;">5+</span>. If there is no last result, <span style="color: #ff0000;">0.0</span> will be added.</li><li>Minus sign is supported. Now user can press <span style="color: #ff0000;">-</span> to add a minus sign before an operand. The following expression is supported now: <span style="color: #ff0000;">-5+3</span><br>In order to add the last result for -, user need to long press the - button.</li><li>The default n-th of a <a href="http://en.wikipedia.org/wiki/Nth_root" target="_blank" rel="noopener">root operator</a> is a Square root. In the earlier version, the n-th of a root operator can not be omitted. It must be written as<span style="color: #ff0000;"> x√y</span>. Now if the n-th (x) is absent, the operator will be recognized as a Square root operator. It is easier for some common usage.<br>It can be downloaded from Android Market now.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dacalc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用C++开发MYSQL应用</title>
      <link href="/2010/11/20/use-cpp-dev-mysql-app/"/>
      <url>/2010/11/20/use-cpp-dev-mysql-app/</url>
      
        <content type="html"><![CDATA[<p>简单的介绍如何用Visual Studio C++开发MYSQL的应用。为新手指明开发环境的准备和资源的位置。<br>首先是准备工作。需要下载三个开发库：</p><ol><li>去官方网站下载<a href="http://mysql.com/downloads/connector/cpp/" target="_blank" rel="noopener">mysql-connector/c++</a>。有多个版本，我下载的是mysql-connector-c++-noinstall-1.1.0-win32-vs2005.zip。connector-c++提供了两个lib，mysqlcppconn.lib和mysqlcppconn-static.lib，不幸的是最终运行的时候他们都需要libmysql.dll。</li><li>所以还需要下载<a href="http://mysql.com/downloads/connector/c/" target="_blank" rel="noopener">connector/c</a>。同样有多个版本可以选择，我下载的是mysql-connector-c-noinstall-6.0.2-win32-vs2005.zip。把两个压缩包解压到同一个地方，开发包就准备好了，但是准备工作还没有完成。</li><li>你还需要下载<a href="http://www.boost.org/" target="_blank" rel="noopener">boost</a>库才可以编译程序，因为新的版本的connector中使用了boost。<br>然后是工程的配置， 主要是选择哪个lib。我选择使用mysqlcppconn.lib+libmysql.lib。其他的组合在visual studio 2010下都会有很多链接错误。相信所有的错误都是可以通过配置解决的，具体策略视需求而定。</li></ol><p>最后，mysql网站提供了一些<a href="http://dev.mysql.com/doc/refman/5.1/en/connector-cpp.html" target="_blank" rel="noopener">manual</a>和<a href="http://dev.mysql.com/doc/refman/5.1/en/connector-cpp-getting-started-examples.html" target="_blank" rel="noopener">example</a>。</p><p>下面是一个简单的例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mysql_connection.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mysql_driver.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXAMPLE_HOST <span class="meta-string">"xxx"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXAMPLE_USER <span class="meta-string">"xxxxx"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXAMPLE_PASS <span class="meta-string">"xxxxxx"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EXAMPLE_DB <span class="meta-string">"xxxxxx"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">url</span><span class="params">(argc &gt;= <span class="number">2</span> ? argv[<span class="number">1</span>] : EXAMPLE_HOST)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="built_in">string</span> <span class="title">user</span><span class="params">(argc &gt;= <span class="number">3</span> ? argv[<span class="number">2</span>] : EXAMPLE_USER)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="built_in">string</span> <span class="title">pass</span><span class="params">(argc &gt;= <span class="number">4</span> ? argv[<span class="number">3</span>] : EXAMPLE_PASS)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="built_in">string</span> <span class="title">database</span><span class="params">(argc &gt;= <span class="number">5</span> ? argv[<span class="number">4</span>] : EXAMPLE_DB)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt; &lt; <span class="string">"Connecting to MYSQL server..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        sql::mysql::MySQL_Driver *driver;</span><br><span class="line">        sql::Connection *con;</span><br><span class="line"></span><br><span class="line">        driver = sql::mysql::get_driver_instance();</span><br><span class="line">        con = driver-&gt;connect(EXAMPLE_HOST, EXAMPLE_USER, EXAMPLE_PASS);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt; &lt; <span class="string">"Done! Querying..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        sql::Statement *stmt;</span><br><span class="line">        stmt = con-&gt;createStatement();</span><br><span class="line">        stmt-&gt;execute(<span class="string">"USE "</span> EXAMPLE_DB);</span><br><span class="line">        <span class="comment">//stmt-&gt;execute("DROP TABLE IF EXISTS test");</span></span><br><span class="line">        <span class="comment">//stmt-&gt;execute("SELECT * FROM `test` LIMIT 0, 30 ");</span></span><br><span class="line"></span><br><span class="line">        sql::ResultSet  *res;</span><br><span class="line">        res = stmt-&gt;executeQuery(<span class="string">"SELECT * FROM test LIMIT 0, 30 "</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span> &lt; &lt; <span class="string">"Done! Printing..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (res-&gt;next()) &#123;</span><br><span class="line">            <span class="comment">//// You can use either numeric offsets...</span></span><br><span class="line">            <span class="comment">//cout &lt; &lt; "id = " &lt;&lt; res-&gt;getInt(1); // getInt(1) returns the first column</span></span><br><span class="line">            <span class="comment">// ... or column names for accessing results.</span></span><br><span class="line">            <span class="comment">// The latter is recommended.</span></span><br><span class="line">            <span class="built_in">cout</span> &lt; &lt; <span class="string">"Project: "</span> &lt;&lt; res-&gt;getString(<span class="string">"project"</span>) &lt; &lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Deadline:"</span> &lt;&lt; res-&gt;getString(<span class="string">"deadline"</span>) &lt; &lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Price:   "</span> &lt;&lt; res-&gt;getString(<span class="string">"price"</span>) &lt; &lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"People:  "</span> &lt;&lt; res-&gt;getString(<span class="string">"people"</span>) &lt; &lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">delete</span> res;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">delete</span> stmt;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">delete</span> con;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (sql::SQLException &amp;e) &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          The MySQL Connector/C++ throws three different exceptions:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          - sql::MethodNotImplementedException (derived from sql::SQLException)</span></span><br><span class="line"><span class="comment">          - sql::InvalidArgumentException (derived from sql::SQLException)</span></span><br><span class="line"><span class="comment">          - sql::SQLException (derived from std::runtime_error)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"# ERR: SQLException in "</span> &lt;&lt; __FILE__;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="string">") on line "</span> &lt;&lt; __LINE__ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="comment">/* Use what() (derived from std::runtime_error) to fetch the error message */</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"# ERR: "</span> &lt;&lt; e.what();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">" (MySQL error code: "</span> &lt;&lt; e.getErrorCode();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">", SQLState: "</span> &lt;&lt; e.getSQLState() &lt;&lt; <span class="string">" )"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Done."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The lights in Froyd Villainrom 1.5</title>
      <link href="/2010/11/12/the-lights-in-froyd-villainrom-1-5/"/>
      <url>/2010/11/12/the-lights-in-froyd-villainrom-1-5/</url>
      
        <content type="html"><![CDATA[<p>Froyd villainrom is a great rom. But if you don’t like the lights (the led blinking, the trackball light) you can replace the lights.hero.so file under the path <span style="color: #ff6600;">/system/lib/hw/</span> with the file from older versions. If you don’t have one, you can download from <a href="http://www.deskangel.com/download/lights.hero.so" target="_blank" rel="noopener" title="lights.hero.so">here</a>.</p><p>You can do following steps in console to replace a file under /system/ folder if you have adb tools:</p><pre>adb remountadb pull /system/lib/hw/lights.hero.so ./lights.hero.so.bkadb push ./lights.hero.so /system/lib/hw/</pre>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ads free version for DaysandDate and AdjBrightness</title>
      <link href="/2010/10/22/ads-free-version-for-daysanddate-and-adjbrightness/"/>
      <url>/2010/10/22/ads-free-version-for-daysanddate-and-adjbrightness/</url>
      
        <content type="html"><![CDATA[<p>I just uploaded the ads free version of AdjBrightness to Android Market. If you don’t like to see ads on your application, you can try the ads free version. All permissions for Ads are also removed.</p><p>Ads free version for DaysandDate has been Android Market for several weeks.</p><p>If you won’t like to spend money on them, you can still use the ads versions. They are all full function versions.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daysanddate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>error RC1106: invalid option: -ologo</title>
      <link href="/2010/08/31/error-rc1106-invalid-option-ologo/"/>
      <url>/2010/08/31/error-rc1106-invalid-option-ologo/</url>
      
        <content type="html"><![CDATA[<p>After switch to vs2010, if you encounter the error:</p><pre>Error    1    error RC1106: invalid option: -ologo</pre><p>not only set the “<span style="color: #ff0000;">Suppress Startup Banner</span>“ to “No” in Properties-&gt;Resources, but also need to set the “<span style="color: #ff0000;">Enable Incremental Linking</span>“ to “No” in Properties-&gt;Linker.</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用wine在Mac上运行Win程序</title>
      <link href="/2010/07/21/wine-in-mac/"/>
      <url>/2010/07/21/wine-in-mac/</url>
      
        <content type="html"><![CDATA[<p>首先需要安装wine。具体方法参考_toyjack’s GeekTalks_的博文<a href="http://toyjack.net/install_wine_on_mac_os_x/" target="_blank" rel="noopener">Mac系统下安装Wine</a>。</p><p>用wine运行程序，如果出现找不到mfc42.dll这样的错误，则需要用winetricks下载必要的文件。参考<a href="https://wiki.winehq.org/FAQ#My_application_says_some_DLL_or_font_is_missing._What_do_I_do.3F" target="_blank" rel="noopener">My application says some DLL or font is missing. What do I do?</a>以及<a href="https://wiki.winehq.org/Winetricks#Getting_winetricks" target="_blank" rel="noopener">Getting winetricks</a>。</p><p>winetricks是一个脚本文件，下载后保存到用户目录（～），然后运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x winetricks</span><br><span class="line">./winnetricks</span><br></pre></td></tr></table></figure><p>在弹出的对话框中，根据所需，如缺mfc42.dll，则选择vcrun6。之后会在～目录下生成.winetrickscache目录，并把vc6redistsetup_enu.exe下载至该目录。</p><p>进入该目录，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine vc6redistsetup_enu.exe</span><br></pre></td></tr></table></figure><p>在弹出窗口中选择提取文件的存放目录，比如<em>~/tmp*，则进入</em>~/tmp*，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine vcredist.exe</span><br></pre></td></tr></table></figure><p>会把文件提取到<code>~/.wine/drive_c/windows/system32</code>目录。<br>此时再运行<code>wine app_name.exe</code>应该就可以成功了。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> osx </tag>
            
            <tag> wine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adjust brightness for Android devices</title>
      <link href="/2010/07/19/adjust-brightness-for-android-devices/"/>
      <url>/2010/07/19/adjust-brightness-for-android-devices/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.deskangel.com/adjbrightness/images/snap20100701_165318.png" target="_blank" rel="noopener"><img src="http://www.deskangel.com/adjbrightness/images/snap20100701_165318-200x300.png" alt="AdjBrightness main page" title="AdjBrightness"></a></p><p>The settings for brightness of buttons and screen are very rough in Android devices, like in HTC Hero. But if your rom is <span style="color: #ff0000;">ROOTED</span>, you can download and install <a href="market://search?q=pname:com.deskangel.adjbrightness">AdjBrightness</a>, which can adjust the brightness of the screen from the value 2 to 255.</p><p>There are six predefined values in the main page, simply click one of them to set the brightness. If the predefined values cannot fit your request, just type the brightness value you want in the edit box and set it.</p><p>Besides those, in the option page, you can find several settings:</p><ol><li>Auto restore: Tick this if you want AdjBrightness to restore the brightness after the screen turned on.</li><li>Notification: Tick this, AdjBrightness will display a message on screen every after it set the brightness.</li><li>Lock brightness: This is really cool. Tick this if you do not want other applications to change the brightness. After tick this, you needn’t tick the Auto restore.</li><li>Lock off button light: This is for background light of keyboard. If you don’t like the light as well, tick this to turn off and lock it.<br>You can download this application from Google Market. Just search adjbrightness or access following link in your phone <a href="market://search?q=pname:com.deskangel.adjbrightness" title="market://search?q=pname:com.deskangel.adjbrightness">market://search?q=pname:com.deskangel.adjbrightness</a>.</li></ol><p>Always, if you encounter any problem, drop me an <a href="mailto:william.xue@gmail.com" title="email">email</a>.</p><p><span style="color: #ff0000;">NOTICE</span>: If you cannot turn on the screen, please keep the “Auto restore” ticked in settings.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adjbrightness </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Share DaysAndDate and get Ads removal code</title>
      <link href="/2010/07/08/share-daysanddate-and-get-ads-removal-code/"/>
      <url>/2010/07/08/share-daysanddate-and-get-ads-removal-code/</url>
      
        <content type="html"><![CDATA[<p>Long story short, everybody who recommended DaysAndDate or wrote reviews/shared experiences for it in <strong>three places</strong> in internet (blog, twitter, forum, etc.) will get an Ads removal code for DaysAndDate as a gift after they emailed the links of above places to [<a href="mailto:william.xue@gmail.com">william.xue@gmail.com</a>](mailto:<a href="mailto:william.xue@gmail.com">william.xue@gmail.com</a>?subject=Shared DaysAndDate).</p><p>If you like the application but hate the Ads, this is a chance to spread the application to world and get ride of the Ads from your device. Two birds with one stone. DO NOT WASTE IT!</p><p>It is running from now to 11/30/2010.</p><p>Quick introduction:</p><blockquote><p>DaysAndDate tells you how many days between two dates or the date before/after several days. For example, how many days left to your next birthday from now? Or what is the date after your baby has been born 100 days?<br>Link to the DaysAndDate in Android Market:<br><a href="market://search?q=pname:com.deskangel.DaysAndDate">market://search?q=pname:com.deskangel.DaysAndDate</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> News </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daysanddate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>波斯王子：遗忘之沙（WII）剧情</title>
      <link href="/2010/06/28/prince-of-persia-the-forgotten-sands-wii/"/>
      <url>/2010/06/28/prince-of-persia-the-forgotten-sands-wii/</url>
      
        <content type="html"><![CDATA[<p>波斯王子：遗忘之沙（WII）讲述的是一个王子与精灵的故事。</p><p>精灵Zahra和她的族人曾经居住在森林中一个叫做lzdihar的王国，但是后来她的族人都被一个叫做Haoma的妖怪杀掉了。为了打败Haoma，她把自己卖给了王子，一个正在寻找可以让他领导的王国的勇士。</p><p>他们穿过丛林，来到一块空地。在Zahra的引导下，王子亲吻了一座被施了魔法的雕像，由此获得了不死的能力。之后，lzdihar王国的入口出现在他的眼前。</p><p>在探索中，王子发现了一把奇怪的刀。就在这时，一只巨大的怪物出现了。王子用那把刀攻击怪物。刀折断了。怪物带着刀刃逃跑了，但是刀柄还留在王子手里。Zahra告诉王子，那把刀封印了Haoma，现在她被释放了。他们必须把刀刃和刀柄重新组合在一起才能击败Haoma。</p><p>在接下来的对怪物的追逐中，王子学习到了各种技能。利用这些技能，度过了多个难关，解开了多个谜题，最后把那个巨大的怪物击败了。这时发现，原来怪物是这个王国的国王。他请求王子击败Haoma，解救他的女儿，王国的公主。</p><p>拿到断刃的王子，经过了神的四道考验，最终把断刃和刀柄重新融合在一起，开始与Haoma的进行最后的战斗。</p><p>经过三次攻击Haoma的心脏，这个植物型的妖怪终于被打败。Haoma恢复成原来的样子，原来她就是这个王国的公主。但是，还未等王子他们喘上一口气，妖怪用最后的力量驱动植物缠住了公主的脚，要把她拖向深渊。在千钧一发之际，王子抓住了公主的手。但是力量悬殊。王子只能利用最后的机会亲吻了公主，把他获得的不死的能力传递给了公主。</p><p>lzdihar开始塌陷，沙子开始吞噬整个王国。王子和Zahra在逃离中进入了王国的精神世界。整个世界如梦幻一般，王子的动作变得缓慢而持久。而Zahra的声音也犹如呓语一般不断的在王子的耳边重复”remember”。这是Zahra最后的声音和心愿！</p><p>逃离了精神世界之后，王子从他第一次亲吻的雕像前的泉水中出现，回到了现实世界。雕像随后倒塌。</p><p>最后，王子一个人踽踽于沙漠之中，渐行渐远……</p><p>也许某一天，他会再次回来，回到这个王国，去寻找公主和Zahra。</p><p><a href="http://en.wikipedia.org/wiki/Prince_of_Persia:_The_Forgotten_Sands_(Wii)" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Prince_of_Persia:_The_Forgotten_Sands_(Wii)</a></p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Android程序添加不同的广告平台</title>
      <link href="/2010/06/04/add-different-ads-in-android-app/"/>
      <url>/2010/06/04/add-different-ads-in-android-app/</url>
      
        <content type="html"><![CDATA[<p>本文假设已有一个广告，比如admob，然后添加另一广告，比如有米，用来在根据不同的语言自动调用不同的广告平台。</p><ol><li><p>在attrs.xml中追加一个declare-stylea，原有的属性不需要再定义。结果如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt; ?<span class="attr">xml</span> <span class="attr">version</span>=<span class="string">"1.0"</span> <span class="attr">encoding</span>=<span class="string">"UTF-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">declare</span> <span class="attr">-styleable</span> <span class="attr">name</span>=<span class="string">"com.admob.android.ads.AdView"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"testing"</span> <span class="attr">format</span>=<span class="string">"boolean"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"backgroundColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"textColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">format</span>=<span class="string">"string"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"refreshInterval"</span> <span class="attr">format</span>=<span class="string">"integer"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"isGoneWithoutAd"</span> <span class="attr">format</span>=<span class="string">"boolean"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">declare</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">declare</span> <span class="attr">-styleable</span> <span class="attr">name</span>=<span class="string">"net.youmi.android.AdView"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"changeAdAnimation"</span>  <span class="attr">format</span>=<span class="string">"boolean"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"backgroundTransparent"</span>  <span class="attr">format</span>=<span class="string">"integer"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">declare</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>为不同的区域创建不同的layout<br>首先在默认的layout目录中创建ads.xml文件，用于存放广告代码。在工程目录上右击，New-&gt;Android XML File，输入文件名ads.xml，结束。<br>然后为特定的语言创建ads.xml。在工程目录上右击，New-&gt;Android XML File，输入文件名ads.xml选择资源类型为Layout，添加Region为cn，添加Language为zh，结束。</p></li><li><p>把针对于非中文的广告配置移动到layout/ads.xml文件中，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt; ?<span class="attr">xml</span> <span class="attr">version</span>=<span class="string">"1.0"</span> <span class="attr">encoding</span>=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">merge</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:admobsdk</span>=<span class="string">"http://schemas.android.com/apk/res/com.deskangel.dacalc"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com</span> <span class="attr">.admob.android.ads.AdView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ad"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">admobsdk:backgroundColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">admobsdk:textColor</span>=<span class="string">"#FFFFFF"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">admobsdk:keywords</span>=<span class="string">"Android application"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">admobsdk:refreshInterval</span>=<span class="string">"60"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">admobsdk:testing</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">merge</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>把针对中文的广告配置移动到layout-zh-rCN/ads.xml文件中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt; ?<span class="attr">xml</span> <span class="attr">version</span>=<span class="string">"1.0"</span> <span class="attr">encoding</span>=<span class="string">"utf-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">merge</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:umadsdk</span>=<span class="string">"http://schemas.android.com/apk/res/com.deskangel.dacalc"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">net</span> <span class="attr">.youmi.android.AdView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/ad"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">umadsdk:refreshInterval</span>=<span class="string">"30"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">umadsdk:changeAdAnimation</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">umadsdk:backgroundTransparent</span>=<span class="string">"255"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">umadsdk:testing</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">umadsdk:isGoneWithoutAd</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">merge</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在需要显示广告的地方添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">layout</span>=<span class="string">"@layout/ads"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/incAds"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大功告成！非常简单的配置。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaysAndDate 6.1.0.0 released</title>
      <link href="/2010/05/11/daysanddate-6-1-0-0-released/"/>
      <url>/2010/05/11/daysanddate-6-1-0-0-released/</url>
      
        <content type="html"><![CDATA[<p>The version 6.1.0.0 of DaysAndDate is released to Market (search ‘DeskAngel’ or ‘DaysAndDate’ to get it) just now. Now, it can</p><ol><li>Calculate days between two dates</li><li>Calculate the date before/after several days</li><li>Add record into favorite</li><li>Auto update the favorite records</li><li>Set alarm to records</li><li>Add comment to dates<br>The Ads coming with DaysAndDate can be removed for the donators. If you want to support my work, please consider to donate to <a href="mailto:william.xue@gmail.com">william.xue@gmail.com</a> in Paypal.</li></ol><p><a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=R7XE7AL4FQQU6" target="_blank" rel="noopener"><input name="hosted_button_id" type="hidden" value="R7XE7AL4FQQU6" /> <input alt="PayPal - The safer, easier way to pay online!" name="submit" src="https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif" type="image" /> <img src="https://www.paypal.com/en_US/i/scr/pixel.gif" alt=""></a></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daysanddate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DaCalc Support normal mode</title>
      <link href="/2010/05/06/dacalc-support-normal-mode/"/>
      <url>/2010/05/06/dacalc-support-normal-mode/</url>
      
        <content type="html"><![CDATA[<p><a href="http://blog.deskangel.com/images/wp/snap20100506_103707.png"><img src="http://blog.deskangel.com/images/wp/snap20100506_103707-200x300.png" alt="" title="snap20100506_103707"></a></p><p><strong><span style="color: #ff0000;">Normal mode</span></strong> in DaCalc means DaCalc can work as a common calculator. User can input expression by the calculator panel instead of composing a formula at first, then load it. It saves much time in the scenario when users only want to do some simple calculations.</p><p>The another mode in DaCalc is <span style="color: #ff0000;"><strong>Formula mode</strong></span>, which comes with the first release.</p><p>Normal mode is the default mode, but switching between them is easy. Click _<span style="color: #ff0000;">‘Load’</span>_ in menu to load a formula will switch DaCalc to Formula mode. Click _<span style="color: #ff0000;">‘Reset’</span>_ in menu will switch back to Normal mode again.</p><p>You will notice that the number panel is a litter different for Normal mode and Formula mode.</p><p>Try it yourself!</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dacalc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android下的ListView一般应用指南</title>
      <link href="/2010/04/28/listview-in-android/"/>
      <url>/2010/04/28/listview-in-android/</url>
      
        <content type="html"><![CDATA[<p>一，显示：<br>ListView的Layout需要两个xml。第一个xml，在其中添加ListView本身，把ListView添加到需要显示的位置；第二个xml，则是定义ListView需要显示的内容的Layout。</p><p>定义ListView内容的Layout和一般的Layout一样，除了一些限制，比如<span style="color: #ff0000;">不要在里面添加EditText</span>之类带输入焦点的View。</p><p>info_list.xml:</p><pre class="xml">&lt;LinearLayout    xmlns:android="http://schemas.android.com/apk/res/android"    android:layout_height="wrap_content"    android:layout_width="fill_parent"&gt;    &lt;TextView        android:layout_height="wrap_content"        android:id="@+id/txtName" android:layout_width="fill_parent" android:layout_weight="0.7" android:text="name" android:layout_marginRight="1px" android:background="#c0ffffb0" android:textColor="#000000"&gt;&lt;/TextView&gt;    &lt;TextView        android:layout_height="wrap_content"        android:id="@+id/txtExp"    android:layout_width="fill_parent" android:layout_weight="0.3" android:text="expression" android:background="#c0ffb600" android:textColor="#000000"&gt;&lt;/TextView&gt;&lt;/LinearLayout&gt;</pre><p>把ListView内容的Layout和ListView绑定在一起就可以显示了。一般的应用，使用SimpleAdapter就可以了：</p><pre class="java">SimpleAdapter listItemAdapter = new SimpleAdapter(this,listItem,R.layout.inf_list,new String[] {"lstItmDate", "lstItmWeek"},new int[] {R.id.txtvwWeek,R.id.txtvwWeekInfo});</pre><p>SimpleAdapter的构造需要使用到一个List (listItem)，使用如下的定义可以创建一个List：</p><pre class="java">ArrayList&gt; listItem = new ArrayList&gt;();</pre><p>ArrayList需要使用到hashmap：</p><pre class="java">HashMap mapBase = new HashMap();</pre><p>HashMap用来存储一对数值，比如：</p><pre class="java">mapBase.put("lstItmDate", "2010 04 26");mapBase.put("lstItmWeek", "Monday");</pre><p>可以很明显的看出来，HashMap中的”lstItmDate”和”lstItmWeek”与SimpleAdapter中的对应。</p><p>把HashMap添加到ArrayList中，显示部分就完成了：</p><pre class="java">listItem.add(mapBase);</pre><p>所以，作为总结，一个ListView需要涉及如下几个部分：</p><ol><li>HashMap</li><li>ArrayList</li><li>SimpleAdapter</li><li>ListView</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hero拍的一些照片</title>
      <link href="/2010/04/26/some-pictures-shot-by-hero/"/>
      <url>/2010/04/26/some-pictures-shot-by-hero/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG0015.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG0015-200x300.jpg" alt="" title="IMAG0015"></a></p><p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG0023.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG0023-200x300.jpg" alt="" title="IMAG0023"></a></p><p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG0024.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG0024-200x300.jpg" alt="" title="IMAG0024"></a></p><p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG00251.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG00251-200x300.jpg" alt="" title="IMAG0025"></a></p><p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG0021.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG0021-200x300.jpg" alt="" title="IMAG0021"></a></p><p><a href="http://www.deskangel.com/images/wp/hero_pics/IMAG0062.jpg" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/hero_pics/IMAG0062-200x300.jpg" alt="" title="IMAG0062"></a></p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>滚动到TextView底部</title>
      <link href="/2010/04/22/scroll-to-bottom-of-textview/"/>
      <url>/2010/04/22/scroll-to-bottom-of-textview/</url>
      
        <content type="html"><![CDATA[<p>在Android，一个单独的TextView是无法滚动的，需要放在一个ScrollView中。ScrollView提供了一系列的函数，其中fullScroll用来实现home和end键的功能，也就是滚动到顶部和底部。</p><p>但是，如果在TextView的append后面马上调用fullScroll，会发现无法滚动到真正的底部，这是因为Android下很多（如果不是全部的话）函数都是基于消息的，用消息队列来保证同步，所以函数调用多数是异步操作的。当TextView调用了append会，并不等text显示出来，而是把text的添加到消息队列之后立刻返回，fullScroll被调用的时候，text可能还没有显示，自然无法滚动到正确的位置。</p><p>解决的方法其实也很简单，使用post：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> ScrollView svResult = (ScrollView) findViewById(R.id.svResult);</span><br><span class="line">svResult.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        svResult.fullScroll(ScrollView.FOCUS_DOWN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Formulas for DaCalc</title>
      <link href="/2010/04/20/formulas-for-dacalc/"/>
      <url>/2010/04/20/formulas-for-dacalc/</url>
      
        <content type="html"><![CDATA[<p>How to use the following formulas:</p><ol><li><p>In DaCalc, composing window, write the expression (red part) to the edit box and save with the name of the formula (black bold part).</p></li><li><p>Copy every expression (red part) to a file and saved the file with the name of the formula (black bold part) to /sdcard/DaCalc. Open DaCal, in Load window, click Import in the menu.<br>Minimal request DaCalc version: 1.2.0.0</p></li><li><p>Monthly mortgage:</p></li></ol><p><strong>monthly mortgage</strong>=<code>&lt;span style=&quot;color: #ff0000;&quot;&gt;principal*rate*(1+rate)^month/((1+rate)^month-1)&lt;/span&gt;</code><br>2.  Best sell price for a stock:<br><strong>sell price</strong>=<code>&lt;span style=&quot;color: #ff0000;&quot;&gt;profit/shares + badeprice * (1+rate)/(1-rate-tax)&lt;/span&gt;</code><br>3.  Body mass index:<br><strong>bmi</strong>=<span style="color: #ff0000;">weight / (height / 100) ^ 2</span></p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dacalc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use DaCalc</title>
      <link href="/2010/04/16/how-to-use-dacalc/"/>
      <url>/2010/04/16/how-to-use-dacalc/</url>
      
        <content type="html"><![CDATA[<p><strong>DaCalc</strong> is an formula calculator running on Android mobile system. It can be used to calculate like tips, tax and so on. In the following session, I will show you how to use <em>DaCalc</em> to calculate tips in your Android mobile phone, like Hero.</p><p>[caption id=”attachment_268” align=”alignright” width=”200” caption=”Figure 1 Main Window”]<a href="http://blog.deskangel.com/images/wp/snap20100416_171755.png"><img src="http://blog.deskangel.com/images/wp/snap20100416_171755-200x300.png" alt="Main Window" title="snap20100416_171755"></a>[/caption]</p><p><strong>Session 1</strong>, use the pre-defined function:</p><ol><li>After started, main window of <em>DaCalc</em> looks like figure 1.</li><li>Click the menu button on your phone, an option menu will pop-up.</li><li>Click the “<span style="color: #0000ff;">Load</span>“ menu item, it will switch to the “expression load” window. There is a default expression name tips.</li><li>Short click the function “<span style="color: #ff0000;">tips</span>“, <em>DaCalc</em> will switch to the main window after the function loaded. The expression for “<span style="color: #ff0000;">tips</span>“ is “<span style="color: #ff0000;">cost * 0.2</span>“. Variable “<span style="color: #ff0000;">cost</span>“ is added to the spinner.</li><li>Input value for the variable “<span style="color: #ff0000;">cost</span>“, then click “<span style="color: #0000ff;">=</span>“ on the panel to calculate the result.</li></ol><p><strong>Session 2</strong>, define your own function:</p><ol><li>Click the menu button on your phone when the main window is displaying.</li><li>Click the “<span style="color: #0000ff;">Edit</span>“ menu item, it will switch to the “<span style="color: #0000ff;">composing</span>“ window.</li><li>In put <span style="color: #ff0000;">cost * 0.2 / person</span>.</li><li>Click the “<span style="color: #0000ff;">Save</span>“ button. If you input an invalid expression, there will pop-up a text message. But the verifier is very week, so you should ensure that your input is a correct expression.</li><li>If the expression is correct, a dialog will pop-up. You must input a name for the function/expression, like “<span style="color: #ff0000;">tips-per</span>“.</li><li>Click “<span style="color: #0000ff;">Okay</span>“, the function will be saved to database. You can click “<span style="color: #0000ff;">Load</span>“ button to check.</li><li>Click “<span style="color: #0000ff;">Back</span>“ button to switch to the main window.</li><li>Now, click the “<span style="color: #0000ff;">Load</span>“ menu item and click on the “<span style="color: #ff0000;">tips-per</span>“ function to load.</li><li>Input a value for the variable “<span style="color: #ff0000;">cost</span>“, then press “<span style="color: #0000ff;">=</span>“, the spinner will swith to the next variable “<span style="color: #ff0000;">person</span>“.</li><li>Input a value for the variable “<span style="color: #ff0000;">person</span>“ to calculate the result.</li></ol><p><strong><em>If you encounter any problem when using DaCalc, please do not hasitate to send me a <a>email</a>, with your <span style="color: #ff0000;">expressions</span>.</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dacalc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>/etc/init.d/*</title>
      <link href="/2010/04/09/etcinit-d/"/>
      <url>/2010/04/09/etcinit-d/</url>
      
        <content type="html"><![CDATA[<p>今天因为刷Villain 5.2遇到点问题，apps2sd开启后无法启动，原因是<span style="color: #ff6600;">/system/sd</span>无法自动挂载，所以研究了一下。最后发现这个rom中，busybox的命令被映射到了<span style="color: #ff6600;">/system/xbin/bb</span>下面，但是该路径不在<span style="color: #ff6600;">$PATH</span>中，导致很多命令找不到，<span style="color: #ff6600;">/etc/init.d/*</span>下的脚本无法正确执行。</p><p>一开始以为只要在一个文件中添加</p><p><span style="color: #ff0000;">export PATH=$PATH:/system/xbin/bb</span></p><p>就可以了，但是实际上每个文件都是在独立的shell中运行，需要逐个添加。</p><p>最后，把修改好的文件传到<span style="color: #ff6600;">/system/etc/init.d/</span>下后，还需要运行</p><p><span style="color: #ff0000;">chmod 0755 /system/etc/init.d/*</span></p><p>我忘了这一步，结果浪费了一些时间。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> busybox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EditText在ListView中内容被清空的问题</title>
      <link href="/2010/03/31/edittext-empty-issue-in-listview/"/>
      <url>/2010/03/31/edittext-empty-issue-in-listview/</url>
      
        <content type="html"><![CDATA[<p>遇到这个问题是在设计一个Android程序的Ui的时候，当把EditText放在ListView中之后，就遇到了两个问题：</p><ol><li>点击EditText，虽然弹出了软键盘，但是没有立刻获得输入焦点</li><li>输入完成之后，按回车或是返回键退出软键盘的时候，EditText框中的输入会被清空<br>Google无果之后，只有自己研究，谁知这两个问题就花了我几个小时的测试。测试了Android v1.5~v2.1之后，发现原来这两个问题都和ListView的一个参数有关系，即只要没有把ListView的<span style="color: #ff0000;">android:layout_height</span>设置成<span style="color: #ff0000;">“fill_parent”</span>，就万事大吉。</li></ol><p>这个限制没有丝毫道理，应该是ListView的一个讨厌的bug。</p><p>但是等一下，ListView是一个scroll container，如果item的个数较多，出现了滚动条，会不会有问题？应该是没有问题，这完全不搭嘎嘛！可惜事实不是这样的。如何避免这个问题，还需要再行研究。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人开发者时代的回归</title>
      <link href="/2010/03/30/signle-developer-times-returned/"/>
      <url>/2010/03/30/signle-developer-times-returned/</url>
      
        <content type="html"><![CDATA[<p>iPhone和Android开创了一个新的时代，同时也是个人开发时代的回归。</p><p>在Windows刚刚流行的那个年月，一个点子两个人，三四台电脑就可以开发出一个传奇的软件。而现在在桌面平台上开发一个软件，一两个人已经无法创造什么奇迹了。 美工，代码，文档，推广，维护等等各个环节都需要专业的人员来处理才能有所成绩。即使那样，等来的也可能是失败。各式各样的软件，都有一到两个开源的免费的替代版本。竞争激烈而盈利途径匮乏，个人开发者在其上的生存空间被逐渐挤压！</p><p>以手机为主的个人移动平台上的开发，虽然已经起步很多年，但是直到Iphone出现之后，才引起开发者和厂商们的广泛注意。和桌面平台一样，赢得开发者才能赢得市场！Windows如果没有各式各样的开发者为它开发各式各样的应用，绝对不会有今天的成绩。而手机平台也是如此，哪个平台软件多，哪个平台就能胜出。</p><p>而手机平台的特性，比如较弱的整机性能，较短的电池导航时间，较小的屏幕尺寸以及尚未完全成熟的系统等等，都决定了无法在其上开发复杂的应该，至少现阶段还不行。这种现象，正是个人开发者所乐见的。</p><p>软件开发又回到了一两个人，一两台电脑，一两台手机就可以创造财富的时代了！</p>]]></content>
      
      
      <categories>
          
          <category> Critique </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在google map 4.1下使用纵横</title>
      <link href="/2010/03/23/zongheng-in-google-map-4-1/"/>
      <url>/2010/03/23/zongheng-in-google-map-4-1/</url>
      
        <content type="html"><![CDATA[<p>在Android上，google更新了地图的版本，功能在不停的增加。但是在国内，无论从Market安装那个版本，都无法正常的使用纵横。原因是google map会检测区域，并把数据库中的“<span style="color: #ff0000;">maps_enable_friend_finder</span>”字段改写成“<span style="color: #ff0000;">0</span>”。</p><p>网上提供了使用sqlite3修改该字段的方法，</p><blockquote><p>adb shell</p><h1 id="cd-data-data-com-android-providers-settings-databases"><a href="#cd-data-data-com-android-providers-settings-databases" class="headerlink" title="cd /data/data/com.android.providers.settings/databases"></a>cd /data/data/com.android.providers.settings/databases</h1><h1 id="sqlite3-settings-db"><a href="#sqlite3-settings-db" class="headerlink" title="sqlite3 settings.db"></a>sqlite3 settings.db</h1><p>sqlite&gt; select * from gservices where name = ‘maps_enable_friend_finder’;<br>如果没有结果返回执行:<br>sqlite&gt;INSERT INTO “gservices” (name,value) VALUES(‘maps_enable_friend_finder’,’1′);<br>否则执行:<br>sqlite&gt;UPDATE gservices SET value = ‘1’ WHERE name = ‘maps_enable_friend_finder’;<br>sqlite&gt; .quit<br>修改后虽然可以重新使用纵横，但是一段时间过后，又会被改回去。</p></blockquote><p>其实，google map检查区域并不是通过ip，原理应该和Market的检测是一样的。既然<a href="code.google.com/p/market-enabler/" title="Market Enabler">Market Enabler</a>可以通过伪装成其他的运营商，让国内的Android机上的Market可以看到包括收费软件在内的所有的程序，一样可以让google map显示出纵横的功能。</p><p>如果你的map上的纵横功能已经消失，那么启动Market Enabler之后并不会立刻就能够使用，需要一些时间<span style="color: #ff0000;">maps_enable_friend_finder</span>才能够被改回来。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在eclipse中添加一个library</title>
      <link href="/2010/03/17/add-lib-in-eclipse/"/>
      <url>/2010/03/17/add-lib-in-eclipse/</url>
      
        <content type="html"><![CDATA[<p>当我把一个Android工程目录从一台电脑拷贝到另一台电脑后，编译出来的程序提示找不到<span style="color: #ff0000;">com.admob.android.ads.AdView</span>这个类。</p><p>经过摸索，终于得出了在eclipse中添加一个library的正确流程。如下：</p><ol><li>选中project，右键选择Import-&gt;File System，选择文件，在Into folder栏中输入存放文件的目录名称，如project name\libs</li><li>选中project，右键选择Build path-&gt;Configure Build Path…-&gt;Add External JARs…，选择要导入的library文件，点击Okay即可</li><li>如果library有更新，可以打开Configure Build Path…属性对话框，选中需要更新的library，点击Migrate JAR File…，在弹出的对话框中选择新的版本即可<br>我使用的是3.52版，也许不同的版本会有不同的方法。这些都是一些基本的操作，仅供入门参考。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Opera mini 5 beta 2 for Android</title>
      <link href="/2010/03/11/opera-mini-5-beta-2-for-android/"/>
      <url>/2010/03/11/opera-mini-5-beta-2-for-android/</url>
      
        <content type="html"><![CDATA[<p>Opera终于放出了Android版本的<a href="http://m.opera.com/cn/next/en/Opera_Mini_5_Android_beta.apk?act=dl&amp;tag=mini5android" target="_blank" rel="noopener" title="Opera mini 5">Opera mini 5</a>。下载后简单测试了一下，发现了一些问题：</p><p>[caption id=”attachment_230” align=”alignright” width=”200” caption=”opera:config”]<a href="http://blog.deskangel.com/images/wp/snap20100311_214429.png"><img src="http://blog.deskangel.com/images/wp/snap20100311_214429-200x300.png" alt="Configuration" title="opera:config"></a>[/caption]</p><ol><li>中英文混合排版比较乱</li><li><a href="http://www.kong.net下滚动不能" target="_blank" rel="noopener">http://www.kong.net下滚动不能</a></li><li>“border-bottom: 1px dotted”，看不成dotted的效果</li><li>非mobile view 模式下，中文会显示成□□，放大后正常</li><li>opera:about中显示version 10.00<br>同时也发现它支持在地址栏输入opera:config进行配置，配置页面load完之后，地址会变为config:，如右图。</li></ol><p>因为众所周知的原因，下的是中国服务器版本，访问国内网站速度非常快，但是访问国外的网站速度就慢了。</p><p>与UCWeb浏览器相比较，缩放、网址输入等等细节都要较ucweb方便。除了访问中文网站排版和滚动有问题外，其他都正常。访问英文网站暂时没有发现问题。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Android资源文件名</title>
      <link href="/2010/03/11/resource-name-in-android/"/>
      <url>/2010/03/11/resource-name-in-android/</url>
      
        <content type="html"><![CDATA[<p>今天在eclipse中创建了一个新的工程，在layout中添加了一个FileList.xml的文件，结果就报错了：</p><p><span style="color: #ff0000;">res\layout\Filelist.xml: Invalid file name: must contain only [a-z0-9_.]</span></p><p>这意思是只支持小写加数字，其他一概不认。唉，只有照做了。</p><p>代码文件倒是没有这样的限制。 大概的原因应该是代码文件会被编译，而资源文件只是附在包中没有改变。但其实，也不过是在读取时做一个大小写转换的事情啊！</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google market alternative</title>
      <link href="/2010/03/10/google-market-alternative/"/>
      <url>/2010/03/10/google-market-alternative/</url>
      
        <content type="html"><![CDATA[<p>Google market is not supported in China and it is hard to publish android applications to it from China mainland, even if your application is a free version.</p><p>I did some search and find some alternative sites which accept android applications.:</p><p>SlideME (<a href="https://slideme.org/" target="_blank" rel="noopener" title="https://slideme.org/">https://slideme.org/</a> ), I uploaded my first android application <em>Days and date</em> to it yesterday.</p><p>MOBANGO (<a href="http://www.mobango.com/" target="_blank" rel="noopener" title="http://www.mobango.com/">http://www.mobango.com/</a>), it more like a social community than an application download site.</p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十进制整数到字符串的转换</title>
      <link href="/2010/03/05/convert-dec-num-to-string/"/>
      <url>/2010/03/05/convert-dec-num-to-string/</url>
      
        <content type="html"><![CDATA[<p>今天被问到了这个问题，一下子卡壳，没有回答上来。</p><p>十进制比如12345如何转换成字符串？基本思路是要把每一位整数单独提取出来。</p><p><span style="color: #ff0000;">一万二千三百四十五</span>，如何提取每一位？其实也简单：</p><p><code>12345 / 10000 = 1;12345 % 10000 = 2345;</code></p><p>取出的模再来一遍：</p><p><code>2345 / 1000 = 2;2345 % 1000 = 345;</code></p><p>以此类推。</p><p><em>这算法在我自己的函数库中都有过实现，关键时刻却不记得了。老了吗？sigh~</em></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Days and Date</title>
      <link href="/2010/03/02/days-and-date/"/>
      <url>/2010/03/02/days-and-date/</url>
      
        <content type="html"><![CDATA[<p><a href="http://blog.deskangel.com/images/wp/snap20100302_172708.png"><img src="http://blog.deskangel.com/images/wp/snap20100302_172708.png" alt="" title="snap20100302_172708"></a><br>DaysandDate是我第一个Android程序，嗯，也是我第一个java程序。好吧，我承认这个界面有点简陋，也许等我找到一个美工之后才有可能改善。（如果你有好的设计并愿意合作，可以给我email: william.xue AT gmail.com）</p><p>这个程序的功能是使用修正儒略日在两个日期和天数之间进行换算。直白一点就是计算：</p><ol><li>某个两个日期之间间隔的天数</li><li>某个日期加上或减去若干天之后是哪一天</li></ol><p>计算完后会显示这两个日期所对应的星期，点击等于号后面的按钮可以把整个计算表达式保持到历史记录里面。之所以没有自动保持，是因为改变任意一个数值程序都会进行计算并更新，没有必要保存下来。</p><p>功能比较简单，但是比较使用，可以用来计算还有多少天女友过生日，与女友认识了多少天等等。</p><p><a href="http://www.deskangel.com/download/DaysAndDate.apk" target="_blank" rel="noopener">点此下载</a> (v2.1，新版本可以在Android Market找到)</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daysanddate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeskAngel convert path text to paste-able object</title>
      <link href="/2010/02/25/deskangel-convert-path-text-to-paste-able-object/"/>
      <url>/2010/02/25/deskangel-convert-path-text-to-paste-able-object/</url>
      
        <content type="html"><![CDATA[<p>From the DeskAngel version v2.2.2.66, two new features are introduced. You can see two new menu items in the shortcut menu:</p><ol><li><span style="color: #ff0000;">Path to pastable object</span></li><li><span style="color: #ff0000;">Pastable object to path</span><br>Use cases:<br>If you copied a path from somewhere, e.g. log file, then click “Path to pastable object”, you can paste it just as you copied the file itself.</li></ol><p>If you copied a file but you want to get the full path of it, you can click “Pastable object to path”, then when you do paste in a text edit, you get the full path.</p><p>Both features are very useful sometimes. Hope you will like them and any feedback is welcome.</p><p>You can get the latest version from  <a href="http://www.deskangel.com/deskangel/index?target=download">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deskangel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows命令行窗口与Unicode</title>
      <link href="/2010/02/23/windows-cmd-and-unicode/"/>
      <url>/2010/02/23/windows-cmd-and-unicode/</url>
      
        <content type="html"><![CDATA[<p>一.</p><p>还记得刚开始学习C语言的时候，最早接触的 runtime 函数，就是 printf，这应该是一个最基础的函数了。<br>但是这样的一个函数，即使在VC2005和Windows 7下面，对输出Unicode字符这样的任务，依然会给程序员带了麻烦。</p><p>下面的代码是一个Unicode版本的测试程序：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">wchar_t</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    wprintf(<span class="string">L"测试"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看着完全没有问题，但是在console中就是没有任何的输出。</p><p>二.</p><p>单步进入<code>wprintf</code>，发现如下代码：<br><code>retval = _woutput_l(stdout,format,NULL,arglist);</code><br>其中，宏<code>stdout</code>为标准输出，定义如下：<br><code>#define stdout (&amp;__iob_func()[1])</code><br><code>__iob_func</code>的代码如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* These functions are for enabling STATIC_CPPLIB functionality */</span></span><br><span class="line">_CRTIMP FILE * __cdecl __iob_func(<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _iob;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>_iob是一个FILE类型的数组，第0个元素为stdin，第1个元素为stdout，第3个为stderr。<br>而FILE类型是一个结构体：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">iobuf</span> &#123;</span></span><br><span class="line">        <span class="keyword">char</span> *_ptr;</span><br><span class="line">        <span class="keyword">int</span>   _cnt;</span><br><span class="line">        <span class="keyword">char</span> *_base;</span><br><span class="line">        <span class="keyword">int</span>   _flag;</span><br><span class="line">        <span class="keyword">int</span>   _file;</span><br><span class="line">        <span class="keyword">int</span>   _charbuf;</span><br><span class="line">        <span class="keyword">int</span>   _bufsiz;</span><br><span class="line">        <span class="keyword">char</span> *_tmpfname;</span><br><span class="line">        &#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">iobuf</span> <span class="title">FILE</span>;</span></span><br></pre></td></tr></table></figure><p>_iob在调试器中的信息 （点击查看原图）:<br><a href="http://www.deskangel.com/images/wp/sc_v22281_13.png" target="_blank" rel="noopener"><img src="http://www.deskangel.com/images/wp/sc_v22281_13.png" alt="information of _iob" title="_iob在调试器中的信息"></a></p><p>从图中可以看出，std本身就不支持UNICODE。</p><p>三.</p><p>我们还可以更深入一点，进入<code>_woutput_l</code>函数，会发现该函数调用<br><code>WRITE_CHAR(ch, &amp;charsout);</code> 宏逐个输出字符。</p><p>该宏的定义和<code>_woutput_l</code>在同一个文件（output.c）中找到：<br><code>#define WRITE_CHAR(ch, pnw)         write_char(ch, stream, pnw)</code><br>其中ch为第一个字符，“测”；stream为<code>_woutput_l</code>的第一个参数，就是stdout。</p><p>四.</p><p><code>write_char</code>的代码很简单：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">LOCAL(<span class="keyword">void</span>) write_char (</span><br><span class="line">    _TCHAR ch,</span><br><span class="line">    FILE *f,</span><br><span class="line">    <span class="keyword">int</span> *pnumwritten</span><br><span class="line">    )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( (f-&gt;_flag &amp; _IOSTRG) &amp;&amp; f-&gt;_base == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ++(*pnumwritten);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _UNICODE</span></span><br><span class="line">    <span class="keyword">if</span> (_putwc_nolock(ch, f) == WEOF)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>  <span class="comment">/* _UNICODE */</span></span></span><br><span class="line">    <span class="keyword">if</span> (_putc_nolock(ch, f) == EOF)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* _UNICODE */</span></span></span><br><span class="line">        *pnumwritten = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ++(*pnumwritten);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>五.</p><p>进入<code>_fputwc_nolock</code>（即<code>_putwc_nolock</code>）。该函数的声明为：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">wint_t</span> __cdecl _fputwc_nolock (</span><br><span class="line">        <span class="keyword">wchar_t</span> ch,</span><br><span class="line">        FILE *str</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><p>函数中对str有三个判断，</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (_textmode_safe(_fileno(str)) == __IOINFO_TM_UTF16LE)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (_textmode_safe(_fileno(str)) == __IOINFO_TM_UTF8)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((_osfile_safe(_fileno(str)) &amp; FTEXT))</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一第二个判断很明显，判断目标文件是否为UTF16 little endian编码和UTF8编码。<br>对stdout，这里会进入第三个判断，其中FTEXT表示文件句柄为文本模式。<br>在该条件下，函数接着调用<code>wctomb_s</code>:<br><code>wctomb_s(&amp;size, mbc, MB_LEN_MAX, ch)</code><br>做编码转换，即试图把wide char的ch转换为multi-byte的mbc。</p><p>六.</p><p><code>wctomb_s</code>调用<code>_wctomb_s_l</code>，仅仅把locale参数设为NULL：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> <span class="function"><span class="keyword">errno_t</span> __cdecl <span class="title">wctomb_s</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> *pRetValue,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">char</span> *dst,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">size_t</span> sizeInBytes,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">wchar_t</span> wchar</span></span></span><br><span class="line"><span class="function"><span class="params">        )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _wctomb_s_l(pRetValue, dst, sizeInBytes, wchar, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>七.</p><p><code>_wctomb_s_l</code>函数是<code>wctomb_s</code>的locale版，根据locale做不同的工作。声明如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> <span class="keyword">int</span> __cdecl _wctomb_s_l (</span><br><span class="line">        <span class="keyword">int</span> *pRetValue,</span><br><span class="line">        <span class="keyword">char</span> *dst,</span><br><span class="line">        <span class="keyword">size_t</span> sizeInBytes,</span><br><span class="line">        <span class="keyword">wchar_t</span> wchar,</span><br><span class="line">        <span class="keyword">_locale_t</span> plocinfo</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><p>函数对locale有一个判断，</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( _loc_update.GetLocaleT()-&gt;locinfo-&gt;lc_handle[LC_CTYPE] == _CLOCALEHANDLE )</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> ( wchar &gt; <span class="number">255</span> )  <span class="comment">/* validate high byte */</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dst != <span class="literal">NULL</span> &amp;&amp; sizeInBytes &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">memset</span>(dst, <span class="number">0</span>, sizeInBytes);</span><br><span class="line">            &#125;</span><br><span class="line">            errno = EILSEQ;</span><br><span class="line">            <span class="keyword">return</span> errno;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dst != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            _VALIDATE_RETURN_ERRCODE(sizeInBytes &gt; <span class="number">0</span>, ERANGE);</span><br><span class="line">            *dst = (<span class="keyword">char</span>) wchar;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pRetValue != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *pRetValue = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果locale是C locale的话，那么当wchar大于255，即超出ANSI范围时，不做转换，直接返回；<br>小于255，即为ANSI字符时，则转换为char类型。</p><p>如果不是c locale，则调用<code>WideCharToMultiByte</code>：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( ((<span class="built_in">size</span> = WideCharToMultiByte( _loc_update.GetLocaleT()-&gt;locinfo-&gt;lc_codepage,</span><br><span class="line">                                   <span class="number">0</span>,</span><br><span class="line">                                   &amp;wchar,</span><br><span class="line">                                   <span class="number">1</span>,</span><br><span class="line">                                   dst,</span><br><span class="line">                                   (<span class="keyword">int</span>)sizeInBytes,</span><br><span class="line">                                   <span class="literal">NULL</span>,</span><br><span class="line">                                   &amp;defused) ) == <span class="number">0</span>) ||</span><br><span class="line">     (defused) )</span><br></pre></td></tr></table></figure><p>测试代码没有设置locale，所以判断wchar，自然大于255，函数直接返回。层层返回，没有调用任何实际的输出。</p><p>八.</p><p>稍稍修改一下测试程序：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wmain</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">wchar_t</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    wprintf(<span class="string">L"%s"</span>, <span class="string">L"测试"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的是两个问号。单步跟踪，我们可以发现，在<code>_woutput_l</code>中，没有直接调用<code>WRITE_CHAR</code>，而是调用<code>WRITE_STRING</code>：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">WRITE_STRING(<span class="built_in">text</span>.wz, textlen, &amp;charsout);</span><br><span class="line"></span><br><span class="line">WRITE_STRING的代码：</span><br><span class="line">LOCAL(<span class="keyword">void</span>) write_string (</span><br><span class="line">    _TCHAR *<span class="built_in">string</span>,</span><br><span class="line">    <span class="keyword">int</span> len,</span><br><span class="line">    FILE *f,</span><br><span class="line">    <span class="keyword">int</span> *pnumwritten</span><br><span class="line">    )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ( (f-&gt;_flag &amp; _IOSTRG) &amp;&amp; f-&gt;_base == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        (*pnumwritten) += len;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (len-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        write_char(*<span class="built_in">string</span>++, f, pnumwritten);</span><br><span class="line">        <span class="keyword">if</span> (*pnumwritten == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (errno == EILSEQ)</span><br><span class="line">                write_char(_T(<span class="string">'?'</span>), f, pnumwritten);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在write_char写入Unicode字符失败后，就会写入一个”?”，所以输出的会是问号。</p><p>九.</p><p>如何输出Unicode呢？有两个方法：</p><ol><li><p>设置正确的locale。<br>我们看到整个过程最后会调用<code>WideCharToMultiByte</code>把Unicode根据locale转换成multiple byte。<br>这可以解决一点问题，但不完美。除了绕了个圈，又把wide char转换成multiple byte之外，还无法解决多种语言混合输出的问题。<br>比如，无法同时输出俄文和中文。</p></li><li><p>使用<code>WriteConsole</code>。<br>如下代码可以完美的解决Unicode的问题：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">wchar_t</span> szText[] = <span class="string">L"测试"</span>;</span><br><span class="line"></span><br><span class="line">HANDLE hStdOutput = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">WriteConsole(hStdOutput, szText, (DWORD)wcslen(szText), <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unicode </tag>
            
            <tag> console </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何设计类</title>
      <link href="/2010/02/21/how-to-design-class/"/>
      <url>/2010/02/21/how-to-design-class/</url>
      
        <content type="html"><![CDATA[<p>一.</p><p>类是面向对象的基础。面向对象有三大特点：封装，继承和多态。</p><p>我们学习面向对象，不可回避几部经典，比如C++编程，编程思想等。</p><p>无论Java还是C++，只要讲解面向对象，都会有一些例子用来说明什么是封装，继承和多态。</p><p>大部分都会用shape来举例。</p><p>shape作为抽象的基类，circle，square和triangle继承自shape。shape会有个draw的函数，多半还是个虚函数。</p><p>这样的例子对初学者来说也是简单易懂的，很能说明白面向对象是什么。</p><p>但这却是一个非常糟糕的开端，就像小时候父母告诉你是从胳肢窝里出来的一样，从一开始就给了你一个错误的概念。</p><p>二.</p><p>面向对象的产生，不仅仅是为了解决问题，还应该要站在待解决问题的角度来描述问题，从而让问题本身更容易被理解和解决。</p><p>换个说法，就是我们应该如实的描述问题，不夸张不过分。</p><p>什么是夸张？你从胳肢窝里出来就是夸张。shape有个draw的函数，也是夸张。你见过一个会draw自己的shape？</p><p>有人认为这无伤大雅，把draw放在shape中，能更简洁的解决问题。</p><p>但我们应该从一开始就建立一个正确的概念。</p><p>三.</p><p>然而把draw放在shape中并不能简洁的解决问题。</p><p>我们需要在真实的环境中使用这些类，比如Microsoft Windows。我们使用GDI来画这些shape。我们需要一个DC。</p><p>怎么表示？在shape中聚合一个HDC，还是把HDC作为参数传递给draw？（应该没有人会让shape从DC继承吧？）</p><p>我们还需要一个画笔，来表达这个shape的其他属性，比如颜色，粗细等。</p><p>我们还需要知道位置，这个shape在DC上的位置。</p><p>问题开始变得复杂了，shape类以及它的子类与GDI对象耦合在一起。</p><p>四.</p><p>shape类以及它的子类本应该是独立的。</p><p>cycle在在Windows下是cycle，在Linux下也应该是cycle，不管有没有GDI对象。</p><p>问题出在什么地方？</p><p>在这个例子中显而易见：只有在真正开始draw的时候，才需要GDI对象，而shape本身，并不能做draw这件事情。</p><p>把一件不能做的事情，或是不适合做的事情硬塞给对象来实现，迟早是会出问题的。</p><p>最糟糕的不是我们发现不了问题，而恰恰是问题迟早会被发现。</p><p>五.</p><p>如何从一开始就避免这样的情况，而不是在第二次的时候才做正确？</p><p>我们如何才能够设计出一个正确的类？或者更确切的说，如何才能够正确的设计出一个类？</p><p>从一开始就如实的描述问题，不夸张不过分。不给它不拥有的属性，更不给它不应该有的父类。</p><p>这是最基本的设计原则。</p><p>六.</p><p>对于设计现实中不存在对应的类，同样需要如实描述——如实描述想法，设计。不要想的是孙悟空，出来的却是二郎神。</p><p>计算机只识别0和1，这是个讲究精确的行业。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SymbolLink for Speedcommander</title>
      <link href="/2010/02/09/symbollink-for-speedcommander/"/>
      <url>/2010/02/09/symbollink-for-speedcommander/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.speedproject.de/enu/speedcommander/" target="_blank" rel="noopener">Speedcommander</a> is a dual panel file manager.</p><p>SymbolLink is a small win32 application to make <a href="http://www.speedproject.de/enu/speedcommander/" target="_blank" rel="noopener">Speedcommander</a> creating symbol link easier for vista and win7.<br>Usage:<br><code>&lt;span style=&quot;color: #ff6600;&quot;&gt;symbollink [source] link&lt;/span&gt;</code><br>If the ‘source’ is absent, it will delete the link.</p><p>How to add into Speedcommander:</p><ol><li>New a custom tool (User tool) in Speedcommander for SymbolLink.exe</li><li>Set ‘$(ActSel) $(InactDir)’ as its parameter</li><li>Select a folder or a file in the active panel</li><li>Run the  tool, it will create a symbol link for the selected one in the inactive panel</li><li>Select a symbol link in the active panel and run the tool, it will remove the link.<br>Download: <a href="http://www.deskangel.com/download/SymbolLink.7z" target="_blank" rel="noopener">SymbolLink</a>, <a href="http://www.deskangel.com/download/symbollink.cpp" target="_blank" rel="noopener">source code</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> speedcommander </tag>
            
            <tag> symbolink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Various Memory Terms</title>
      <link href="/2010/02/09/various-memory-terms/"/>
      <url>/2010/02/09/various-memory-terms/</url>
      
        <content type="html"><![CDATA[<p><strong>1. terms for memory</strong></p><p><span style="color: #ff6600;">physical memory</span>: it is physical object which costed your money to<br>install it into your PC. the capacity depends on what you purchased.</p><p><span style="color: #ff6600;">virtual memory</span>: it is not physical. it is not a file in operating<br>system. it only exists in logic. it is a conception. the size, a.k.a.,<br>address space, depends on your cpu architecture (x86, x64 or i64, etc.).</p><p><span style="color: #ff6600;">page file</span>: it is not physical, but it is a file in operating<br>system. the size can be changed by a system wide setting.</p><p>(some Chinese engineers confuse ‘virtual memory’ with ‘page file’ because of the translation. if you<br>discuss with them, you’d better make sure what you are discussing about.)</p><p><strong>2. the relationships</strong></p><p>when a process is launching, it needs to allocate memories. it allocates memories<br>from its own address space, a.k.a. virtual memory, regardless which<br>function (new, VirtualAlloc, etc.) was called.</p><p>when cpu executes a process and want to access a memory block which<br>has been allocated from virtual memory, it needs the memory block in<br>physical memory. if there is no free space for the block in physical<br>memory, os will move some unused blocks from physical memory to page<br>file. so, os will do those things:<br>a.) mapping virtual memory to physical memory<br>b.) move unused memory block from physical memory to page file/files<br>c.) move needed memory block from page file/files to physical memory<br><strong>3. terms for virtual memory</strong><br>1.) <span style="color: #ff6600;">page</span><br>we used ‘page’ in page file, but there is another term ‘page’ related<br>to virtual memory. while allocating from virtual memory, the minimum<br>unit is a page. a page has three states:</p><p>a.) free<br>b.) reserved<br>c.) committed</p><p>free, this is easy to understand, the page hasn’t been allocated.<br>reserved, the page has been allocated, but has been committed.<br>committed, the page has been mapped into physical memory.</p><p>2.) <span style="color: #ff6600;">working set</span><br>working set is a set, a container. it collects a set of pages in the<br>virtual memory of a process, and the pages currently resident in<br>physical memory.<br>working set has a minimum size and a maximum size, which can be set by<br>SetProcessWorkingSetSize.</p><p><em>Above is a simple introduction to the terms used to refer memory. For<br>further study, please refer to msdn.</em></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> memory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aero effect on win7 x64 with dual view</title>
      <link href="/2010/01/26/aero-effect-on-win7-x64-with-dual-view/"/>
      <url>/2010/01/26/aero-effect-on-win7-x64-with-dual-view/</url>
      
        <content type="html"><![CDATA[<p>Aero has been disabled for win7 x64 since it was installed on my pc. The graphic card is Nvidia Geforce 7300. I updated the driver to the latest one, but still no lucky.<br>There is only one error in windows event log:</p><blockquote><p>The Desktop Window Manager has encountered a fatal error (0x8007000e)</p></blockquote><p>The error indicates ‘out of memory’. This make sense. I connected two monitors to the graphic card and enabled dual view by setting Multiple displays to ‘Extend these displays’ in display settings. And the ‘dual view’ consumes more video memory. (<a href="http://msdn.microsoft.com/en-us/library/ms800219.aspx" target="_blank" rel="noopener">http://msdn.microsoft.com/en-us/library/ms800219.aspx</a>)</p><p>After disabled the second monitor, Aero effect is back.</p><p><del>~</del><br>Update:<br>After install a new graphic card, GT240, Aero effect can be enabled under ‘dual view’ mode now.</p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dual view </tag>
            
            <tag> win7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭州，又一个斑马线附近</title>
      <link href="/2009/10/16/hangzhou-crash-again/"/>
      <url>/2009/10/16/hangzhou-crash-again/</url>
      
        <content type="html"><![CDATA[<p>晚上21：10分，在公交车上经过文三路丰潭路附近，一辆宝马停在路中间，前挡风玻璃布满裂纹，离车头半米左右，一辆公用自行车横倒在地，严重扭曲。前方两米左右，人行道的油漆在璀璨的灯光下泛着白光，嘲笑对生命的漠视，抑或，无所畏惧！</p><div align="left"></div><p>（今天得知，一辆当时停在对面奥迪为肇事车辆，宝马前挡风的裂痕为自行车落下所砸。）</p>]]></content>
      
      
      <categories>
          
          <category> News </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[psp]极品飞车：变速</title>
      <link href="/2009/09/24/need-for-speed-shift/"/>
      <url>/2009/09/24/need-for-speed-shift/</url>
      
        <content type="html"><![CDATA[<p>在众多psp迷期待GT的时候，”变速”出现了。</p><p>与游戏的容量相比，NFS-shift的可玩性却走了另一个极端。或许EA想借此告诉大家psp在其心目中的位置，同时也又一次向公众证明“盛名之下，其实难副“的道理。纵观这几年NFS这一游戏，不由得人猜测EA是欲图把这一道理背书成真理。这八个中文字，或许应该装裱一下贴在他们CEO的办公室，这样不用自己讲什么，来访者也会不住点头。</p><p>断断续续玩了这个游戏几天，实在无法再坚持下去—也没有坚持的理由。不停的比赛、比赛、比赛，这已经让人感到乏味，还不得不忍受别扭的控制键，还不得不忍受每次重新开始时漫长的loading——从程序员的角度看，这实在是一个态度问题。</p><p>缺乏对游戏的控制，也缺乏对车辆的控制，在游戏中，你仅仅只是一个让车开动的工具：控制按键仅仅设置了两套，而且无法更改；车的部件自己会升级，而且升级的顺序无法变更；挑战赛第二部分必须要用挑战者的车，哪怕你的车库里已经有你更熟悉、更高级的车辆；进入游戏你就只能比赛，想逛大街？门都没有！你的任务就是不停的比赛、比赛、比赛，至死方休——你可以对车的外壳图图画画，而这看起来，更像是施舍。</p><p>总之，这是一个毫无乐趣的游戏，任何一个玩家都不应该再在这上面浪费时间。</p>]]></content>
      
      
      <categories>
          
          <category> Critique </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
            <tag> psp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows installer pops up option dialog</title>
      <link href="/2009/09/16/windows-installer-pops-up-option-dialog/"/>
      <url>/2009/09/16/windows-installer-pops-up-option-dialog/</url>
      
        <content type="html"><![CDATA[<p>When I was trying to install HTC sync in my windows xp sp3 system, the windows installer always popped up an dialog with following content inside:</p><blockquote><p>Windows ® Installer. V 4.5.6001.22159</p><p>msiexec /Option  [Optional Parameter]</p><p>Install Options<br>Installs or configures a product<br>/a<br>Administrative install - Installs a product on the network<br>/j<u><br>[/t<br>] [/g ]<br>Advertises a product - m to all users, u to current user</p><p>… …<br></u><br>[caption id=”attachment_120” align=”alignright” width=”150” caption=”windows installer options dialog”]<a href="http://blog.deskangel.com/?attachment_id=120"><img src="http://blog.deskangel.com/images/wp/sc_v22127_8-150x150.png" alt="windows installer options dialog" title="sc_v22127_8"></a>[/caption]</p></blockquote><p>Following steps regarding how to find the issue and how to fix it.</p><ol><li>run procexp</li><li>run the installer</li><li>after the dialog popped up, check the procexp and get the command line string, it is something like</li></ol><blockquote><p>MSIEXEC.EXE /i “C:\WINDOWS\Downloaded Installations{5B9EDFAD-5CFC-4B5B-938F-346D95FDE2E3}\HTC PC Suite.msi” /l*v+ B:\Local Settings\Temp_HTC_PCSuite.log TRANSFORMS=”B:\Local Settings\Temp{23B8F894-E5E8-4F0E-9932-C66B832DCDB3}\1033.MST” SETUPEXEDIR=”J:\download\software”</p></blockquote><ol start="4"><li>check all of the paths in the string and make backup copy for every one.</li><li>delete the parameters one by one to check which parameter causes the problem<br>6 fix it</li></ol><p>In the above command line, there is a space in the log path but it is not quoted. Modified the environment variable and run the installer again, the issue was gone.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 9.04 安装ibus输入法</title>
      <link href="/2009/09/15/ubuntu-9-04-install-ibus-input-method/"/>
      <url>/2009/09/15/ubuntu-9-04-install-ibus-input-method/</url>
      
        <content type="html"><![CDATA[<ol><li><p>按照<a href="https://launchpad.net/~ibus-dev/+archive/ppa的指南，添加source与key。" target="_blank" rel="noopener">https://launchpad.net/~ibus-dev/+archive/ppa的指南，添加source与key。</a></p></li><li><p>选择ibus和ibus-pinyin安装:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ibus ibus-gtk ibus-pinyin</span><br></pre></td></tr></table></figure></li><li><p>运行<code>im-switch -v -s ibus</code>，设置使用ibus。如果运行 <code>sudo im-switch -v -s ibus</code>，可能会报找不到ibus之类的错误</p></li><li><p>在<code>~/.profile</code>中添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=ibus</span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=xim</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=xim</span><br><span class="line">ibus-daemon -d -x -r</span><br></pre></td></tr></table></figure></li><li><p>注销，重新登录。</p></li><li><p>在ibus的<code>Preferences-&gt;Input Methods</code>中添加中文输入法。</p></li></ol><p>最重要的是第四步，我使用了该配置后，在英文环境下，opera中都可以输入中文。</p><p>如果在英文环境下无法输入中文，可以在<code>~/.profile</code>文件中添加：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LC_CTYPE=<span class="string">"en_US.UTF-8"</span></span><br><span class="line"><span class="built_in">export</span> LANG=<span class="string">"zh_CN.UTF-8"</span></span><br></pre></td></tr></table></figure><p>待可以输入后再删除。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> ibus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mainpage of DeskAngel.com has been constructed</title>
      <link href="/2009/07/21/mainpage-of-deskangel-com-has-been-constructed/"/>
      <url>/2009/07/21/mainpage-of-deskangel-com-has-been-constructed/</url>
      
        <content type="html"><![CDATA[<p>After <a href="http://www.deskangel.com" target="_blank" rel="noopener">deskangel.com</a> was setup, the mainpage had been absent for a long time and a simply redirecting to .\deskange\index.html instruction was added in the root index.html.</p><p>Now, a main page had been setup just now. Although it is simple, the simpleness is what we are looking for!</p><p>Pages for <a href="http://www.deskangel.com/deskangel" target="_blank" rel="noopener">deskange</a>, <a href="http://wsizer.deskangel.com" target="_blank" rel="noopener">wsizer</a> and <a href="http://oolauncher.deskangel.com" target="_blank" rel="noopener">oolauncher</a> is already there, and pages for others (minihex, minirun and capslock) will be accessible some days later.</p><p>I hop you will love the site and love the softwares.</p>]]></content>
      
      
      <categories>
          
          <category> News </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[PSP] 白发魔女两个要点</title>
      <link href="/2009/06/25/two-points-of-bai-fa-mo-nv/"/>
      <url>/2009/06/25/two-points-of-bai-fa-mo-nv/</url>
      
        <content type="html"><![CDATA[<p>刚刚在psp上通关《白发魔女》，发现网上的攻略都没有提，但是有很多人都在问的两个问题。<br><strong>1. 在“塔司村”没有触发村长提及吟游诗人弹竖琴的吐鲁巴的事，也找不到吟游诗人弹竖琴的吐鲁巴。</strong><br>这时需要返回“达斯城”，在城堡的后面找到两个小孩，之后再去“塔司村”和村长对话，即可触发剧情。</p><p><strong>2. 在最后依莎贝尔塔屋顶无路可走。</strong><br>这时需要返回塔的入口，先走右边的楼梯，打开通往中庭的大门。<br>然后回到第七层，把第七层的所有的怪都杀掉之后再进入屋顶，即可发现通路了。</p><p>这款游戏，虽然战斗系统比较差，但是考虑到它的发布时间以及作为卡卡布三部曲的第一部，也不失为一款优秀的游戏。</p>]]></content>
      
      
      <categories>
          
          <category> Critique </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
            <tag> psp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oolauncher is online!</title>
      <link href="/2009/06/25/oolauncher-is-online/"/>
      <url>/2009/06/25/oolauncher-is-online/</url>
      
        <content type="html"><![CDATA[<p>Oolauncher, launch applications one by one, is ready for downloading now!</p><p>Oolauncher is an application launching management. It retrieve auto run applications from registry and start folders from following places:<br><code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunHKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run%ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\StartUp%APPDATA%\Microsoft\Windows\Start Menu\Programs\StartUp</code></p><p>Besides the starting order, it also offers options to set priority class, working folder, launching style and window style.<br><img src="http://oolauncher.deskangel.com/img/oolauncher.png" alt="Oolanucher"></p><p>Oolauncher is still in developing. If you like it and want to donate to support the development, you can click <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=6198508" target="_blank" rel="noopener">here (paypal)</a>.</p><p><span style="color: #ff0000;">Please feel free to let me know your suggestion and advices.</span></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ooLauncher </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Taskbar menu popped up on your icon?</title>
      <link href="/2009/06/05/taskbar-menu-popped-up-on-your-icon/"/>
      <url>/2009/06/05/taskbar-menu-popped-up-on-your-icon/</url>
      
        <content type="html"><![CDATA[<p>You created an icon in system notification area, and want it to responding your mouse click.Usually, you want your application’s menu can be popped up after you clicked on it, generally, right clicked on it.</p><p>According to MSDN, you wrote down following codes,</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">   SetForegroundWindow(hDlg);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Display the menu</span></span><br><span class="line">   TrackPopupMenu(   hSubMenu,</span><br><span class="line">                     TPM_RIGHTBUTTON,</span><br><span class="line">                     pt.x,</span><br><span class="line">                     pt.y,</span><br><span class="line">                     <span class="number">0</span>,</span><br><span class="line">                     hDlg,</span><br><span class="line">                     <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">   PostMessage(hDlg, WM_NULL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Right, it works. But why you got taskbar menu popping up again and again after your clicked on your own icon? What’s wrong with your code? Is that a bug of Windows shell itself? You can think so, but you still need a work-around.</p><p>Very fortunately, the key is very very simple. You only need change <code>WM_RBUTTONDOWN</code> to <code>WM_RBUTTONUP</code>.</p><p>(If your application stuck in <code>WM_RBUTTONDOWN</code>, complain it to Microsoft.)</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
            <tag> taskbar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Wsizer to rearrange the icons on taskbar</title>
      <link href="/2009/03/31/how-to-use-wsizer-to-rearrange-the-icons-on-taskbar/"/>
      <url>/2009/03/31/how-to-use-wsizer-to-rearrange-the-icons-on-taskbar/</url>
      
        <content type="html"><![CDATA[<p>It is a little hard to arrange the icons position of applications on taskbar. The icon of application created earlier will be put in left than the later ones. Without 3rd party tools, you can not change the position unless you close the application and reopen it.</p><p>Wsizer is a tool which display the current window size and position, move/resize window by hotkeys, and as a bonus, it can also rearrange the position of the applicaitons.</p><ol><li>Enable ‘Iconify window’ in the right menu</li><li>Press ‘alt’ and hold</li><li>Minimize the window you want to put on the rightest side</li><li>Find the icon of the window on ‘system tray’</li><li>click the cion to restore the window</li></ol><p>Now, the window is the last one in taskbar.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsizer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用OpenPGP和Psi进行加密通讯</title>
      <link href="/2009/03/24/psi-with-openpgp/"/>
      <url>/2009/03/24/psi-with-openpgp/</url>
      
        <content type="html"><![CDATA[<p>我们需要两个软件，</p><ol><li>psi，一个可以支持多种即时通信协议的开源软件。可以<a href="http://http://psi-im.org" target="_blank" rel="noopener" title="psi-im">&gt;&gt;点击这里&lt;&lt;</a>访问官方网站，下载最新版本。</li><li>GnuPG，一个OpenPGP的Gnu实现。可以<a href="http://www.gnupg.org" target="_blank" rel="noopener" title="GnuPG">&gt;&gt;点击这里&lt;&lt;</a>访问官方网站。Windows版本<a href="http://www.gpg4win.org" target="_blank" rel="noopener" title="Gpg4win">&gt;&gt;点击这里&lt;&lt;</a>，下载Gpg4win。</li></ol><p>首先，安装psi，创建相应的账号。Gtalk可以参考<a href="http://www.google.com/support/talk/bin/answer.py?answer=24074" target="_blank" rel="noopener">Google帮助</a>。其他的，比如msn，ICQ等等，可以自己在网上google。</p><p>然后安装Gpg4win。安装完成之后运行WinPT，会在系统托盘区域出现一个钥匙图标。</p><ol><li>双击钥匙图标，打开Key Manger。</li><li>在Key Manager的菜单上选择<span style="color: #99cc00;">Key-&gt;New-&gt;Normal</span>，出现Key Generation Wizard窗口。按照提示，输入用户名和email地址。选上Prefer RSA keys，使用RSA加密。</li><li>点击OK。出现Key Generation对话框。</li><li><span style="color: #ff0000;">设置你私钥的使用密码</span>。两次确认之后，就开始生成密钥对。</li><li>完成之后，在Key Manager中就会出现以你的用户名和email作为识别的User ID。</li></ol><p>密钥对生成了，接下来如何使用私钥和公钥呢？<br>首先要导出公钥：<br>6. 在Key Manager中选择你的密钥。<br>7. 在菜单中，选择<span style="color: #99cc00;">Key-&gt;Export…</span>，选择目录存放你的公钥。然后把它通过邮件或是其他方式发送给需要的人。你也可以<span style="color: #99cc00;">右键菜单-&gt;Send to Keyserver</span>，把Key发送到选择的服务器上，让别人从服务器上下载。</p><p>之后是导入对方的公钥。即当对方也如此设置，你得到了他的公钥之后，就可以导入了：<br>8. 在Key Manager的菜单上选择<span style="color: #99cc00;">Key-&gt;Import…</span>。<br>9. 选择对方给你的公钥，点击OK进行导入。成功后你会在Key Manager中看到对方的公钥，一个蓝色的钥匙图标。</p><p>最后，需要设置psi：<br>10. 重新启动psi，登陆后在Account setup中选择帐号，点击<span style="color: #99cc00;">Modify按钮</span>。<br>11. 在出现的Account Properties对话框中选择<span style="color: #99cc00;">Details页面</span>。<br>12.点击<span style="color: #99cc00;">Select Key…按钮</span>，选择需要使用的密钥。（设置好密钥之后，以后每次登陆该账号都需要输入步骤4中设置的密码。）<br>13. 在psi中，对方的联系人名字上面点击右键。<br>14. 在弹出的菜单中选择<span style="color: #99cc00;">Assign OpenPGP Key</span>。如果出现No key对话框，选择<span style="color: #99cc00;">Choose key manually</span>。选择对方的公钥。<br>15. 成功后对方名字后面会出现一个黄色的小锁。双击名字进入聊天状态，对话框中也会多一把小锁。如果锁的颜色是灰色的或是没有锁住，需要手动点击一下。如果双方都设置正确，就可以进入OpenPGP加密的聊天了。</p><p>注意：<span style="color: #ff0000;">如果你忘记了步骤4中的密码，将无法解码加密的聊天记录。所以请妥善保管该密码。</span></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openpgp </tag>
            
            <tag> psi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calculate window size in Vista</title>
      <link href="/2009/03/18/calculate-window-size-in-vista/"/>
      <url>/2009/03/18/calculate-window-size-in-vista/</url>
      
        <content type="html"><![CDATA[<p>Usually, we use <code>GetWindowRect</code> to calculate windows size in windows. It works always right until vista comes.</p><p>Under Vista, if you still use <code>GetWindowRect</code> to retrieve windows rectangle size, you can not always get the collect value.</p><p>For some windows which can not be resized, the function return bigger size than it is.</p><p>The problem is caused of the new Desktop Window Management features, exactly,  <a href="http://msdn.microsoft.com/en-us/library/bb688195(VS.85).aspx" target="_blank" rel="noopener" title="Custom Window Frame Using DWM">extending frame</a>.</p><p>To resolve the problem, you can use DWM api, <code>DwmGetWindowAttribute</code>, instead of the <code>GetWindowRect</code> before Microsoft fixed it.</p><p>The api which can be used like following,</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DwmGetWindowAttribute(h_wnd, DWMWA_EXTENDED_FRAME_BOUNDS, &amp;rt_target_wnd, <span class="keyword">sizeof</span>(RECT));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vista </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式基本规则</title>
      <link href="/2009/02/27/base-rules-of-regular-expression/"/>
      <url>/2009/02/27/base-rules-of-regular-expression/</url>
      
        <content type="html"><![CDATA[<p>这里不介绍正则表达式的基本概念，而是对其规则进行一些整理。网上的分类大<br>多是按照类似的功能来划分，贪婪、非贪婪，前向，后向，乱七八糟的让人很混<br>乱。这里只列出最基本的15中规则。只要掌握这15条规则，认识这些“元字符”，<br>剩下的就是遇到具体的表达式进行具体的分析了。</p><p>一.<br>‘’有两种情况，如果后面紧跟的为，<br>1.) 元字符，或我称之为“正则符”，如’^’，’’，’$’等等。此时，其代<br>表的意义为“取消后面紧跟的正则符的特殊含义”。<br>2.) 其他字符，则’’和其紧跟的另一字符组成“正则符”。如’r’，’t’等比<br>较通用。其他组合，各软件的实现或许会有细微的差别。</p><p>二. <strong>[]</strong><br>含义是匹配中括号中的任意字符。</p><p>三. <strong>[^]</strong><br>含义是匹配中括号中包含的字符以外的任意字符。</p><p>四. <strong>{}</strong><br>一般可以写成这样：{m,n}。含义是匹配表达式前一个字符<br>最少m次，最多n次。<br>其中m或n也可以省略一个，比如，<br>{n}，表示匹配前一个字符n次；<br>{m,}，表示匹配前一个字符只是m次。</p><p>五. <strong>()</strong><br>含义是把括号中的表达式当成一个整体来匹配，同时也可以在以后作为一个独立<br>的表达式来引用。</p><p>六. <strong>^</strong><br>含义是匹配字符串的开始。</p><p>七. <strong>$</strong><br>含义是匹配字符串的结尾。</p><p>八. <strong>?</strong><br>等于{0,1}。</p><p>九. <strong>+</strong><br>等于{1,}。</p><p>十. *****<br>等于{0,}。</p><p>十一. <strong>.</strong><br>含义是匹配除换行符以外的所以字符。</p><p>十二. <strong>|</strong><br>含义是匹配前面的字符或表达式或是匹配后面的字符。</p><p>十三. <strong>a-z</strong><br>含义是匹配所有小写的英文字符。</p><p>十四. <strong>A-Z</strong><br>含义是匹配所有的大写的英文字符。</p><p>十五. <strong>0-9</strong><br>含义是匹配所有的数字。</p>]]></content>
      
      
      <categories>
          
          <category> Information </category>
          
      </categories>
      
      
        <tags>
            
            <tag> regular expression </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emacs的三种行滚动方式</title>
      <link href="/2009/02/21/three-scroll-methods-in-emacs/"/>
      <url>/2009/02/21/three-scroll-methods-in-emacs/</url>
      
        <content type="html"><![CDATA[<p>第一种，光标到达屏幕边缘触发滚动。这是Emacs默认的滚动方式。</p><p>第二种，光标粘住某一行(stick the text line)，直到该行离开屏幕，光标停留在屏幕边缘。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">global-set-key</span>  [(<span class="name">meta</span> down)] (<span class="name">lambda</span> (<span class="name">&amp;optional</span> n) (<span class="name">interactive</span> <span class="string">"p"</span>)</span><br><span class="line">                              (<span class="name">scroll-up</span> (<span class="name">or</span> n <span class="number">1</span>))))</span><br><span class="line"></span><br><span class="line">(<span class="name">global-set-key</span>  [(<span class="name">meta</span> up)] (<span class="name">lambda</span> (<span class="name">&amp;optional</span> n) (<span class="name">interactive</span> <span class="string">"p"</span>)</span><br><span class="line">                              (<span class="name">scroll-down</span> (<span class="name">or</span> n <span class="number">1</span>))))</span><br></pre></td></tr></table></figure><p>第三种，光标停留在屏幕上的某一行(stick the absolut line)，无论怎么滚动，光标都不会移动。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;; scroll functions</span></span><br><span class="line">(<span class="name">defun</span> hold-line-scroll-up()</span><br><span class="line">  <span class="string">"Scroll the page with the cursor in the same line"</span></span><br><span class="line">  (<span class="name">interactive</span>)</span><br><span class="line">  <span class="comment">;; move the cursor also</span></span><br><span class="line">  (<span class="name">let</span> ((<span class="name">tmp</span> (<span class="name">current-column</span>)))</span><br><span class="line">    (<span class="name">scroll-up</span> <span class="number">1</span>)</span><br><span class="line">    (<span class="name">line-move-to-column</span> tmp)</span><br><span class="line">    (<span class="name">forward-line</span> <span class="number">1</span>)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">(<span class="name">defun</span> hold-line-scroll-down()</span><br><span class="line">  <span class="string">"Scroll the page with the cursor in the same line"</span></span><br><span class="line">  (<span class="name">interactive</span>)</span><br><span class="line">  <span class="comment">;; move the cursor also</span></span><br><span class="line">  (<span class="name">let</span> ((<span class="name">tmp</span> (<span class="name">current-column</span>)))</span><br><span class="line">    (<span class="name">scroll-down</span> <span class="number">1</span>)</span><br><span class="line">    (<span class="name">line-move-to-column</span> tmp)</span><br><span class="line">    (<span class="name">forward-line</span> <span class="number">-1</span>)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">(<span class="name">global-set-key</span> (<span class="name">kbd</span> <span class="string">"M-n"</span>) 'hold-line-scroll-up)</span><br><span class="line">(<span class="name">global-set-key</span> (<span class="name">kbd</span> <span class="string">"M-p"</span>) 'hold-line-scroll-down)</span><br></pre></td></tr></table></figure><p>这三种方式，第一种太简单了。第二、三种各有优缺点，所以绑定到不同的按键组合。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wsizer: 用键盘控制窗口</title>
      <link href="/2009/02/20/wsizer-control-window-by-keyboard/"/>
      <url>/2009/02/20/wsizer-control-window-by-keyboard/</url>
      
        <content type="html"><![CDATA[<p><strong>Wsizer</strong>是一个我刚刚开发完成的软件。它拥有我很喜欢的一些功能。和<a href="http://www.deskangel.com" target="_blank" rel="noopener" title="DeskAngel">DeskAngel</a>一样，那些功能都来源于日常使用的积累。</p><p>作为第一版，它包含三个部分的功能。</p><p>第一个功能，_<strong>最小化窗口到系统托盘区</strong>_。这个功能同样也包含在DeskAngel中，但是Wsizer取消了让用户感到疑惑的预定义的列表。<br>操作也和DA中的一样简单，按下’Alt’键，然后最小化窗口，窗口就会从任务栏上消失，改为出现在系统托盘区。系统托盘区的图标是窗口的主图标。</p><p>第二个功能是_<strong>显示窗口的大小和位置</strong>_。当窗口在屏幕上移动的时候，Wsizer在该窗口的中间画出大小和位置信息。用户可以根据需要选择仅仅显示<br>大小、位置或是全部。通过该功能你可以观察到一些有趣的事情，比如在窗口最大化之后，窗口的左上角不是位于(0, 0)坐标。</p><p>最后的功能是_<strong>热键功能</strong>_。通过预定义的热键，用户可以对当前窗口进行更多方便快捷的操作。<span style="color: #ff0000;">所有的热键都可以由用户自己更改</span>。<br>热键功能也可以分为三个部分：<br>1.) _改变窗口大小到预定义尺寸_。比如Wsizer默认提过3个预先定义的尺寸640x480;720x480;800x600，用户就可以通过快捷键’win+[‘和’win+]’<br>轻松控制窗口的大小。当窗口宽度小于640，按一下’win+[‘，窗口之间扩大到720x480；再按，扩大到800x600……；如果按’win+]’，窗口将缩<br>小到定义的大小。</p><p>2.)_ 改变窗口宽度或高度_。这个功能可以让用户单独控制窗口的宽度或是高度。预定于的快捷键为：<br>增加宽度：win+right<br>减少宽度：win+left<br>增加高度：win+down<br>减少高度：win+up</p><p>3.) _改变窗口位置_。以上的功能仅仅只是对窗口尺寸的控制。通过Wsizer，用户还可以方便的移动窗口。手一会离开键盘去拿鼠标，一会又放下鼠标<br>去敲键盘是比较累人而且没有效率的。因为在用鼠标的时候不想按键盘，我在DeskAngel中加入了映射’Right Button + Left Button’到’Alt + Right<br>Button’的功能，方便控制取词软件；因为在用键盘的时候不想去按鼠标，我在Wsizer中加入了热键移动窗口的功能。预定义的快捷键为：<br>窗口往左移动：win+ctrl+left<br>窗口往右移动：win+ctrl+right<br>窗口往上移动：win+ctrl+up<br>窗口往下移动：win+ctrl+down</p><p>如果你喜欢上述的功能，现在就可以下载试用：<a href="http://wsizer.deskangel.com/download.html" target="_blank" rel="noopener">http://wsizer.deskangel.com/download.html</a></p><p>任何问题都可以发送邮件或是访问论坛。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsizer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在ntemacs下使用系统的输入法</title>
      <link href="/2009/02/07/use-system-input-method-in-ntemacs/"/>
      <url>/2009/02/07/use-system-input-method-in-ntemacs/</url>
      
        <content type="html"><![CDATA[<p>如果emacs可以正常显示中文，但是在用系统的输入法输入的时候，会变成乱码，那么可以试试在.emacs中加入：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">set-keyboard-coding-system</span> 'chinese-iso-8bit)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeskAngel使用指南</title>
      <link href="/2009/02/05/usermanual-of-deskangel/"/>
      <url>/2009/02/05/usermanual-of-deskangel/</url>
      
        <content type="html"><![CDATA[<p>DeskAngel使用指南<br>（括号中为菜单中的名字，该功能可通过菜单开启或关闭）</p><p>DeskAngel集成了很多有用的功能，是使用windows系统的人士日常</p><p>办公不可或缺的一款工具。下面将详细描述一些主要的功能。</p><p>1. 切换窗口永在最前状态（激活窗口最前功能）<br>对经常在电脑上编辑文件的人来说，这是非常有用的一个功能。比如你需要从多个文件中收集资料，并把它们汇总到一个最终文件。这时你可以把打开最终文件的窗口固定在最前面，这样无论切换到哪个窗口，你都可以看到最后的文件的样子，而且大大减少移动鼠标和按键盘的次数。</p><p>切换窗口永在最前状态是在窗口的标题栏上右键单击鼠标。如果原来的窗口状态不是永在最前，此时就会变成永在最前窗口；反之则还原。原来在标题栏上右击会弹出的菜单则被禁止，大部分人从来不会用到那个菜单。</p><p>2. 直接滚动文档<br>直接滚动文档主要是指滚动非激活窗口的文档。一般情况下，只有被激活的窗口才可以接收鼠标和键盘的输入。要滚动文档，必须先激活该文档所在的窗口，获得输入焦点，同时，原来的窗口则失去焦点，无法再接收输入信息。直接滚动文档功能超越了这个限制。你可以保留原来窗口的输入焦点，而滚动其他窗口的文档或页面。</p><p>比如你正在写一个文档，底下同时打开了一个文件作为你的参考。当需要滚动参考文档的时候，按照以前的步骤，需要：<br>a.) 先移动鼠标到需要滚动的窗口<br>b.）点一下激活该窗口<br>c.) 滚动文档<br>d.）把鼠标移回原窗口<br>e.）点一下激活<br>f.）输入<br>如果使用直接滚动功能，只要把鼠标放在需要滚动的窗口中，需要的时候滚一下滚轮就可以了。既没有用Alt+tab切换时的屏幕闪烁、顺序混乱，也不需要在聚精会神写文章的时候来回移动并点击鼠标。</p><p>3. 屏幕抓图（屏幕抓图至文件，屏幕抓图）<br>屏幕抓图，然后存到一个文件，这样的功能有很多软件已经实现了。但是DeskAngel提供了一个别的程序没有的功能，就是在把截图保存到文件之后，在剪切板中返回该文件的路径。这样有什么用呢？</p><p>来看一个情景。</p><p>比如你抓了一张图片，然后想把它贴到论坛上。普通的做法是，<br>a.) 点击论坛上的打开按钮，弹出打开文件对话框<br>b.) 在那里不停的点击，寻找那张图片所在的文件夹<br>c.) 因为文件名不太好认，需要预览，确认<br>d.) 最后，上传了。<br>如果用DeskAngel的话，只需要<br>a.) 打开对话框<br>b.) 在对话框的地址栏里右键或是Ctrl+V粘贴图片路径<br>c.) 然后上传即可。</p><p>有些论坛甚至不需要打开对话框，直接在编辑框里粘贴地址即可上传。</p><p>如果不选该功能，抓取的图片会存在剪切板上，也是比较好用的。</p><p>4. 模拟win键（模拟win键）<br>很多键盘，特别是一些笔记本，比如以前的thinkpad，都没有提供win键。虽然它们提供的一些随机软件也能模拟win键，但是功能太弱。</p><p>就拿thinkpad那说，随机软件可以把左alt模拟成win键，但是按下左alt之后只能弹出开始菜单而已，以win键为修饰键的一些快捷键全都不起作用。</p><p>有一些软件也能完全模拟win键，比如KeyTweak，但是每次改动之后都要重启系统才可以生效。</p><p>DeskAngel开启模拟win键的功能后，把win键指定到比较不常用的F6。如果以后要用到F6，可以在菜单中随时关闭模拟即可。</p><p>5. 最大化/还原窗口（中键功能）<br>很多人都不知道，鼠标的滚轮是可以和左右键一样单击的，它的功能是以前三键鼠标的中键。DeskAngel把单击滚轮设置为最大化/还原鼠标下的窗口。如果你不喜欢，或是用其他软件指定成别的功能，可以通过菜单关闭即可。</p><p>6. 自动滚动文档<br>这是另一个非常酷的功能。当你按下鼠标滚轮，如果不做滚动，直接放开，就是放大还原功能；如果保持按下，并往前或是往后滚动一下，文档就自动开始滚动；如果此时往同方向再滚动一次，文档将加速滚动；同方向滚动越多，加速越快。</p><p>当你觉得差不多了，不要马上放开滚轮按键，先按下右键并保持，滚动将会暂停。这时你可以仔细看一下是否是需要的内容。放开右键，继续滚动；放开滚轮，终止滚动。</p><p>7. 左右键模拟alt+右键（左右键-&gt;Alt+右键）<br>这个功能对经常使用翻译软件屏幕取词的人比较有用。大多数的翻译软件提供鼠标直接取词和按下键盘某键再点击鼠标取词。前者鼠标一动，取词窗口就弹出或是更新，既浪费系统资源，又影响阅读；后者当你靠着椅背阅读的时候，一手抓鼠标，一手还得抓键盘。DeskAngel提供的这个功能，可以解放你的一只手去抓饮料。</p><p>要使用该功能，先在翻译软件中设置屏幕取词快捷键为Alt+右键，然后在DeskAngel的菜单中启用该功能。之后，遇到不认识的单词，只需按下鼠标左键并保持，再按下鼠标右键即可。</p><p>8. 卷起窗口（卷起窗口至标题栏）<br>某些庞大复杂的软件会有这个功能，把窗口除标题栏之外隐藏起来。DeskAngel也能实现这个功能。只需要在标题栏上双击即可。要展开也是双击。原本双击标题栏最大化和还原的功能被屏蔽。因为你可以使用滚轮键。</p><p>9. 半透明窗口（透明窗口）<br>半透明化的窗口可以让你看到窗口下面的内容。激活该功能后，使用Ctrl+Alt+滚轮，即可调节窗口的透明度，非常方便。</p><p>10. 关闭显示器（关闭显示器）<br>笔记本上一般都有关闭显示器的快捷键，但是标准键盘上没有。有时候要趴在电脑前小睡一下，就可以用这个功能把显示器暂时关闭。要用显示器的时候，一动鼠标或键盘即可。</p><p>11. 获取窗口信息（获取窗口信息）<br>这是一个辅助功能，启用该功能后，右键单击任意窗口，在屏幕的左上方会显示该窗口的类名；根窗口的类名和当前是否是最前窗口。</p><p>要恢复右键功能，必须用左键单击DeskAngel图标，在弹出的菜单上先取消该功能，右键才会恢复。</p><p>12. 最小化窗口至系统通知区域（允许图标化指定窗口）<br>这个功能是需要自己编辑配置文档的。</p><p>打开settings.ini文件，找到[notifyicon]，在list=后面加上程序的全路径，（逗号再加空格），然后是窗口的类名。</p><p>默认的设置提供了一些范例，可以照着修改。改错了也没有关系，只是不起作用而已。</p><p>也许以后作者或其他人会写一个工具来设置这个配置文件。</p><p>以上是一些比较常用的功能，还有比如输入的时候可以隐藏鼠标，先点击窗口下边框然后按左右边框可拖动窗口（为移动鼠标不方便的人士）等等。</p><p>配置文件settings.ini中也有很多可以微调的地方，比如设置屏幕抓图的格式（支持png, bmp, jpeg, tiff和gif），最小透明度等。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deskangel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wildcard search with source code (C language)</title>
      <link href="/2009/02/04/wildcard-search-with-source-code-c-language/"/>
      <url>/2009/02/04/wildcard-search-with-source-code-c-language/</url>
      
        <content type="html"><![CDATA[<p>Using recursive procedure to deal with the wildcard search. It is too easy to comment.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// b_full means the whole string matching</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">WildSearch</span><span class="params">(<span class="keyword">char</span> *psz_buf,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">int</span> n_buflen,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">char</span> *psz_sub,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">int</span> n_sublen,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">bool</span> b_full,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">char</span> sz_prechar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n_buflen == <span class="number">0</span> &amp;amp;&amp;amp; n_sublen != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n_sublen == <span class="number">1</span> &amp;amp;&amp;amp; psz_sub[<span class="number">0</span>] == <span class="string">'*'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n_buflen != <span class="number">0</span> &amp;amp;&amp;amp; n_sublen == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b_full)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n_buflen == <span class="number">0</span> &amp;amp;&amp;amp; n_sublen == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (psz_sub[<span class="number">0</span>] == <span class="string">'*'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psz_sub++;</span><br><span class="line">        n_sublen--;</span><br><span class="line">        <span class="keyword">if</span> (n_sublen == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> WildSearch(psz_buf, n_buflen, psz_sub, n_sublen, b_full, <span class="string">'*'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (psz_sub[<span class="number">0</span>] == <span class="string">'?'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        psz_buf++;</span><br><span class="line">        n_buflen--;</span><br><span class="line">        psz_sub++;</span><br><span class="line">        n_sublen--;</span><br><span class="line">        <span class="keyword">return</span> WildSearch(psz_buf, n_buflen, psz_sub, n_sublen, b_full, <span class="string">'?'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *psz_star_pos = <span class="built_in">strchr</span>(psz_sub, <span class="string">'*'</span>);</span><br><span class="line">        <span class="keyword">char</span> *psz_question_pos = <span class="built_in">strchr</span>(psz_sub, <span class="string">'?'</span>);</span><br><span class="line">        <span class="keyword">int</span> n_len_to_star = (psz_star_pos == <span class="literal">NULL</span>) ? (<span class="keyword">int</span>)<span class="built_in">strlen</span>(psz_sub) : (<span class="keyword">int</span>)(psz_star_pos - psz_sub);</span><br><span class="line">        <span class="keyword">int</span> n_len_to_question = (psz_question_pos == <span class="literal">NULL</span>) ? (<span class="keyword">int</span>)<span class="built_in">strlen</span>(psz_sub) : (<span class="keyword">int</span>)(psz_question_pos - psz_sub);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n_compare_len = n_len_to_question &amp;gt; n_len_to_star ? n_len_to_star : n_len_to_question;</span><br><span class="line">        <span class="keyword">if</span> (_strnicmp(psz_buf, psz_sub, n_compare_len) == <span class="number">0</span>)</span><br><span class="line">        <span class="comment">//if (psz_buf[0] == psz_sub[0])</span></span><br><span class="line">        &#123;</span><br><span class="line">            sz_prechar = psz_sub[<span class="number">0</span>];</span><br><span class="line">            psz_buf++;</span><br><span class="line">            n_buflen--;</span><br><span class="line">            psz_sub++;</span><br><span class="line">            n_sublen--;</span><br><span class="line">            <span class="keyword">return</span> WildSearch(psz_buf, n_buflen, psz_sub, n_sublen, b_full, sz_prechar);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sz_prechar != <span class="string">'*'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            psz_buf++;</span><br><span class="line">            n_buflen--;</span><br><span class="line">            <span class="keyword">return</span> WildSearch(psz_buf, n_buflen, psz_sub, n_sublen, b_full, sz_prechar);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> sz_buf[] = <span class="string">"abcdefghijk"</span>;</span><br><span class="line">    <span class="keyword">char</span> sz_sub[] = <span class="string">"abc?e*fg?i?*k*"</span>;</span><br><span class="line">    <span class="comment">//char sz_sub[] = "ae";</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> b_result = WildSearch(sz_buf, (<span class="keyword">int</span>)<span class="built_in">strlen</span>(sz_buf), sz_sub, (<span class="keyword">int</span>)<span class="built_in">strlen</span>(sz_sub), <span class="literal">false</span>, <span class="string">' '</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b_result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeskAngel, why I develop it</title>
      <link href="/2009/02/04/deskangel-why-i-develop-it/"/>
      <url>/2009/02/04/deskangel-why-i-develop-it/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.deskangel.com" target="_blank" rel="noopener" title="DeskAngel">DeskAngel</a> is a desktop enhancement tool for windows operation system. In order to arrange my daily work and make the windows more fashion. I started to develop it on year 2002, under windows 2000 pro. It went through windows 2000, windows xp and now arrived at windows vista. Some features are dropped in the journey, but more are added.</p><p>Under windows 2K, ‘connect to remote pc’ is one of my favorites. Because in our office, we should access data share pc, our assistant’s pc, my colleagues’ pc and etc. Sometimes we must delete the previous connection in order to fire a new connection request. It helped me much. But windows xp comes and, it can remember network accounts and passwords, the feature became outdated.</p><p>Then, I have my first notebook, IBM thinkpad r40e. It has a full-size keyboard, but is lack of win key. I used to lock my system by ‘win+l’ hotkey when I left and won’t like to change it. IBM do provided a tool to map alt or control to win key, but the mapped key only pop up start menu. It could not be used as a modifier key. I also tried some other keymap tools, some of them can do the job, but they all need to restart the windows after mapped. So, I implemented the feature myself. I’m a programmer, huh!</p><p>Nowadays, my most loves are: ‘set window top most’, ‘maximize/restore by middle click’, ‘inactive document scroll’, ‘left+right-&gt;alt+right’ and ‘screen clipping’. ‘turn off monitor’ and ‘auto scroll’ are also very useful when I’m working on a desktop pc. Now, things become common and usual. Says, if you never knew it, never had it, and never used it, life won’t be different, but once you have it, you couldn’t live without it. DeskAngel is such a tool.</p><p>Besides the features that make daily works easy, DeskAngel also offers some functions which make windows look a little cool and fashion. In the age of windows 2k, DeakAngel can make the text background of icons on desktop transparent, just like other softwares do. Windows xp can transparent it by itself, so that is another feature which was dropped by time. But that is not the only effect that DA can do.</p><p>The operation system of windows 2k and laters provide a way to create a translucent window, DA can do it for every windows alread created on desktop. Linux can display only the title of a window, DA can do it. Linux display a cross-arrow cursor when you are moving a window, DA can do it. Windows 7 displays only icons on taskbar, DA can do it. Windows 7 can snap a window to the edges of screen, DA can do it too. :-) And one of the users want to hide the cursor when he is typing in non-microsoft applications, now it’s available.</p><p>Until Now, DeskAngel has about 20 features and most of them can be disabled if you don’t like it. DA is totally free, and portable, without any advertisement, backdoor or something like that. After started, you can find it on the system notification area, aka system tray. It is running in background, silently. If you don’t like it, double click the icon to exit. If you like it, signle click or right click it and select ‘start with windows’.</p><p>As it is a tool that I also use day by day, bugs will be fixed immediately and new features will be added quickly if they are useful, sometimes it will be updated frequently. No matter how many features will be added, small, simple and fast are the most important things I have considered.</p><p>Feel free to <a href="http://www.deskangel.com/deskangel/download.html" target="_blank" rel="noopener">download</a> it and have a try. Any kind of <a href="mailto:william.xue@gmail.com?subject=[DeskAngel]">feedback</a> are welcome.</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> deskangel </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
